function extractHostname(e) { var t; return (t = (t = e.indexOf("//") > -1 ? e.split("/")[2] : e.split("/")[0]).split(":")[0]).split("?")[0] } function repositionMobileImage(e) { if ("undefined" != typeof vodus) { var t = vodus.getAppData(); $(e).find(".quesionaire-preview-question-mobile-preview").length > 0 && (resizeMobileFontSize_Preview(e, t.ccType), $(e).find(".questionaire-container-size-variable").css("height", "fit-content"), $(e).find(".mobile-question-container").css("height", "auto")) } } function VodusRewardClickToClose() { closeAllVodusModal(), vodus.submitCloseResponse(), vodus.log("Rewards click to close"), localizePage(), i18next.reloadResources() } function closeAllVodusModal() { vodus.displayHeight = $(window).scrollTop(), $(".ccType2").hide(), $(".ccType3").hide(); var e = vodus.getAboutUsModal(); "" != e && e.isOpen() && e.close(); var t = vodus.getQuestionModal(); "" != t && t.isOpen() && t.close(); var a = vodus.getLoginModal(); "" != a && a.isOpen() && a.close(); var o = vodus.getSignupModal(); "" != o && o.isOpen() && o.close() } function BackButtonClick() { addShowGetQuestionModal() } function addLogoutEvent() { $(".btnVodusLogout").unbind("click"), $(".btnVodusLogout").click(function () { isSubmitting = !0; var e = vodus.getAppData(); e.thirdPartyEnabled ? (0 == $("#vodus_3PTest").length && $("<div>").attr({ class: "", id: "vodus_3PTest" }).appendTo("body"), 0 == $("#reward_3PTest").length && $("<div>").attr({ class: "", id: "reward_3PTest" }).appendTo("body"), vodus.log("Clearing 3P..."), $("#vodus_3PTest").html('<iframe id="vodus3PLogoutTest" width="0" height="0"  src="' + e.vodus3PRootUrl + "/v1/token/delete?partnerCode=" + e.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#reward_3PTest").html('<iframe id="reward3PLogoutTest" width="0" height="0"  src="' + e.reward3PRootUrl + "/token/delete-temporary-points?partnerCode=" + e.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#vodus3PLogoutTest").on("load", function () { var t = vodus.getRewardLogoutCallback(); vodus.log("Rewards logout callback => " + vodus.getRewardLogoutCallback()), null != t && t.length > 0 && (closeAllVodusModal(), vodus.log("Logout callback -> " + t), $("#vodusQuestionModal").modal("hide"), closeAllVodusModal(), window[t].apply(this, vodus.getRewardLogoutArgument())), closeAllVodusModal(), "ms" == e.language ? toastr.success("", '<h4 style="padding:0 15px">Anda telah berjaya log keluar dari akaun Vodus anda.<h4>') : "zh" == e.language ? toastr.success("", '<h4 style="padding:0 15px">您已成功登录您的Vodus帐户</h4>') : toastr.success("", '<h4 style="padding:0 15px">You have successfully logged out from your Vodus account</h4>'), $("#toast-container").addClass("vodus-responded-toast") })) : (closeAllVodusModal(), "ms" == e.language ? toastr.success("", '<h4 style="padding:0 15px">Anda telah berjaya log keluar dari akaun Vodus anda.<h4>') : "zh" == e.language ? toastr.success("", '<h4 style="padding:0 15px">您已成功登录您的Vodus帐户</h4>') : toastr.success("", '<h4 style="padding:0 15px">Successfully logged out from your Vodus account</h4>'), $("#toast-container").addClass("vodus-responded-toast")), vodus.log("logging out..."), vodus.createCookie(e.cookieName, "", -3650), vodus.createCookie("vodus_temp_token", "", -3650), vodus.createCookie("vodus_second_load_check", "", -3650), localStorage.clear(), window.open(e.reward3PRootUrl + "/logout?partnerWebsiteId=" + e.partnerWebsiteId) }) } function addShowLoginModalEvent() { var e = vodus.getAppData(), t = vodus.readCookie(e.cookieName), a = vodus.readCookie("vodus_temp_token"); if (e.thirdPartyEnabled) $(".syncType4").attr("href", e.reward3PRootUrl).attr("href", e.reward3PRootUrl).attr("target", "_blank"), $(".vodusLoginLink").attr("href", e.reward3PRootUrl + "/?login"), $(".vodusSignupLink").attr("href", e.reward3PRootUrl + "/?login"); else if (null == t || "" == t) { var a = vodus.readCookie("vodus_temp_token"), o = e.reward3PRootUrl + "/sync?syncType=2&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&tempToken=" + a + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname), n = e.reward3PRootUrl + "/sync?syncType=4&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&tempToken=" + a + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname); $(".syncType4").attr("href", n).attr("target", "_blank"), $(".vodusLoginLink").attr("href", o), $(".vodusSignupLink").attr("href", o) } else { var o = e.reward3PRootUrl + "/sync?syncType=2&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&token=" + t + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname), n = e.reward3PRootUrl + "/sync?syncType=4&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&token=" + t + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname); $(".syncType4").attr("href", n).attr("target", "_blank"), $(".vodusLoginLink").attr("href", o), $(".vodusSignupLink").attr("href", o) } $(".closeQuestion").click(function () { closeAllVodusModal() }), $(".syncType4").click(function () { if (vodus.createCookie("vodus_sync_clicked", "Y", 3650), "mobile-app" == e.viewType) return vodusAndroidSdk.openUrl($(this).attr("href")), !1 }), $(".vodusLoginLink").click(function () { if (vodus.createCookie("vodus_sync_clicked", "Y", 3650), closeAllVodusModal(), "mobile-app" == e.viewType) return vodusAndroidSdk.openUrl($(this).attr("href")), !1 }), $(".vodusSignupLink").click(function () { vodus.createCookie("vodus_sync_clicked", "Y", 3650), closeAllVodusModal() }), (window.location.hostname.indexOf("vodus.my") > -1 || window.location.hostname.indexOf("voupon-uat.azurewebsites.net") > -1) && ($(".syncType4").attr("href", "#").attr("target", ""), $(".vodusLoginLink").attr("href", "#").attr("target", ""), $(".vodusSignupLink").attr("href", "#").attr("target", ""), $(".vodusLoginLink").click(function () { $(".vouponLogin").click(), closeAllVodusModal() }), $(".syncType4").attr("href", "#").attr("target", "")) } function scrollToBannerDiv(e) { $(".bootstrap-vodus").each(function () { "none" == $(this).css("display") && $(this).remove() }), window.scrollTo(0, e) } function addShowGetQuestionModal() { var e = vodus.getAppData(), t = !1; if ($($("#divQuestionaireEditorContainer").find(".answer-box")).each(function () { (0 == $(this).attr("id") || "0" == $(this).attr("id")) && (t = !0) }), "mobile-app" == e.viewType && $(".ctc-container").hide(), t) { $("#divQuestionaireEditorContainer").find("img").remove(), $("#divQuestionaireEditorContainer").find(".template-background-img").css("display", "none"), e.isAnswerIDZeroLogged || (e.isAnswerIDZeroLogged = !0, $.ajax({ type: "POST", dataType: "json", async: !0, global: !1, contentType: "application/json; charset=utf-8", data: JSON.stringify({ Browser: e.browser, MemberProfileId: e.memberProfileId, Data: $("#divQuestionaireEditorContainer").html(), Token: vodus.getToken() }), url: e.serverlessUrl + "/api/logDataSyncFunction", success: function (e) { }, error: function (t) { vodus.log(t, e.logStatus.err) } })); return } var a = $(window).scrollTop(); closeAllVodusModal(); var o = new tingle.modal({ footer: !1, stickyFooter: !1, closeMethods: ["button"], closeLabel: "Close", cssClass: ["bootstrap-vodus", "2" == e.ccType ? "ccType2" : "3" == e.ccType ? "ccType3" : "ccType1"], onOpen: function () { ("2" == e.ccType || "3" == e.ccType) && ($("body").removeClass("tingle-enabled"), repositionMobileImage($(".tingle-modal-box")), e.isBannerMode && $("body").css("top", "unset")) }, onClose: function () { }, beforeOpen: function () { ("2" == e.ccType || "3" == e.ccType) && ($(".tingle-modal__close").remove(), $(".bootstrap-vodus").removeClass("tingle-modal").addClass(e.catfishPosition), $(".click-to-close-div").hide(), $(".vodus-banner").html(""), $(".vodus-banner").length > 0 && "3" == e.ccType && e.isBannerMode ? $(".bootstrap-vodus").detach().appendTo(".vodus-banner") : $(".vodus-banner").length > 0 && "2" == e.ccType && e.isBannerMode && $(".bootstrap-vodus").detach().appendTo(".vodus-banner"), $(".bootstrap-vodus").append("<style>.tingle-enabled {position:unset;overflow:auto;}</style>")) } }), e = vodus.getAppData(); if (vodus.log(e), "" != vodus.getPixelData()) { vodus.log("Pixel: " + vodus.getPixelData()); var n = '<img id="pixel" src="' + vodus.getPixelData() + '" style="display:none">'; o.setContent($("#vodusQuestionModal").html() + n), $("#divQuestionaireEditorContainer").html(e.questionData.data.QuestionTemplateContent) } else vodus.log("No Pixel data."), o.setContent($("#vodusQuestionModal").html()), $("#divQuestionaireEditorContainer").html(e.questionData.data.QuestionTemplateContent); e.isUrlSyncRequired = !0; var i = vodus.readCookie(e.cookieName); if (e.isUrlSyncRequired && (e.surveyType = 1, !e.thirdPartyEnabled)) { $(".iHaveSeenThisQuestionBefore").click(function () { vodus.createCookie("vodus_sync_clicked", "Y", 3650) }); var r = vodus.readCookie("vodus_sync_clicked"); if (null == r || "" == r) { if (null == i || "" == i) { var s = vodus.readCookie("vodus_temp_token"); $(".answered-before").show(), $(".iHaveSeenThisQuestionBefore").attr("href", e.reward3PRootUrl + "/sync?syncType=1&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&tempToken=" + s + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname)), $(".iHaveSeenThisQuestionBefore").click(function () { closeAllVodusModal() }) } else (null == e.email || "" == e.email) && ($(".answered-before").show(), $(".iHaveSeenThisQuestionBefore").attr("href", e.reward3PRootUrl + "/sync?syncType=1&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&token=" + i + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname)), $(".iHaveSeenThisQuestionBefore").click(function () { closeAllVodusModal() })) } } if (vodus.setQuestionModal(o), o.open(), reinitModalEvent(), getQuestionHandler(), e.isBannerMode && scrollToBannerDiv(a), null != e.pipeList && "" != e.pipeList) { vodus.log("Piping..."); var l = !1, d = 0, u = $(".question-header-1").eq(0).html(); for (var c in e.pipeList) { l = !1, isAutoGen = !1, d++; var p = e.pipeList[c].split(":").pop().split(" & "); if (null != e.pipeAnswerIdList && e.pipeAnswerIdList.length > 0) g = e.pipeAnswerIdList; else if (null != e.idsForPipeList) var g = e.idsForPipeList[c].split(":").shift().split(" & "); var m = !0; $("#GridMultipleAnswersPipingId").length && (m = $("#GridMultipleAnswersPipingId").html().includes(c)), u.includes(c) && !m && (l = !0), $("#GridMultipleAnswersPipingId").length && $("#GridMultipleAnswersPipingId").html().includes(c) && (isAutoGen = !0); var v = !1; $("#PsychographicMultipleAnswersPiping").length && (v = !0); var h = !1, y = !1; c.indexOf("@") >= 0 ? (newTitle = $(".question-header-1").eq(0).html().split(c.substring(0, c.lastIndexOf("@") + 1)).join(e.pipeList[c]).replace(/\~/g, "&"), y = !0) : c.indexOf("^") >= 0 && (newTitle = $(".question-header-1").eq(0).html().split(c.substring(0, c.lastIndexOf("^") + 1)).join(e.pipeList[c]).replace(/\~/g, "&"), h = !0), $(".question-header-1").eq(0).html(newTitle), $(".question-header-1").eq(1).html(newTitle), $(".answer-box").each(function () { $(this).find(".s-editable-text").each(function () { if (y) { if ("GridMultipleAnswersPipingId" == $(this).attr("id") && 5 == e.questionData.data.QuestionTypeId) return !0; var t = $(this).html().split(c.substring(0, c.lastIndexOf("@") + 1)).join(e.pipeList[c]) } else if (h) { if ("GridMultipleAnswersPipingId" == $(this).attr("id") && 5 == e.questionData.data.QuestionTypeId) return !0; var t = $(this).html().split(c.substring(0, c.lastIndexOf("^") + 1)).join(e.pipeList[c]) } t = t.replace(/\~/g, "&"), $(this).html(t) }) }), (y || h) && (null != e.pipeAnswerIdList && e.pipeAnswerIdList.length > 5 && $(".template-preview-answer-to-display-table-content").attr("col", "2"), $(".template-preview-answer-to-display-table-content").addClass("autogen-answer")), e.isMobile && 5 == e.questionData.data.QuestionTypeId ? $(".tingle-modal-box__content").find(".mobile-question-container").each(function () { $(this).find(".s-editable-text").each(function () { if ("GridMultipleAnswersPipingId" == $(this).attr("id")) { if (l || !isAutoGen) return !0; var t = 1, a = 0; for (var o in p) { if (c.indexOf("@") > 0) var n = $(this).html().split(c.substring(0, c.indexOf("@") + c.length + 1)).join(p[o]); else var n = $(this).html().split(c.substring(0, c.indexOf("^") + c.length + 1)).join(p[o]); var i = $(this).parent().parent().clone(); n = n.replace(/\~/g, "&"), i.find(".s-editable-text").html(n), i.find(".s-editable-text").attr("data-pipe-answer-id", g[a]), i.find(".s-editable-text").addClass("AutoGenPiping"), $(this).parent().parent().parent().prepend(i), i.find(".gridOption").each(function () { $(this).attr("id", "grid_row_" + t), $(this).attr("name", "grid_row_" + t), $(this).attr("data-pipe-answer-id", g[a]), $(this).addClass("AutoGenPiping"), $(this).click(function () { $(this).parent().parent().find("td").removeClass("selectedGridItem"), $(this).parent().addClass("selectedGridItem"), $("#divQuestionaireEditorContainer").find(".survey-submit-btn").click() }) }), t++, a++ } $(this).parent().parent().remove(); var r = new Date, s = e.questionData, d = s.data.QuestionDelayLengthInSeconds, t = 0, u = 1; $(".s-selectable-text").css("border", "none"), answerIdList = [], $(s.data.SurveyQuestionAnswers).each(function () { $(".template-preview-answer-to-display-table-content").eq(0).attr("id", this.Id) }); var m = $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).find("table"), v = $(m).find(".grid-row").length, h = 0, y = $(m).css("background-color"), f = $(".question-header-1").eq(0).text(), b = ""; $(m).find(".grid-row").each(function () { t++; var e = $(this).find("td").eq(0).find(".s-selectable-text").hasClass("AutoGenPiping") ? "AutoGenPiping" : ""; b += '<div class="mobileGridTitle" style="display:none;" id="mobileGridRow_' + t + '"><span style="font-style:italic;font-weight:400;">(' + t + "/" + v + ')</span><span class="' + e + '" id="mobileGridRowTitle_' + t + '" data-pipe-answer-id="' + $(this).find("td").eq(0).find(".s-selectable-text").attr("data-pipe-answer-id") + '" style="margin-left:0.5em;">' + $(this).find("td").eq(0).find(".s-selectable-text").text() + "</span></div>" }), f += b, $(".question-header-1").eq(0).html(f), $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").html(""); var T = "", C = 0; $(m).find(".grid-header").eq(0).find("td").each(function () { var e = $(this).find(".s-selectable-text").text(); if ("" != e) { var t = $(window.vodus_grid_mobile_tag).find(".grid-header").eq(0).find("td").eq(C).find(".s-selectable-text").text(); T += '<div class="mobile-grid-div answer-box selectGridMobileAnswer" id="selectGridMobileAnswer_' + C + '" style="width: 98%; background-color:' + y + '; float:left;" data-answer="' + e + '" data-default-answer="' + t + '"><div class="s-editable-text">' + e + "</div></div>" } C++ }), $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).html(T), $(m).eq(0).hide(), $("#mobileGridRow_1").show(), $("#divQuestionaireEditorContainer").find(".survey-submit-btn").hide(), t = 0; var w = 1; $(".selectGridMobileAnswer").click(function () { if (h++, 1 == this.id.split("_")[1]) { var a = $(window.vodus_grid_mobile_tag).find(".grid-row").eq(u - 1).find(".s-selectable-text").text(); $(".mobileGridTitle").hide(); var o = { id: $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).attr("id"), pipeSurveyQuestionAnswerId: "undefined" == $(".question-header-1").eq(0).children().eq(u - 1).children().eq(1).attr("data-pipe-answer-id") ? 0 : $(".question-header-1").eq(0).children().eq(u - 1).children().eq(1).attr("data-pipe-answer-id"), isAutoGenPiping: $(".question-header-1").eq(0).children().eq(u - 1).children().eq(1).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: "undefined" == $(".question-header-1").eq(0).children().eq(u - 1).children().eq(1).attr("data-pipe-answer-id") ? ++w : w + 100 + t, answerValue: a + " -- " + $(this).attr("data-default_answer"), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; answerIdList.push(o), u++, t++, $("#mobileGridRow_" + u).fadeIn() } if (v == h && answerIdList.length > 0) { var n = Math.round(new Date().getTime() / 1e3 - r.getTime() / 1e3) + d, i = { CommercialId: s.data.CommercialId, SurveyQuestionId: s.data.Id, SurveyQuestionTypeId: s.data.QuestionTypeId, DemographicTypeId: s.data.DemographicTypeId, TierId: null == s.data.SurveyQuestionTier ? 0 : s.data.SurveyQuestionTier.Id, TierNumber: null == s.data.SurveyQuestionTier ? 0 : s.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == s.data.SurveyQuestionTier ? 0 : s.data.SurveyQuestionTier.SequenceNumber, ParentId: null == s.data.SurveyQuestionTier ? 0 : s.data.SurveyQuestionTier.ParentId, SurveyType: s.data.SurveyType, SelectedResponseList: answerIdList, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: n, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; submitEnabled = !1, vodus.setSurveyResponse(i), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }) } }) }) : $("#GridMultipleAnswersPipingId").length && 1 == e.questionData.data.QuestionTypeId && e.isMobile ? $(".template-preview-answer-to-display").each(function () { $(this).find(".s-editable-text").each(function () { if ("GridMultipleAnswersPipingId" == $(this).attr("id")) { if (l || !isAutoGen) return !0; var t = e.questionData, a = 0; if ($("#divQuestionaireEditorContainer").find(".answer-box").length == t.data.SurveyQuestionAnswers.length) $(t.data.SurveyQuestionAnswers).each(function () { 0 === t.data.DemographicTypeId && ($(".answer-box").eq(a).attr("id", this.Id), $(".answer-box").eq(a).attr("data-redirect-url", this.RedirectUrl), a++) }); else if (console.log("zz"), 2 == t.data.SurveyQuestionAnswers.length) { console.log("zz22"); for (var o = 0; o < $("#divQuestionaireEditorContainer").find(".answer-box").length - 1; o++)console.log(t.data.SurveyQuestionAnswers[0].Id), $(".answer-box").eq(a).attr("id", t.data.SurveyQuestionAnswers[0].Id), $(".answer-box").eq(a).attr("data-redirect-url", t.data.SurveyQuestionAnswers[0].RedirectUrl), a++; $(".answer-box").eq(a).attr("id", t.data.SurveyQuestionAnswers[1].Id), $(".answer-box").eq(a).attr("data-redirect-url", t.data.SurveyQuestionAnswers[1].RedirectUrl) } else $(t.data.SurveyQuestionAnswers).each(function () { 0 === t.data.DemographicTypeId && (console.log(this.Id), $(".answer-box").eq(a).attr("id", this.Id), $(".answer-box").eq(a).attr("data-redirect-url", this.RedirectUrl), a++) }); var n = 0; for (var i in p) { var r = $(this).parent().clone(!0, !0); p[i] = p[i].replace(/\~/g, "&"), r.find(".s-editable-text").html(p[i]), r.attr("data-pipe-answer-id", g[n]), r.addClass("AutoGenPiping"), $(this).parent().parent().prepend(r), n++ } $(this).parent().remove() } }) }) : $("#GridMultipleAnswersPipingId").length && 2 == e.questionData.data.QuestionTypeId && e.isMobile ? $(".template-preview-answer-to-display").each(function () { $(this).find(".s-editable-text").each(function () { if ("GridMultipleAnswersPipingId" == $(this).attr("id")) { if (l || !isAutoGen) return !0; var t = e.questionData; $(".s-selectable-text").css("border", "none"); var a = 0; $(t.data.SurveyQuestionAnswers).each(function () { 0 === t.data.DemographicTypeId && ($(".survey-mcqsa-div").eq(a).attr("id", this.Id), $(".survey-mcqsa-div").eq(a).attr("data-redirect-url", this.RedirectUrl), a++) }); var o = 0; for (var n in p) { $(this).html().split(c.substring(0, c.indexOf("@") + 3)).join(p[n]); var i = $(this).parent().clone(!0, !0); p[n] = p[n].replace(/\~/g, "&"), i.find(".s-editable-text").html(p[n]), i.attr("data-pipe-answer-id", g[o]), i.addClass("AutoGenPiping"), $(this).parent().parent().prepend(i), o++ } $(this).parent().remove() } }) }) : $("#PsychographicMultipleAnswersPiping").length && 1 == e.questionData.data.QuestionTypeId && e.isMobile ? $(".template-preview-answer-to-display").each(function () { $(this).find(".s-editable-text").each(function () { if (l || !v) return !0; if ("PsychographicMultipleAnswersPiping" == $(this).attr("id")) { var t = e.questionData, a = 0; $(t.data.SurveyQuestionAnswers).each(function () { 0 === t.data.DemographicTypeId && ($(".survey-mcqsa-div").eq(a).attr("id", this.Id), $(".survey-mcqsa-div").eq(a).attr("data-redirect-url", this.RedirectUrl), a++) }); var o = 0; for (var n in p) { var i = $(this).parent().clone(!0, !0); p[n] = p[n].replace(/\~/g, "&"), i.find(".s-editable-text").html(p[n]), i.attr("data-pipe-answer-id", g[o]), i.addClass("AutoGenPiping"), $(this).parent().parent().prepend(i), o++ } $(this).parent().remove() } }) }) : $("#PsychographicMultipleAnswersPiping").length && 2 == e.questionData.data.QuestionTypeId && e.isMobile ? $(".template-preview-answer-to-display").each(function () { $(this).find(".s-editable-text").each(function () { if (l || !v) return !0; if ("PsychographicMultipleAnswersPiping" == $(this).attr("id")) { e.questionData, $(".s-selectable-text").css("border", "none"); var t = 0; for (var a in p) { var o = $(this).parent().clone(!0, !0); p[a] = p[a].replace(/\~/g, "&"), o.find(".s-editable-text").html(p[a]), o.attr("data-pipe-answer-id", g[t]), o.addClass("AutoGenPiping"), $(this).parent().parent().prepend(o), t++ } $(this).parent().remove() } }) }) : $("#PsychographicMultipleAnswersPiping").length && (1 == e.questionData.data.QuestionTypeId || 2 == e.questionData.data.QuestionTypeId) && !e.isMobile ? $(".answer-row").each(function () { $(this).find(".s-editable-text").each(function () { if (l || !v) return !0; if ("PsychographicMultipleAnswersPiping" == $(this).attr("id")) { var e = 1, t = $(this).parent().parent(), a = parseInt($(this).parent().parent().parent().attr("col")); for (var o in isNaN(a) && (a = 2), p) { $(this).html().split(c.substring(0, c.indexOf("@") + 3)).join(p[o]); var n = $(this).parent().clone(!0, !0); p[o] = p[o].replace(/\~/g, "&"), n.find(".s-editable-text").html(p[o]), n.attr("data-pipe-answer-id", g[e - 1]), n.addClass("AutoGenPiping"), $(t).prepend(n), e++ } var i = $(this).parent().parent().parent().find(".answer-row").length - 1; $(this).parent().parent().parent().find(".answer-row").each(function () { $(this).css("height", 100 / i + "%") }); var r = $(this).parent().parent().parent(); $(this).parent().remove(), b(r) } }) }) : $(".answer-box").each(function () { $(this).find(".s-editable-text").each(function () { if ("grid-header" == $(this).parent().parent().attr("class")) return !0; if ($("#GridMultipleAnswersPipingId").length && 5 == e.questionData.data.QuestionTypeId) { if (l || !isAutoGen) return !0; if ("GridMultipleAnswersPipingId" == $(this).attr("id")) { var t = 101, a = 0; for (var o in p) { if (c.indexOf("@") > 0) var n = $(this).html().split(c.substring(0, c.indexOf("@") + c.length + 1)).join(p[o]); else var n = $(this).html().split(c.substring(0, c.indexOf("^") + c.length + 1)).join(p[o]); var i = $(this).parent().parent().clone(!0, !0); n = n.replace(/\~/g, "&"), i.find(".s-editable-text").html(n), $(this).parent().parent().parent().children().first().after(i), i.find(), i.find(".gridOption").each(function () { $(this).attr("id", "grid_row_" + t), $(this).attr("name", "grid_row_" + t), $(this).attr("data-pipe-answer-id", g[a]), $(this).addClass("AutoGenPiping") }), t++, a++ } $(this).parent().parent().remove() } } else if ($("#GridMultipleAnswersPipingId").length && (e.questionData.data.QuestionTypeId, 1) && !e.isMobile) { if (l || !isAutoGen) return !0; if ("GridMultipleAnswersPipingId" == $(this).attr("id")) { $("#divQuestionaireEditorContainer").find(".answer-row").length; var r = 1, s = $(this).parent().parent(), d = parseInt($(this).parent().parent().parent().attr("col")); for (var o in isNaN(d) && (d = 2), p) { var n = $(this).html().split(c.substring(0, c.indexOf("@") + 3)).join(p[o]), i = $(this).parent().clone(!0, !0); p[o] = p[o].replace(/\~/g, "&"), i.find(".s-editable-text").html(p[o]), i.attr("data-pipe-answer-id", g[r - 1]), i.addClass("AutoGenPiping"), $(s).prepend(i), r++ } var u = $(this).parent().parent().parent().find(".answer-row").length - 1; $(this).parent().parent().parent().find(".answer-row").each(function () { $(this).css("height", 100 / u + "%") }); var m = $(this).parent().parent().parent(); $(this).parent().remove(), b(m) } } }) }) } } else if ($($(".answer-box")[0]).attr("id").includes("_")) for (var f = 0; f < e.questionData.data.SurveyQuestionAnswers.length; f++)null != document.querySelectorAll(".answer-box")[f] && document.querySelectorAll(".answer-box")[f].setAttribute("id", e.questionData.data.SurveyQuestionAnswers[f].Id); function b(e) { $(e).find(".answer-box").first().attr("style"); var t = isNaN(parseInt($(e).attr("col"))) ? 2 : parseInt($(e).attr("col")), a = parseInt($(e).find("div.answer-box").length), o = 100 / (1 == a ? a : t), n = 100 / Math.ceil(a / t), i = 0, r = a - 1, s = "<div class='answer-row' style='height:" + n + "%'></div>", l = $.parseHTML("<div>" + s + "</div>"); $(e).find("div.survey-mcqma-div").length, $(e).attr("col", $(e).attr("col")), $(e).find("div.answer-box").each(function (e) { $(l).find(".answer-row").last().append(this), (i += 1) >= t && (e != r && $(l).append($(s)), i = 0) }), $(e).html(""), $(e).append($(l).children().unwrap()), $(e).find(".answer-box").css("width", o + "%") } if (e.skipQuestionStatusCheck || vodus.checkSurveyQuestionStatus(), $(".survey-mcqsa-div").addClass("disabledButtons"), 6 != e.questionData.data.QuestionTypeId && $(".survey-submit-btn").addClass("disabledButtons"), $(".survey-mcqsa-div").addClass("ripple"), $(".survey-submit-btn").wrap('<a class="btn ripple" style="padding:0;margin:0;"></a>'), (6 == e.QuestionTypeId || 7 == e.QuestionTypeId || 8 == e.QuestionTypeId) && ($(".survey-submit-btn").prop("disabled", !0), $(".survey-submit-btn").addClass("greyOutButton")), e.modalClosable && (parseInt(e.ctcTimer) > 0 ? 5 > $(".vodusAvailablePoints").html() ? isNaN(parseInt($(".timer-seconds").html())) && ($(".timer-seconds").html(e.ctcTimer), $(".wait-to-close-div").show()) : ($(".wait-to-close-div").hide(), $(".click-to-close-div").show(), $(".click-to-close-div").click(function () { null != e.checkCounterTimer && clearInterval(e.checkCounterTimer), vodus.submitCloseResponse(), showCloseMessage() })) : 0 == e.ctcTimer ? ($(".wait-to-close-div").hide(), $(".click-to-close-div").show(), $(".click-to-close-div").click(function () { null != e.checkCounterTimer && clearInterval(e.checkCounterTimer), vodus.submitCloseResponse(), showCloseMessage() })) : $(".wait-to-close-div").hide()), NoCCCheckIsSurveyFallbackScript(e.isSurveyFallbackScript, e.GAMAdUnitId), "mobile-app" == e.viewType && null != e.containerHeight && 0 != e.containerHeight) { var T = Math.floor((e.containerHeight - 96 * window.devicePixelRatio) / window.devicePixelRatio); $("#divQuestionaireEditorContainer").css("height", T + "px"), $(".questionaire-container-size-variable").css("height", T + "px"), $(".questionaire-container-size-variable").css("max-height", T + "px"), $(".mobile-question-container").css("max-width", "100%"), $(".modal-dialog").css("max-width", "100%"), $(".left-header-container").css("width", "20%"), $(".center-header-container").css("width", "75%"), $(".tingle-enabled").css("position", "unset").css("overflow", "auto").css("margin", "8px 0") } $("#divQuestionaireEditorContainer").css("opacity", "").css("max-height", "") } function reinitModalEvent() { addShowLoginModalEvent(), addLogoutEvent() } function getQuestionHandler() { var e = vodus.getAppData(), t = e.questionData, a = !1, o = t.data.QuestionDelayLengthInSeconds, n = t.data.QuestionDelayLengthInSeconds, i = null; (null == o || 0 == o) && (o = 5), $(".rewardCloseButton").click(function () { closeAllVodusModal() }); var r = function e(t) { var a = $(this); a.append("<span class='ink'></span>"); var o = a.find(".ink"); if (o.removeClass("animate"), !o.height() && !o.width()) { var n = Math.max(a.outerWidth(), a.outerHeight()); o.css({ height: n, width: n }) } var i = t.pageX - a.offset().left - o.width() / 2, r = t.pageY - a.offset().top - o.height() / 2; o.css({ top: r + "px", left: i + "px" }).addClass("animate") }; $(".ripple-effect").bind("click", r), e.isMobile ? ($(".vodus-survey-question-container").css("display", "block"), $(".vodus-survey-question-container").css("background-color", "transparent")) : $(".hide-mcqsa-mcqma-image-answer").removeClass("hide-mcqsa-mcqma-image-answer"); var s = 0, l = [], d = 0, u = 1; if (e.demographicSurveyType = t.data.DemographicTypeId, 1 === t.data.QuestionTypeId) $(t.data.SurveyQuestionAnswers).each(function () { 0 === t.data.DemographicTypeId && ($(".answer-box").eq(d).attr("id", this.Id), $(".answer-box").eq(d).attr("data-redirect-url", this.RedirectUrl), d++) }), $(".answer-box").click(function () { if (!a) return !1; var o = !1; if (0 === t.data.DemographicTypeId && ("other" === $(this).find(".s-editable-text").text().toLowerCase() || "others" === $(this).find(".s-editable-text").text().toLowerCase() || "" === $(this).find(".s-editable-text").text().toLowerCase()) && (o = !1), o) { var r = '<div class="input-group" style="margin:10px;">'; r += '<textarea class="form-control customAnswer" placeholder="Please specify"></textarea>', r += '<span class="input-group-btn">', r += '<button class="survey-submit-btn wisteria-flat-button" type="button" style="margin-left:5px;">Submit</button>', r += "</span>", r += "</div>", $(this).find(".s-editable-text").parent().html(r), $(".survey-submit-btn").off(), $(".survey-submit-btn").click(function () { if ("" === $(this).parent().parent().parent().find(".customAnswer").val() || "please specify" === $(this).parent().parent().parent().find(".customAnswer").val().toLowerCase()) return $(".customAnswer").addClass("please-specify"), !1; vodus.setRedirectUrl($(".survey-submit-btn").closest(".survey-mcqsa-div").attr("data-redirect-url")); var o = { id: $(".survey-submit-btn").closest(".survey-mcqsa-div").attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(".survey-submit-btn").closest(".survey-mcqsa-div").attr("data-pipe-answer-id") ? 0 : $(".survey-submit-btn").closest(".survey-mcqsa-div").attr("data-pipe-answer-id"), isAutoGenPiping: $(".survey-submit-btn").closest(".survey-mcqsa-div").hasClass("AutoGenPiping") ? 1 : 0, answerValue: $(this).parent().parent().parent().find(".customAnswer").val(), otherAnswer: $(this).parent().parent().parent().find(".customAnswer").val(), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(o); var r = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, s = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: r, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(s), vodus.submitResponse() }) } else { var s = { id: $(this).attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, redirectUrl: $(this).attr("data-redirect-url"), answerValue: $(this).find(".s-editable-text").text(), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; vodus.setRedirectUrl($(this).attr("data-redirect-url")), l.push(s); var d = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, u = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: d, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(u), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }), initMcqOpenEndedAnswer($("#divQuestionaireEditorContainer"), e.isMobile), $(".open-ended-mcq").find("input[type=button]").unbind("click"), $(".open-ended-mcq").find("input[type=button]").unbind("onclick"), $(".open-ended-mcq").find("input[type=button]").on("click", function (o) { l = []; var r = { id: $(this).parent().parent().attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).parent().parent().attr("data-pipe-answer-id") ? 0 : $(this).parent().parent().attr("data-pipe-answer-id"), isAutoGenPiping: $(this).parent().parent().hasClass("AutoGenPiping") ? 1 : 0, redirectUrl: $(this).parent().parent().attr("data-redirect-url"), answerValue: $(this).siblings("textarea").val(), skipDefaultValue: !0, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(r); var s = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, d = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: s, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(d), vodus.submitResponse(), $("#vodusLoader").css("display", "flex"), o.stopPropagation() }), "true" == $("#divQuestionaireEditorContainer").find(".question-header-1").first().attr("israndomize") && ($("#divQuestionaireEditorContainer .template-preview-answer-to-display-table-content").hasClass("grid-boolean") ? randomizeGridBooleanRows($("#divQuestionaireEditorContainer .grid-boolean")) : (vodus.log("Randomize Grid Boolean 2"), makeMCQAnswersSortable($("#divQuestionaireEditorContainer"), e.isMobile))); else if (2 === t.data.QuestionTypeId) $(t.data.SurveyQuestionAnswers).each(function () { $(".answer-box").eq(d).attr("id", this.Id), u++, d++ }), $(".answer-box").click(function () { $(this).hasClass("selectedAnswer") ? $(this).removeClass("selectedAnswer") : (s++, $(this).addClass("selectedAnswer"), $(this).attr("data-order-number", s)) }), initMcqOpenEndedAnswer($("#divQuestionaireEditorContainer"), e.isMobile), $(".survey-submit-btn").click(function () { if (l = [], !a) return !1; if ($(".selectedAnswer").each(function () { var e = { id: $(this).attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, answerValue: $(this).hasClass("open-ended-mcq") ? $(this).find(".mcq-open-ended-textarea > textarea").val() : $(this).find(".s-editable-text").text(), skipDefaultValue: $(this).hasClass("open-ended-mcq"), orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; $(this).find(".mcq-open-ended-textarea > textarea").val().length > 0 && (e.otherAnswer = $(this).find(".mcq-open-ended-textarea > textarea").val()), l.push(e) }), l.length > 0) { var o = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, r = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: o, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(r), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }), "true" == $("#divQuestionaireEditorContainer").find(".question-header-1").first().attr("israndomize") && (1 == e.isMobile ? e.isMobile = !0 : e.isMobile = !1, makeMCQAnswersSortable($("#divQuestionaireEditorContainer"), e.isMobile)); else if (3 === t.data.QuestionTypeId) $(t.data.SurveyQuestionAnswers).each(function () { var e = $(this.Template).attr("id"); $("#" + e).attr("answerId", this.Id), d++ }), $(".vodus-rating-question-type").find("input[type=radio]").click(function () { if (a) { var o = { id: $(this).attr("answerid"), pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, answerValue: $(this).next("label").attr("title"), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(o); var r = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, s = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: r, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(s), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }); else if (6 === t.data.QuestionTypeId) e.isMobile ? $(t.data.SurveyQuestionAnswers).each(function () { $(".open-ended-answer").eq(d).attr("id", this.Id), d++ }) : $(t.data.SurveyQuestionAnswers).each(function () { $(".answer-box").eq(d).attr("id", this.Id), d++ }), $(".survey-submit-btn").click(function () { if (l = [], $(this).hasClass("greyOutButton") || $(this).hasClass("disabledButtons") || !a) return !1; if (e.isMobile ? $("#divQuestionaireEditorContainer").find(".open-ended-answer").each(function (e, t) { var a = { id: $(this).attr("id"), AnswerSequenceNumber: e + 1, answerValue: $(this).text(), skipDefaultValue: !0, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(a) }) : $("#divQuestionaireEditorContainer").find(".answer-box").each(function (e, t) { var a = { id: $(this).attr("id"), AnswerSequenceNumber: e + 1, answerValue: $(this).find(".s-editable-text").text(), skipDefaultValue: !0, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(a) }), l.length > 0) { var o = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, r = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: o, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(r), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }); else if (7 === t.data.QuestionTypeId) { var c = "background-color: #" + t.data.FontColor + " !important"; $(".ccType2 .mobile-question-container .template-preview-answer-to-display").attr("style", c), $(".ccType2 .mobile-question-container .template-preview-answer-to-display .vodus-slider-question-vertical-text-content div").attr("style", "color:#222222!important"), $(".survey-submit-btn").hide(); var p = t.data.SurveyQuestionAnswers.length - 1; $(t.data.SurveyQuestionAnswers).each(function () { $(".slider-question-slider-answer > div.s-editable-text").eq(d).attr("AnswerId", this.Id), $(".slider-question-slider-answer > div.s-editable-text").eq(d).attr("AnswerSliderValue", d + 1), $(".vodus-slider-question-vertical-text > div.vodus-slider-question-vertical-text-content").eq(p).attr("AnswerId", this.Id), $(".vodus-slider-question-vertical-text > div.vodus-slider-question-vertical-text-content").eq(p).attr("AnswerSliderValue", p + 1), d++, p-- }), $(".slider-question-slider-control").on("click", function () { a = !0; var o = $(".slider-question-slider-control").find("input[type=range]").val(), r = 0, s = ""; $(".slider-question-slider-answer > div.s-editable-text").each(function () { $(this).attr("answerslidervalue") == o && (r = $(this).attr("answerid"), s = $(this).html()) }), 0 === r && (o = $(".vodus-slider-question-vertical-slider").find("input[type=range]").val(), $(".vodus-slider-question-vertical-text > div.vodus-slider-question-vertical-text-content").each(function () { $(this).attr("answerslidervalue") == o && (r = $(this).attr("answerid"), s = $(this).html()) })); var d = { id: r, answerValue: s, skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; if (l.push(d), l.length > 0) { var u = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, c = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: u, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(c), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }); var g = !1; $(".vodus-slider-question-vertical-slider > input[type=range]").on("touchend click", function (o) { if (g) return !1; g = !0, a = !0; var r = $(".slider-question-slider-control").find("input[type=range]").val(), s = 0, d = ""; $(".slider-question-slider-answer > div.s-editable-text").each(function () { $(this).attr("answerslidervalue") == r && (s = $(this).attr("answerid"), d = $(this).html()) }), 0 === s && (r = $(".vodus-slider-question-vertical-slider").find("input[type=range]").val(), $(".vodus-slider-question-vertical-text > div.vodus-slider-question-vertical-text-content").each(function () { $(this).attr("answerslidervalue") == r && (s = $(this).attr("answerid"), d = $(this).html()) })); var u = { id: s, answerValue: d, skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; if (l.push(u), l.length > 0) { var c = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, p = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: c, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(p), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }) } else if (8 === t.data.QuestionTypeId) l = [], $(t.data.SurveyQuestionAnswers).each(function () { $(".survey-ranking-div").eq(d).attr("id", this.Id), d++ }), makeRankingAnswerSortable($("#divQuestionaireEditorContainer"), e.isMobile), $(".survey-submit-btn").click(function () { if ($(this).hasClass("greyOutButton") || $(this).hasClass("disabledButtons") || !a) return !1; if ($("#divQuestionaireEditorContainer").find(".survey-ranking-div").each(function (e, t) { var a = { id: $(this).attr("id"), AnswerSequenceNumber: e + 1, answerValue: $(this).find(".s-editable-text").text(), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(a) }), l.length > 0) { var o = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, r = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: o, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(r), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }); else if (5 === t.data.QuestionTypeId) { console.log("grid>>>"); var m = 0, v = 1; $(".s-selectable-text").css("border", "none"), l = []; var h = $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").hasClass("grid-boolean"); if ($(t.data.SurveyQuestionAnswers).each(function () { h ? $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).find(".grid-row").eq(d).attr("id", this.Id) : $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).attr("id", this.Id), d++ }), e.isMobile && !$("#GridMultipleAnswersPipingId").length) { console.log("grid>>>"); var y = $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).find("table"), f = $(y).find(".grid-row").length, b = $(y).css("background-color"), h = $(".grid-boolean").length > 0, T = $(".question-header-1").eq(0).text(), C = ""; "true" == $("#divQuestionaireEditorContainer").find(".question-header-1").first().attr("israndomize") && randomizeGridBooleanRows($("#divQuestionaireEditorContainer")), $(y).find(".grid-row").each(function () { if (h) var e = $(this).find(".s-editable-text").attr("default-answer"), t = $(this).find(".gridOption").eq(0).attr("id"); C += '<div class="mobileGridTitle" style="display:none;" answer-ID="' + t + '" id="mobileGridRow_' + ++m + '"><span style="font-style:italic;">(' + m + "/" + f + ')</span><span id="mobileGridRowTitle_' + m + '" style="margin-left:0.3em;" default-answer="' + e + '">' + $(this).find("td").eq(0).find(".s-selectable-text").text() + "</span></div>" }), T += C, $(".question-header-1").eq(0).html(T), $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").html(""); var w = "", k = 0, S = 0; $(y).find(".grid-header").eq(0).find("td").each(function () { var e = $(this).find(".s-selectable-text").text(); if ("" != e) { var t = $(window.vodus_grid_mobile_tag).find(".grid-header").eq(0).find("td").eq(k).find(".s-selectable-text").text(); w += '<div class="mobile-grid-div answer-box selectGridMobileAnswer" id="selectGridMobileAnswer_' + k + '" style="width: 98%; background-color:' + b + '; float:left;" data-answer="' + e + '" data-default-answer="' + t + '"><div class="s-editable-text">' + e + "</div></div>" } k++ }), $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).html(w), $(y).eq(0).hide(), $("#mobileGridRow_1").show(), $("#divQuestionaireEditorContainer").find(".survey-submit-btn").hide(), $(".answer-box").click(function () { if (S++, $(".mobileGridTitle").hide(), h) { if (1 == this.id.split("_")[1]) { var o = t.data.SurveyQuestionAnswers[$("#mobileGridRow_" + v.toString()).attr("answer-id").split("_")[1]].Id, r = $(window.vodus_grid_tag).find(".template-preview-answer-to-display-table-content").eq(0).find("table").find(".grid-row").eq(v.toString()).find(".s-editable-text").text(), s = { id: o, pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: v, answerValue: r, otherAnswer: r, skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(s) } } else { var r = $(window.vodus_grid_mobile_tag).find(".grid-row").eq(v - 1).find(".s-selectable-text").text(), s = { id: $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: v, answerValue: r + " -- " + $(this).attr("data-default-answer"), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(s) } $("#mobileGridRow_" + ++v).fadeIn(); var d = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n; if (h) { if (f == S) { if (0 == l.length) { var u = t.data.SurveyQuestionAnswers.filter(e => !0 == e.IsNoneOfTheAbove)[0]; null == u && vodus.log("None of the above is not set"); var s = { id: u.Id, pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: v, answerValue: "None of the above", otherAnswer: "None of the above", skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(s) } var c = 2, p = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: c, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: d, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; p.SelectedResponseList = l, a = !1, vodus.setSurveyResponse(p), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } } else if (f == S && l.length > 0) { var c = t.data.QuestionTypeId, p = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: c, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: d, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(p), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }) } else { $("#divQuestionaireEditorContainer").find(".survey-submit-btn").hide(), "true" == $("#divQuestionaireEditorContainer").find(".question-header-1").first().attr("israndomize") && randomizeGridBooleanRows($("#divQuestionaireEditorContainer")), m = 1; var v = 1; if (e.isMobile && $("#GridMultipleAnswersPipingId").length) { var y = $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).find("table"), I = []; for (var P in e.pipeList) I = e.pipeList[P].split(":").pop().split(" & "), null != e.pipeAnswerIdList && e.pipeAnswerIdList.length > 0 && (splittedIds = e.pipeAnswerIdList); var f = I.length, b = $(y).css("background-color"), h = $(".grid-boolean").length > 0, T = $(".question-header-1").eq(0).text(), C = ""; "true" == $("#divQuestionaireEditorContainer").find(".question-header-1").first().attr("israndomize") && randomizeGridBooleanRows($("#divQuestionaireEditorContainer")), $(I).each(function () { if (h) var e = $(this).find(".s-editable-text").attr("default-answer"), t = $(this).find(".gridOption").eq(0).attr("id"); C += '<div class="mobileGridTitle" style="display:none;" answer-ID="' + t + '" id="mobileGridRow_' + m + '"><span style="font-style:italic;">(' + m + "/" + f + ')</span><span id="mobileGridRowTitle_' + m + '" style="margin-left:0.3em;" default-answer="' + e + '">' + I[m - 1] + "</span></div>", m++ }), T += C, $(".question-header-1").eq(0).html(T), $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").html(""); var w = "", k = 0, S = 0; $(y).find(".grid-header").eq(0).find("td").each(function () { var e = $(this).find(".s-selectable-text").text(); if ("" != e) { var t = $(window.vodus_grid_mobile_tag).find(".grid-header").eq(0).find("td").eq(k).find(".s-selectable-text").text(); w += '<div class="mobile-grid-div answer-box selectGridMobileAnswer" id="selectGridMobileAnswer_' + k + '" style="width: 98%; background-color:' + b + '; float:left;" data-answer="' + e + '" data-default-answer="' + t + '"><div class="s-editable-text">' + e + "</div></div>" } k++ }), $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).html(w), $(y).eq(0).hide(), $("#mobileGridRow_1").show(), $("#divQuestionaireEditorContainer").find(".survey-submit-btn").hide(), $(".answer-box").click(function () { if (S++, $(".mobileGridTitle").hide(), h) { if (1 == this.id.split("_")[1]) { var o = t.data.SurveyQuestionAnswers[$("#mobileGridRow_" + v.toString()).attr("answer-id").split("_")[1]].Id, r = $(window.vodus_grid_tag).find(".template-preview-answer-to-display-table-content").eq(0).find("table").find(".grid-row").eq(v.toString()).find(".s-editable-text").text(), s = { id: o, pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: v, answerValue: r, otherAnswer: r, skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(s) } } else { var r = I[v - 1], s = { id: $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: v, answerValue: r + " -- " + $(this).attr("data-default-answer"), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(s) } v++, $(".mobile-question-container").eq(0).find($("#mobileGridRow_" + v)).fadeIn(), console.log(">>" + $("#mobileGridRow_" + v).html()); var d = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n; if (h) { if (f == S) { if (0 == l.length) { var u = t.data.SurveyQuestionAnswers.filter(e => !0 == e.IsNoneOfTheAbove)[0]; null == u && vodus.log("None of the above is not set"); var s = { id: u.Id, pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: v, answerValue: "None of the above", otherAnswer: "None of the above", skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(s) } var c = 2, p = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: c, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: d, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; p.SelectedResponseList = l, a = !1, vodus.setSurveyResponse(p), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } } else if (f == S && l.length > 0) { var c = t.data.QuestionTypeId, p = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: c, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: d, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(p), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }) } else { var _ = 0; $(".grid-row").each(function () { _++, $(this).find(".gridOption").each(function () { $(this).attr("name", "grid_row_" + _).attr("id", "grid_row_" + _) }) }), $(".gridOption").click(function () { $(this).parent().parent().find("td").removeClass("selectedGridItem"), $(this).parent().addClass("selectedGridItem"), $("#divQuestionaireEditorContainer").find(".survey-submit-btn").click() }) } } $("#divQuestionaireEditorContainer").find(".survey-submit-btn").eq(0).click(function () { toastr.clear(), l = []; var o = !1, r = 0, s = 0, d = $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").hasClass("grid-boolean"); if ($($(".tingle-modal-box").find(".template-preview-answer-to-display-table-content").eq(0).find("table").find(".grid-row")).each(function () { var e = $(this).find("input[type=radio]").attr("name"); $(this).find("td").eq(0).find(".s-editable-text").text(); var t = $(window.vodus_grid_tag).find(".template-preview-answer-to-display-table-content").eq(0).find("table").find(".grid-row").eq(s); $(t).find("input[type=radio]").attr("name"); var a = $(t).find("td").eq(0).find(".s-editable-text").text(); $(".tingle-modal-box__content").find(".template-preview-answer-to-display-table-content").eq(0).find("table"); var n = $(this).find("td").length; if ($("input[name='" + e + "']").is(":checked")) { for (var i = 0; i < n; i++)if ($(this).find("td").eq(i).hasClass("selectedGridItem")) { if (d) { if (i == n - 1); else { var u = { id: $(this).closest(".grid-row").attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).find("td").eq(i).children().attr("data-pipe-answer-id") ? 0 : $(this).find("td").eq(i).children().attr("data-pipe-answer-id"), isAutoGenPiping: $(this).find("td").eq(i).children().hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: void 0 == $(this).find("td").eq(i).children().attr("data-pipe-answer-id") ? ++v : v + 100 + m, answerValue: a + " -- " + $(window.vodus_grid_tag).find(".grid-header").find("td").eq(i).find(".s-editable-text").text(), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(u) } } else { var u = { id: $(".template-preview-answer-to-display-table-content").eq(0).attr("id"), pipeSurveyQuestionAnswerId: void 0 == $(this).find("td").eq(i).children().attr("data-pipe-answer-id") ? 0 : $(this).find("td").eq(i).children().attr("data-pipe-answer-id"), isAutoGenPiping: $(this).find("td").eq(i).children().hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: void 0 == $(this).find("td").eq(i).children().attr("data-pipe-answer-id") ? ++v : v + 100 + m, answerValue: a + " -- " + $(window.vodus_grid_tag).find(".grid-header").find("td").eq(i).find(".s-editable-text").text(), skipDefaultValue: !1, orderNumber: void 0 == $(this).attr("data-order-number") ? 1 : $(this).attr("data-order-number") }; l.push(u) } } } else o = !0, r++; m++, s++ }), m = 0, v = 1, o) return toastr.warning(r + " more rows left to complete this question"), !1; if (0 == l.length && d) { var u = t.data.SurveyQuestionAnswers.filter(e => !0 == e.IsNoneOfTheAbove)[0]; null == u && vodus.log("None of the above is not set"); var c = { id: u.Id, pipeSurveyQuestionAnswerId: void 0 == $(this).attr("data-pipe-answer-id") ? 0 : $(this).attr("data-pipe-answer-id"), isAutoGenPiping: $(this).hasClass("AutoGenPiping") ? 1 : 0, AnswerSequenceNumber: 1, answerValue: "None of the above", otherAnswer: "None of the above", skipDefaultValue: !1, orderNumber: 1 }; l.push(c) } if (l.length > 0) { var p = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n, g = { CommercialId: t.data.CommercialId, SurveyQuestionId: t.data.Id, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: t.data.DemographicTypeId, TierId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.Id, TierNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.TierNumber, SequenceNumber: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.SequenceNumber, ParentId: null == t.data.SurveyQuestionTier ? 0 : t.data.SurveyQuestionTier.ParentId, SurveyType: t.data.SurveyType, SelectedResponseList: l, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: p, PartnerData: vodus.getPartnerData(), ccType: e.ccType }; a = !1, vodus.setSurveyResponse(g), console.log(g), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") } }) } else if (999 === t.data.QuestionTypeId) { t.data.CommercialId; var A = { ChunkId: t.data.ChunkId, CommercialId: t.data.CommercialId, SurveyQuestionId: 0, SurveyQuestionTypeId: t.data.QuestionTypeId, DemographicTypeId: 0, Token: vodus.readCookie(e.cookieName), PartnerCode: e.partner_code, RespondTimeInSeconds: 0, PartnerData: vodus.getPartnerData(), Email: vodus.getEmail(), MemberProfileId: t.data.UserToken.MemberProfileId }; $(".referralSkip").click(function () { var e = Math.round(new Date().getTime() / 1e3 - i.getTime() / 1e3) + n; A.RespondTimeInSeconds = e, a = !1, vodus.setSurveyResponse(A), vodus.submitResponse(), $("#vodusLoader").css("display", "flex") }), $(".question-header-1").html($(".question-header-1").html().replace("{X}", t.data.VPointsPerQuestion)), $(".question-header-1").html($(".question-header-1").html().replace("{SURVEY_NAME}", t.data.ExternalDisplayName)); var Q = "", q = vodus.readCookie(e.cookieName); if (null == q || "" == q) { var M = vodus.readCookie("vodus_temp_token"); Q = e.reward3PRootUrl + "/sync?syncType=2&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&tempToken=" + M + "&referral=" + t.data.ReferralRedirectUrl + "&memberProfileId=" + t.data.UserToken.MemberProfileId + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname) } else Q = e.reward3PRootUrl + "/sync?syncType=2&partnerWebsiteId=" + e.partnerWebsiteId + "&questionId=" + e.questionId + "&questionType=" + e.surveyType + "&token=" + q + "&referral=" + t.data.ReferralRedirectUrl + "&memberProfileId=" + t.data.UserToken.MemberProfileId + "&redirectUrl=" + encodeURI(window.location.href) + "&host=" + encodeURI(window.location.hostname); $(".referralRedirect").attr("data-url", Q), $(".referralRedirect").click(function () { closeAllVodusModal(), $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(A), url: e.serverlessUrl + "api/referralNotification", success: function (e) { vodus.log("Done with email notification") } }); var t = $(this).attr("data-url"); vodus.log(t), window.open(t, "_blank").focus() }) } try { i18next.init({ lng: e.language, fallbackLng: "en", resources: { en: { translation: { "login-with-facebook": "Login with Facebook", "login-with-google": "Login with Google", "signup-with-email": "Sign up with Email", "wait-to-close-1": "Or wait ", "wait-to-close-2": " seconds to close", "click-to-close": "click to close", "rewards-click-to-close": "Click to close", "answered-before": "I have answered this question before", "vodus-or": "Or ", "more-info": "More information", "about-us": "About us", "login-for-double-points": "Login to gain 2\xd7 points:", "login-for-double-points-mobile": "Login to gain 2\xd7 points:", vpoints: "Your VPoints:", points: " points", "redeem-points": "Redeem rewards", "login-gain-rewards": "Login | Signup", signup: "Sign up", login: "Login", logout: "(Logout)", back: "Back", "signup-vodus": "Sign up for Vodus", "login-vodus": "Login to Vodus", "rewards-to-be-won": "Rewards to be won:", "sso-description-title": "Rewarding you for your opinion", "sso-list-1-bold": "Gain double VPoints", "sso-list-2-bold": "Exchange your VPoints", "sso-list-1": " by logging into your Vodus account before responding.", "sso-list-2": " for cash vouchers and discounts on ", "forgot-password": "Forgot password?", email: "Email", password: "Password", "create-account": "Register", "data-policy": "Data policy", "sign-up-message": "Get rewarded for consuming digital content on any of Vodus’ network of publishers.", "gain-two-times-points": "Gain 2\xd7 points:", "in-partnership": "In partnership with:", "start-earning-rewards-by-signup": "Start earning double points by signing up!", "not-yet-signed-up": "Not yet signed up?", "already-signed-up": "Already signed up?", "powered-by": "", "ranking-instruction": "Drag and drop to rank:" } }, ms: { translation: { "login-with-google": "Masuk dengan Google", "login-with-facebook": "Masuk dengan Facebook", "signup-with-email": "Daftar dengan E-mel", "wait-to-close-1": "Atau tunggu ", "wait-to-close-2": " saat", "click-to-close": "klik untuk tutup", "rewards-click-to-close": "Klik untuk tutup", "answered-before": "Saya pernah menjawab soalan ini", "vodus-or": " Atau ", "more-info": "Maklumat lanjut", "about-us": "Mengenai kami", "login-for-double-points": "Masuk untuk dapat 2\xd7 mata:", "login-for-double-points-mobile": "Masuk untuk dapat 2\xd7 mata:", vpoints: "VPoint anda:", points: " mata", "redeem-points": "Menebus ganjaran", "login-gain-rewards": "Masuk | Daftar", signup: "Daftar", login: "Masuk", logout: "(Keluar)", "signup-vodus": "Daftar untuk Vodus", "login-vodus": "Masuk ke Vodus", back: "Balik", "rewards-to-be-won": "Ganjaran untuk diberikan:", "sso-description-title": "Setiap pendapat anda ada ganjaran", "sso-list-1-bold": "Dapatkan dua kali ganjaran", "sso-list-2-bold": "Tukarkan VPoint anda", "sso-list-1": " dengan log masuk ke akaun Vodus anda sebelum menjawab", "sso-list-2": " dengan baucar tunai dan diskaun di ", "forgot-password": "Lupa kata laluan?", email: "Emel", password: "Kata laluan", "create-account": "Daftar", "data-policy": "Dasar data", "sign-up-message": "Dapatkan ganjaran semasa melawati laman web rangkaian penerbitan Vodus.", "gain-two-times-points": "Dapat 2\xd7 mata:", "in-partnership": "Dalam perkongsian dengan:", "start-earning-rewards-by-signup": "Daftar sekarang untuk dapat 2\xd7 mata!", "not-yet-signed-up": "Belum daftar?", "already-signed-up": "Sudah daftar?", "powered-by": "", "ranking-instruction": "Tarik dan letak untuk susun:" } }, zh: { translation: { "login-with-google": "谷歌登入", "login-with-facebook": "面子书登入", "signup-with-email": "电邮登入", "wait-to-close-1": "或请等 ", "wait-to-close-2": " 秒", "click-to-close": "点击关闭", "rewards-click-to-close": "点击关闭", "answered-before": "我之前已回答过这问题", "vodus-or": " 或", "more-info": "更多信息", "about-us": "关于我们", vpoints: "你的VPoint:", points: " 积分", "redeem-points": "兑换奖励", "login-gain-rewards": "登入 | 注册", signup: "注册", login: "登入", logout: "(退出)", "signup-vodus": "注册Vodus", "login-vodus": "登入Vodus", back: "返回", "gain-double-points": "赢取双倍积分", "rewards-to-be-won": "奖品等待赢取:", "sso-description-title": "奖励您的意见", "sso-list-1-bold": "以赢取双倍V积分", "sso-list-2-bold": "待换您的VPoint", "sso-list-1": " ,请您回复前登入您的Vodus帐户.", "sso-list-2": " 以现金券和折扣在", "forgot-password": "忘记密码?", email: "电邮", password: "密码", "create-account": "注册", "data-policy": "数据政策", "sign-up-message": "浏览任何与Vodus有联系的电子媒体以赢取奖励。", "gain-two-times-points": "赢取2\xd7的积分", "in-partnership": "我们的伙伴:", "start-earning-rewards-by-signup": "立即注册以赢取双倍积分！", "not-yet-signed-up": "还没注册？", "already-signed-up": "已经注册了？", "powered-by": "", "ranking-instruction": "拖放以排名:" } } }, debug: !1 }, function (t, a) { jqueryI18next.init(i18next, $), $(".i18next").localize(), "ms" === e.language ? $(".ranking-instruction").css("max-width", "195px") : "zh" === e.language && ($(".close-modal-instruction-container").css("font-size", "larger"), $(".close-modal-instruction").css("font-weight", "400"), $(".question-purpose").css("font-weight", "600")) }) } catch (x) { vodus.log(x, e.logStatus.error) } if (e.thirdPartyEnabled) { 0 === $("#reward_3PTest").length && $("<div>").attr({ class: "", id: "reward_3PTest" }).appendTo("body"), vodus.log("GetQuestionInternal -> Updating rewards points"); var D = vodus.readCookie(e.cookieName); $("#reward_3PTest").html('<iframe id="vodus3PTest" width="0" height="0"  src="' + e.reward3PRootUrl + "/token/create-temporary-points?token=" + D + "&points=" + t.data.AvailablePoints + "&partnerCode=" + e.partner_code + '" frameborder="0" allowfullscreen></iframe>') } vodus.log("Skipping countdown"), $(".survey-mcqsa-div").removeClass("ripple"), $(".survey-mcqsa-div").removeClass("disabledButtons"), $(".answer-box").removeClass("ripple"), $(".ripple-effect").unbind("click", r), 6 != t.data.QuestionTypeId && 7 != t.data.QuestionTypeId && 8 != t.data.QuestionTypeId && ($(".survey-submit-btn").removeClass("disabledButtons"), $(".survey-submit-btn").prop("disabled", !1), $(".survey-submit-btn").removeClass("animate"), $(".survey-submit-btn").removeClass("ripple")), a = !0, i = new Date; var R = 0; e.ctcTimer > 9 && (R = 0); var N = setInterval(function () { if (R++, o--, e.ctcTimer > parseInt(0) && R > 0) var n = e.ctcTimer, s = setInterval(function () { --n >= 0 && $(".timer-seconds").html(n), 0 === n && (clearInterval(s), e.modalClosable && ($(".wait-to-close-div").hide(), $(".click-to-close-div").show()), $(".click-to-close-div").unbind("click"), $(".click-to-close-div").click(function () { null != e.checkCounterTimer && clearInterval(e.checkCounterTimer), vodus.submitCloseResponse(), showCloseMessage() })) }, 1e3); 0 === o && ($(".survey-mcqsa-div").removeClass("ripple"), $(".survey-mcqsa-div").removeClass("disabledButtons"), $(".answer-box").removeClass("ripple"), $(".ripple-effect").unbind("click", r), 6 != t.data.QuestionTypeId && 7 != t.data.QuestionTypeId && 8 != t.data.QuestionTypeId && ($(".survey-submit-btn").removeClass("disabledButtons"), $(".survey-submit-btn").prop("disabled", !1), $(".survey-submit-btn").removeClass("animate"), $(".survey-submit-btn").removeClass("ripple")), a = !0, i = new Date, clearInterval(N)) }, 1e3); repositionMobileImage($(".tingle-modal-box")), $("#vodusQuestionModal").find(".overlay").removeClass("overlay"), $("#vodusQuestionModal").find(".draganddrop-imagebox-text").html(""), $("#vodusQuestionModal").find(".droppable-template").css("border", "none"), $("#vodusQuestionModal").find(".remove-imagebox-icon").hide(), $("#vodusQuestionModal").find(".edit-imagebox-icon").hide(), $("#vodusQuestionModal").find(".ui-draggable-handle").css("cursor", "default"), $("#vodusQuestionModal").find(".change-text-image-answer-type-icon").removeClass("change-text-image-answer-type-icon"), $(".droppable-template").css("z-index", "2"), $("button.survey-submit-btn").each(function () { $(this).html($(this).attr("value")) }), "" === t.data.QuestionTemplateContent && (vodus.log("No questions available (No Survey Callback):" + t.message), null != vodus.getNoQuestionCallback() && vodus.getNoQuestionCallback().length > 0 && (vodus.log("Executing callback -> " + vodus.getNoQuestionCallback()), window[vodus.getNoQuestionCallback()].apply(this, vodus.getNoQuestionCallArgument()), NoCCCheckIsSurveyFallbackScript(e.isSurveyFallbackScript, e.GAMAdUnitId))), null != vodus.getRewardGetQuestionCallback() && vodus.getRewardGetQuestionCallback().length > 0 && (vodus.log("Executing callback -> " + vodus.getRewardGetQuestionCallback()), e.modalClosable ? ($(".ctc-container").show(), $(".vodus-rewards-close-div").show(), $(".vodus-reward-response-to-close").hide(), $(".userPoints").html(e.availablePoints)) : ($(".ctc-container").hide(), $(".vodus-rewards-close-div").hide(), $(".vodus-reward-response-to-close").hide(), $(".userPoints").html(e.availablePoints)), null == e.email || "" == e.email ? ($(".reward-login-top-menu").show(), $(".reward-logout-top-menu").hide(), $(".reward-login-username").html("")) : ($(".reward-login-top-menu").hide(), $(".reward-logout-top-menu").show(), $(".reward-login-username").html(e.email))), addLogoutEvent() } function showThankYouMessage(e, t) { var a = $(e.rewardsAdsTemplate); if (a.find(".thankyou-product-image-url").css("display", "none"), "ms" == e.language ? (a.find(".thankyou-message").html("Terima Kasih"), a.find(".thankyou-current-point").html("Anda kini mempunyai <u>" + (parseInt(e.availablePoints) + t) + " VPoints</u>"), a.find(".thankyou-product-url").css("font-size", "12px").html("Maklumat Lanjut"), a.find(".autoclose-message").css("font-size", "13px").css("padding-right", "0").html("Ditutup dalam <span>3</span>")) : "zh" == e.language ? (a.find(".thankyou-message").html("谢谢您"), a.find(".thankyou-current-point").html("您现在拥有 <u>" + (parseInt(e.availablePoints) + t) + " VPoints</u>"), a.find(".thankyou-product-url").html("更多详情"), a.find(".autoclose-message").html("关闭中 <span>3</span>")) : (a.find(".thankyou-message").html("Thank You"), a.find(".thankyou-current-point").html("You now have <u>" + (parseInt(e.availablePoints) + t) + " VPoints</u>"), a.find(".autoclose-message").html("Closing in <span>3</span>")), "2" == e.ccType || "3" == e.ccType) { $(".bootstrap-vodus").append("<style>.tingle-enabled {position:unset;overflow:auto;}</style>"), $(".bootstrap-vodus").find(".mobile-bar-vodus").hide(), $(".bootstrap-vodus").find(".mobile-footer-vodus").hide(), $(".bootstrap-vodus").addClass("thankyou-banner"); var o = "", n = a.html(); $(".close-modal-instruction-container").html(""), $(".wait-to-close-div").hide(), $(".click-to-close-div").show().unbind().html("X"), $("#divQuestionaireEditorContainer").html('<div class="s-editable-text question-header-1 banner-thankyou vodus-responded-toast">' + n + o + "</div>"), $(".mobile-footer-vodus").html(""), clearInterval(e.checkCounterTimer), $(".click-to-close-div").click(function () { closeAllVodusModal() }), $(".vodus-responded-toast").click(function () { e.isBannerMode || ($(".autoclose-message").hide(), clearInterval(type2CloseTimer)) }), "mobile-appS" == e.viewType && $(".click-to-close-div").hide() } else { $("#toast-container").remove(), "http://localhost:63828" == origin || "https://vodus-voupon-uat.azurewebsites.net" == origin || "https://vodus.my" == origin || closeAllVodusModal(), (null == e.notificationPosition || "" == e.notificationPosition) && (e.notificationPosition = "top-right"), toastr.options = { closeButton: !0, positionClass: "toast-" + e.notificationPosition, preventDuplicates: !1, showDuration: "300", hideDuration: "1000", timeOut: "5000", extendedTimeOut: "1000", showEasing: "swing", hideEasing: "linear", showMethod: "fadeIn", hideMethod: "fadeOut", allowHTML: !0, tapToDismiss: !0 }, console.log("vodus type others"), console.log("vodus " + e.isBannerMode); var i = 3; $(".autoclose-message span").html(i); var r = setInterval(function () { i--, $(".autoclose-message span").html(i), 0 !== i || (clearInterval(r), e.isBannerMode || toastr.clear()) }, 1e3); toastr.success("", a.html(), { tapToDismiss: !1, closeButton: !0, timeOut: 0, extendedTimeOut: 0, allowHtml: !0 }).on("click", function () { clearInterval(r), $(".autoclose-message").hide() }), $("#toast-container").addClass("vodus-responded-toast") } if (e.availablePoints > 5) var s = 2e3; else var s = 0; 0 > e.reward3PRootUrl.indexOf(document.domain) && setTimeout(function () { vodus.updateAdsData() }, s) } function showCloseMessage() { var e = vodus.getAppData(); if (0 > $(".vodusAvailablePoints").html()) { var t = ["astroawani"], a = document.domain, o = !1; if ($.each(t, function () { if (o = -1 !== a.toLowerCase().indexOf(this.toLowerCase())) return }), !o) { if ("1" == e.ccType) { if (toastr.success("", '<div class="closeMessage-left"><div class= "closeMessage-top"><div class="closeMessage-logo"><img class="partner-logo" src="https://api.vodus.com/cc/images/logo/Vodus%20V3%20Logo%20Favicon.svg"></div><div class="closeMessage-header"></div></div></div><div class="closeMessage-right"></div></div><div>', { tapToDismiss: !1, closeButton: !0, timeOut: 0, extendedTimeOut: 0, allowHtml: !0, toastClass: "closeMessageContent closeMessageType1" }), "ms" == e.language) var n = "<h3>Siapakah Vodus?</h3>", i = "<span>Vodus ialah rakan kongsi penyelidikan pasaran kepada " + e.partnerWebsiteName + " yang memberi <b>ganjaran untuk pendapat anda</b> melalui satu soalan tinjauan yang mudah.</span>", r = "NaN<p>Lihat tawaran ganjaran kami di <a target='_blank' href='" + $(".syncType4").eq(0).attr("href") + "'>Vodus Rewards</a>.</p>"; else if ("zh" == e.language) { var n = "<h3>谁是 Vodus?</h3>", i = "<span>Vodus 是一家与 " + e.partnerWebsiteName + " 合作的市场研究公司，我们会根据<b>您所提供的意见而奖励您</b>。</span>", r = "NaN<p>请登录<a target='_blank' href='" + $(".syncType4").eq(0).attr("href") + "'>Vodus Rewards</a>查看我们的奖励。</p>"; $(".closeMessageContent").addClass("chinese") } else var n = "<h3>Who is Vodus?</h3>", i = "<span>Vodus is a market research partner of " + e.partnerWebsiteName + " that <b>rewards you for your opinion</b> with a simple one-question survey.</span>", r = "NaN<p>Check out our rewards offering on <a target='_blank' href='" + $(".syncType4").eq(0).attr("href") + "'>Vodus Rewards</a>.</p>"; $(".closeMessageType1 .closeMessage-header").html(n), $(".closeMessageType1 .closeMessage-left").append(i), $(".closeMessageType1 .closeMessage-right").html(r) } else { if ($(".bootstrap-vodus").css("display", ""), $(".bootstrap-vodus").addClass("closeMessage"), $(".bootstrap-vodus .partnerLogo").attr("src", "https://api.vodus.com/cc/images/logo/Vodus%20V3%20Logo%20Favicon.svg"), $(".ctc-container").html("<p class='closeMessage-ctc-button'>&#xd7;</p>"), $(".wait-to-close-div").hide(), $(".mobile-footer-vodus").hide(), $(".closeMessage-ctc-button").click(function () { $(".bootstrap-vodus").hide() }), $("#divQuestionaireEditorContainer").html('<div class="closeMessageContent"></div>'), "ms" == e.language) { $(".close-modal-instruction-container").html("<h3>Dapatkan Ganjaran untuk Pendapat Anda</h3>"); var i = "<span>Vodus ialah rakan kongsi penyelidikan pasaran kepada " + e.partnerWebsiteName + " yang memberi <b>ganjaran untuk pendapat anda</b> melalui satu soalan tinjauan yang mudah.</span>", r = "<p>Anda akan mendapat 1 VPoint untuk setiap soalan yang dijawab.</p><p>VPoint anda boleh ditukar dengan <b>baucar tunai atau diskaun beli-belah</b> (10 VPoint untuk diskaun 10% bagi jenama terkenal!)</p><p>Lihat tawaran ganjaran kami di <a target='_blank' href='" + $(".syncType4").eq(0).attr("href") + "'>Vodus Rewards</a>.</p>" } else if ("zh" == e.language) { $(".close-modal-instruction-container").html("<h3>奖励您所提供的意见</h3>"); var i = "<span>Vodus 是一家与 " + e.partnerWebsiteName + " 合作的市场研究公司，我们会根据<b>您所提供的意见而奖励您</b>。</span>", r = "<p>每回答一道调查问题，您将获得 1 Vpoint。</p><p>您的 Vpoint 可兑换<b>现金券或购物折扣</b>（10Vpoints 可兑换知名品牌 10% 的折扣！）</p><p>请登录<a target='_blank' href='" + $(".syncType4").eq(0).attr("href") + "'>Vodus Rewards</a>查看我们的奖励。</p>"; $(".closeMessageContent").addClass("chinese") } else { $(".close-modal-instruction-container").html("<h3>Get Rewarded for Your Opinion</h3>"); var i = "<span>Vodus is a market research partner of " + e.partnerWebsiteName + " that <b>rewards you for your opinion</b> with a simple one-question survey.</span>", r = "<p>You will gain 1 VPoint for every question answered.</p><p>Your VPoints can be exchanged for <b>cash vouchers or shopping discounts</b> (10 VPoints for 10% discount on popular brands!)</p><p>Check out our rewards offering on <a target='_blank' href='" + $(".syncType4").eq(0).attr("href") + "'>Vodus Rewards</a>.</p>" } $(".closeMessageContent").html(i + r) } } } } function type2Close(e) { return type2CloseTimer = setInterval(function () { e--, $(".autoclose-message span").html(e), 0 === e && (closeAllVodusModal(), clearInterval(type2CloseTimer)) }, 1e3) } function onSuccess(e) { null == e && (e = globalGoogleUser); var t = e.getBasicProfile(), a = e.getAuthResponse().id_token; vodus.emailLogin(t.getEmail(), "", "google", a) } function onFailure(e) { toastr.error("Hmm, fail to login with google, please try again."), vodus.log("Google API: " + e) } function initGoogleLogin() { gapi.load("auth2", function () { (auth2 = gapi.auth2.init({ client_id: "700069321358-1t3lj52il4lrfcbffo31qbj78b46dind.apps.googleusercontent.com", fetch_basic_profile: !1, scope: "profile email" })).isSignedIn.listen(signinChanged), auth2.currentUser.listen(userChanged), auth2.attachClickHandler(document.getElementById("vodusGoogleLogin"), {}, onSuccess, onFailure) }) } !function (global) { if (console.log("Vodus => Hello from Vodus. Read documentation at: www.vodus.com/developer/api"), null == global.vodus) { console.error("Vodus => Initialization failed"), console.error("Vodus => Exiting vodus..."); return } var surveyResponse, app = { version: "0.0.2", partner_code: null != global.vodus.partner_code && "" != global.vodus.partner_code ? global.vodus.partner_code.replace(/[^\x00-\x7F]/g, "") : "", interval: global.vodus.interval, language: global.vodus.language, cookieName: "Vodus.Token", debug: global.vodus.debug, rootUrl: "", serverlessUrl: "", initCallbackFunctionName: "", vodus3PRootUrl: "", reward3PRootUrl: "", thirdPartyEnabled: !1, availablePoints: 0, email: "", isLoggedin: !1, skip3PCheck: !1, cacheCode: "?build=" + global.vodus.build, modalClosable: global.vodus.modalClosable, env: global.vodus.env, preferredLanguage: "", selectedType: "", demographicSurveyType: "0", questionData: "", questionModalDelay: global.vodus.questionModalDelay, ctcTimer: global.vodus.ctcTimer, ctcInterval: global.vodus.ctcInterval, surveyQuestionId: 0, loadedAt: "", skipQuestionStatusCheck: !1, skipShowQuestionModal: !0, minSessionCount: global.vodus.minSessionCount, noDemo: global.vodus.noDemo, checkCounterTimer: null, notificationPosition: global.vodus.notificationPosition, ccType: global.vodus.ccType, isReferral: !1, vPointsPerQuestion: 0, dailyAllowance: global.vodus.dailyAllowance, demographicCCType: global.vodus.demographicCCType, demographicCTCTimer: global.vodus.demographicCTCTimer, demographicInterval: global.vodus.demographicInterval, pipeReplace: "", pipeList: "", pipeAnswerIdList: "", idsForPipeList: "", ccRequestUrl: "", ccTargetCode: "", dmpUrl: global.vodus.dmpUrl, dmpType: global.vodus.dmpType, dmpCode: global.vodus.dmpCode, dmpTarget: global.vodus.dmpTarget, chainQuota: global.vodus.chainQuota, chainQuotaCount: 0, isChainQuestion: !1, ccPageScrollTrigger: global.vodus.ccPageScrollTrigger, isCCPageScrollTriggered: !1, catfishPosition: global.vodus.catfishPosition, bannerMode: global.vodus.bannerMode, intervalBannerMode: global.vodus.intervalBannerMode, isBannerMode: !1, isFailBannerMode: !1, isResized: !1, isSurveyFallbackScript: global.vodus.isSurveyFallbackScript, GAMAdUnitId: global.vodus.GAMAdUnitId, stoAfterTotalNoResponse: global.vodus.stoAfterTotalNoResponse, stoCTCTimer: global.vodus.ctcTimer, stoCTCInterval: global.vodus.ctcInterval, stoInterval: global.vodus.interval, stoCCType: global.vodus.ccType, stoDemographicCCType: global.vodus.demographicCCType, rewardsAdSubgroupId: "", rewardsAdDemographicStateId: 0, rewardsAdDemographicAgeId: 0, rewardsAdDemographicGenderId: 0, rewardsAdDemographicEthnicityId: 0, rewardsAdsTemplate: "", rewardsAdsData: "", rewardsAdsTriggeredAt: 0, partnerId: "", partnerWebsiteId: "", partnerWebsiteName: "", fingerPrintObject: null, fingerprint: null, deviceId: null != global.vodus.deviceId && "" != global.vodus.deviceId ? global.vodus.deviceId : "", deviceOS: null != global.vodus.deviceOS && "" != global.vodus.deviceOS ? global.vodus.deviceOS : "1", isUrlSyncRequired: !1, isFingerprintingEnabled: !1, isUrlSyncEnabled: !0, tempToken: "", logStatus: { error: "error", warning: "warning" }, syncType: { intervalSync: "intervalSync", sessionSync: "sessionSync", ccSync: "ccSync" }, thirdPartyTestType: { firstLoad: 1, beforeCC: 2 }, usesLocalStorage: !1, localStorageVersion: 5, localSyncInterval: 120, globalSwitchCheckInterval: 120, cdnUrl: "", displayHeight: 0, questionId: 0, surveyType: 0, memberProfileId: 0, browser: "", isAnswerIDZeroLogged: !1, viewType: null != global.vodus.viewType && "" != global.vodus.viewType ? global.vodus.viewType : "web", containerHeight: global.vodus.containerHeight, cookieSyncType: "", userCountryCode: null != global.vodus.userCountryCode && "" != global.vodus.userCountryCode ? global.vodus.userCountryCode : "" }; if ("live" == app.env ? (app.rootUrl = "https://api.vodus.com", app.ccRequestUrl = "https://api.vodus.com", app.vodus3PRootUrl = "https://api.vodus.com", app.reward3PRootUrl = "https://vodus.my", app.responseRootUrl = "https://api.vodus.com", app.cdnUrl = "https://voduscdn.azureedge.net", app.serverlessUrl = "https://vodus-api-serverless.azurewebsites.net") : "uat" == app.env ? (app.rootUrl = "https://api-uat.vodus.com", app.ccRequestUrl = "https://api-uat.vodus.com", app.vodus3PRootUrl = "https://api-uat.vodus.com", app.reward3PRootUrl = "https://uat.vodus.my", app.responseRootUrl = "https://api-uat.vodus.com", app.cdnUrl = "https://api-uat.vodus.com", app.serverlessUrl = "https://vodus-api-uat-aws-trial.azurewebsites.net") : "dev" == app.env ? (app.rootUrl = "https://vodus-api-dev.azurewebsites.net/", app.ccRequestUrl = "https://vodus-api-dev.azurewebsites.net/", app.vodus3PRootUrl = "https://vodus-api-dev.azurewebsites.net", app.reward3PRootUrl = "https://vodus-rewards-dev.azurewebsites.net", app.responseRootUrl = "https://vodus-dev.azurewebsites.net/", app.cdnUrl = "https://vodus-api-dev.azurewebsites.net/", app.serverlessUrl = "https://vodus-api-serverless-uat.azurewebsites.net/") : "local" == app.env && (app.rootUrl = "http://localhost:5888/", app.ccRequestUrl = "http://localhost:5888/", app.vodus3PRootUrl = "http://localhost:5888", app.reward3PRootUrl = "https://vouppn-uat.azurewebsites.net", app.responseRootUrl = "http://localhost:5888/", app.cdnUrl = "http://localhost:5888/", app.serverlessUrl = "https://localhost:7071/"), null != global.vodus.modalClosable && (app.modalClosable = global.vodus.modalClosable), ("2" == app.ccType || "3" == app.ccType) && (app.skipQuestionStatusCheck = !0), app.debug = !0, null != global.vodus.q) for (var i = 0; i < global.vodus.q.length; i++)null != global.vodus.q[i][0] && "init" == global.vodus.q[i][0].toLowerCase() && null != global.vodus.q[i][1] && (app.initCallbackFunctionName = global.vodus.q[i][1]); if (window.onload = function () { }, "" == app.rootUrl) return console.log("Invalid setup. Exiting Vodus"), !1; var ua = navigator.userAgent; function resyncToken(e) { var t = "", a = "", o = ""; "live" == e ? (t = "https://vodus-api-serverless.azurewebsites.net", a = "https://api.vodus.com/", o = "https://vodus.my/") : "uat" == e ? (t = "https://vodus-api-uat-aws-trial.azurewebsites.net", a = "https://api-uat.vodus.com", o = "https://uat.vodus.my") : "dev" == e ? (t = "https://vodus-api-uat.azurewebsites.net", a = "https://vodus-api-uat.azurewebsites.net", o = "https://voupon-uat.azurewebsites.net") : "local" == e && (t = "https://vodus-api-serverless.azurewebsites.net", a = "https://vodus-api-serverless.azurewebsites.net", o = "https://vouppn-uat.azurewebsites.net"); var n = vodus.readCookie("Vodus.Token"), i = localStorage.getItem("memberProfile"); if (null == i) console.log("Empty localMemberProfile"); else if (5 != (localMemberProfileObject = JSON.parse(i)).version) localStorage.clear(), console.log("Resetting localstorage, newer version available"); else if (null != n && "" != n && "null" != n) { console.log("Nothing to resync. System is latest"); var r = vodus.readCookie("vodus_second_load_check"); if (null == r || "" == r) { var s = vodus.readCookie("vodus_temp_token"); null != s && "" != s ? $.ajax({ type: "POST", dataType: "json", cache: !1, data: JSON.stringify({ token: n, tempToken: s }), url: t + "/api/token/second-load-check", success: function (e) { if (e.successful) { if (null != e.data && "" != e.data) { if ("logout" == e.data) vodus.deleteCookie("Vodus.Token"), vodus.deleteCookie("vodus_temp_token"), vodus.log("resetting token.."), vodus.initCallback(); else if (vodus.log("second load token => " + e.data.trim()), app.thirdPartyEnabled) vodus.getQuestionBeforeInternal(); else { vodus.createCookie("Vodus.Token", e.data.trim(), 3650), vodus.createCookie("vodus_second_load_check", "Y", 3650), vodus.getQuestionBeforeInternal(); return } } else { vodus.getQuestionBeforeInternal(); return } } else { if (999 == e.code) { vodus.deleteCookie("Vodus.Token"), vodus.deleteCookie("vodus_temp_token"), vodus.log("resetting token.."); return } vodus.log("Temp token => Fail to generate second load token" + e.message) } }, error: function (e) { vodus.log(e, app.logStatus.error) } }) : window.location.hostname.indexOf("vodus.my") > -1 || window.location.hostname.indexOf("voupon-uat.azurewebsites.net") > -1 ? vodus.getQuestionBeforeInternal() : $.ajax({ type: "POST", dataType: "json", cache: !1, data: JSON.stringify({ token: n }), url: t + "/api/token/check-logged-out-sync", success: function (e) { if (e.successful) { if (null != e.data && "" != e.data) { if ("logout" == e.data) vodus.createCookie("Vodus.Token", "", -3650), vodus.createCookie("vodus_temp_token", "", -3650), vodus.createCookie("vodus_second_load_check", "", -3650), vodus.createCookie("vodus_sync_clicked", "", -3650), vodus.initCallback(); else { vodus.getQuestionBeforeInternal(); return } } else { vodus.getQuestionBeforeInternal(); return } } else vodus.log("logout check => Fail to check logout state") }, error: function (e) { vodus.log(e, app.logStatus.error) } }) } else window.location.hostname.indexOf("vodus.my") > -1 || window.location.hostname.indexOf("voupon-uat.azurewebsites.net") > -1 ? vodus.getQuestionBeforeInternal() : $.ajax({ type: "POST", dataType: "json", cache: !1, data: JSON.stringify({ token: n }), url: t + "/api/token/check-logged-out-sync", success: function (e) { e.successful ? null != e.data && "" != e.data && "logout" == e.data ? (vodus.createCookie("Vodus.Token", "", -3650), vodus.createCookie("vodus_temp_token", "", -3650), vodus.createCookie("vodus_second_load_check", "", -3650), vodus.initCallback()) : vodus.getQuestionBeforeInternal() : vodus.log("logout check => Fail to check logout state") }, error: function (e) { vodus.log(e, app.logStatus.error) } }); return } if (0 == $("#resyncRewardVodus3PTestContainer").length && $("<div style='height:0;'>").attr({ class: "", id: "resyncRewardVodus3PTestContainer" }).appendTo("body"), 0 == $("#resyncApiVodus3PTestContainer").length && $("<div style='height:0;'>").attr({ class: "", id: "resyncApiVodus3PTestContainer" }).appendTo("body"), null == n || "" == n) { var l = ""; if (null == l || "" == l) { var s = vodus.readCookie("vodus_temp_token"); null == s || "" == s ? $.ajax({ type: "POST", dataType: "json", cache: !1, data: JSON.stringify({ token: n }), url: t + "/api/token/generate-temp-token", success: function (e) { if (e.successful) { if (null != e.data && null != e.data) { if (vodus.log("Temp token => " + e.data.trim()), vodus.createCookie("vodus_temp_token", e.data.trim(), 3650), vodus.createCookie("vodus_sync_clicked", "", -3650), 1 == app.bannerMode) { if (!($(".vodus-banner").length > 0)) return vodus.log("Banner Mode: Vodus Banner div is not found."), app.IsFailBannerMode = !0, !1; 1 == app.ccType && (app.ccType = "3"), app.ctcTimer = 0, app.interval = 0, app.ctcInterval = 0, app.isBannerMode = !0, DetectingMobile(), app.ccPageScrollTrigger = 20, $(".vodus-banner").css("width", "").css("height", "") } else if (1 == app.intervalBannerMode) { if (!($(".vodus-banner").length > 0)) return vodus.log("Banner Mode: Vodus Banner div is not found."), app.IsFailBannerMode = !0, !1; 1 == app.ccType && (app.ccType = "3"), app.ctcTimer = 0, app.interval = 0, app.ctcInterval = 0, app.isBannerMode = !0, DetectingMobile(), app.ccPageScrollTrigger = 20, $(".vodus-banner").css("width", "").css("height", "") } vodus.getQuestionBeforeInternal() } } else vodus.log("Temp token => Fail to generate vodus temp token" + e.message) }, error: function (e) { vodus.log(e, app.logStatus.error) } }) : app.thirdPartyEnabled ? vodus.getQuestionBeforeInternal() : $.ajax({ type: "POST", dataType: "json", cache: !1, data: JSON.stringify({ tempToken: s }), url: t + "/api/token/check-temp-token", success: function (e) { e.successful ? (null != e.data && "" != e.data ? (vodus.log("New token => " + e.data.trim()), vodus.createCookie("Vodus.Token", e.data.trim(), 3650)) : vodus.log("No new token exchanged"), vodus.getQuestionBeforeInternal()) : null != e.data ? (vodus.log("Invalid temp token, recreating..."), vodus.createCookie("vodus_temp_token", e.data.trim(), 3650), vodus.getQuestionBeforeInternal()) : vodus.log("Invalid temp token, recreating...") }, error: function (e) { vodus.log(e, app.logStatus.error) } }) } else vodus.log("Checking/generating deviceId"), $.ajax({ type: "POST", dataType: "json", cache: !1, data: { deviceId: app.deviceId, os: app.deviceOS }, url: t + "/api/token/generate-token-via-device", success: function (e) { e.successful ? null != e.data && "" != e.data ? (vodus.log("New token => " + e.data.token.trim()), vodus.createCookie("vodus_id", e.data.vodusId.trim(), 3650), vodus.createCookie("Vodus.Token", e.data.token.trim(), 3650), vodus.getQuestionBeforeInternal()) : vodus.log("No new token exchanged") : vodus.log("Fail to generate token with device details") }, error: function (e) { vodus.log(e, app.logStatus.error) } }) } else $.ajax({ type: "POST", dataType: "json", cache: !1, data: JSON.stringify({ token: n }), url: t + "/api/token/resync", success: function (e) { if (e.successful) { if (null != e.data && null != e.data) { vodus.log("Resync token => " + e.data.trim()), vodus.createCookie("Vodus.Token", e.data.trim(), 3650); var n = { version: 5, token: e.data.trim(), ctcLastUpdatedAt: null, submitResponseLastUpdatedAt: null, thirdPartyEnabled: !0, lastSyncAt: "", globalCC: { status: "", lastUpdatedAt: "" }, pageLoad: { date: new Date, localCount: 0, serverCount: 0 }, session: { localCount: 0, serverCount: 0, lastUpdatedAt: null } }; localStorage.setItem("memberProfile", JSON.stringify(n)), vodus.log("Creating new localstorage data"), $("#resyncRewardVodus3PTestContainer").html('<iframe id="resyncRewardVodus3PTest" width="0" height="0"  src="' + o + "/token/create-temporary-points?token=" + e.data.trim() + '" frameborder="0" allowfullscreen></iframe>'), $("#resyncApiVodus3PTestContainer").html('<iframe id="resyncApiVodus3PTest" width="0" height="0"  src="' + a + "/v1/token/sync?token=" + e.data.trim() + '" frameborder="0" allowfullscreen></iframe>'), console.log("Done resync") } vodus.getQuestionBeforeInternal() } else console.log("Reissuing a new token..."), vodus.deleteCookie("Vodus.Token"), $("#resyncRewardVodus3PTestContainer").html('<iframe id="vodus3PTest" width="0" height="0"  src="' + a + '/v1/token/delete" frameborder="0" allowfullscreen></iframe>'), $("#resyncApiVodus3PTestContainer").html('<iframe id="reward3PTest" width="0" height="0"  src="' + o + '/token/delete-temporary-points" frameborder="0" allowfullscreen></iframe>'), $.ajax({ type: "GET", dataType: "json", cache: !1, url: t + "/api/token/check", success: function (e) { if (e.successful && null != e.data && null != e.data) { var t = new Date; t.setTime(t.getTime() + 31536e7); var n = "; expires=" + t.toGMTString(), i = "" + document.domain; document.cookie = "Vodus.Token=" + e.data + n + "; SameSite=None;secure; domain=" + i + ";path=/", $("#resyncRewardVodus3PTestContainer").html('<iframe id="resyncRewardVodus3PTest" width="0" height="0"  src="' + o + "/token/create-temporary-points?token=" + e.data.trim() + '" frameborder="0" allowfullscreen></iframe>'), $("#resyncApiVodus3PTestContainer").html('<iframe id="resyncApiVodus3PTest" width="0" height="0"  src="' + a + "/v1/token/sync?token=" + e.data.trim() + '" frameborder="0" allowfullscreen></iframe>'), console.log("Done issuing a new token..."), vodus.getQuestionBeforeInternal() } }, error: function (e) { vodus.log(e, app.logStatus.error) } }) }, error: function (e) { vodus.log(e, app.logStatus.error) } }) } function DetectingMobile() { /Mobi/i.test(navigator.userAgent) ? /iPad|iPod/i.test(navigator.userAgent) ? (app.isMobile = 0, 2 == app.ccType && (app.isMobile = 1)) : app.isMobile = 1 : (app.isMobile = 0, (2 == app.ccType || 3 == app.ccType) && (app.isMobile = 1)) } var token = "", initCallback = "", rootUrl = "", email = "", password = "", loginProvider = "", externalUserId = "", externalUserName = "", firstName = "", lastName = "", gender = "", ageRange = "", partnerCode = "", redirectUrl = "", submitResponseCallback = "", submitResponseArgument = [], noQuestionCallback = "", noQuestionArgument = [], rewardCreateAccountCallback = "", rewardCreateAccountArgument = [], rewardLoginCallback = "", rewardLoginArgument = [], rewardLogoutCallback = "", rewardLogoutArgument = [], rewardGetQuestionCallback = "", rewardGetQuestionArgument = [], partnerData = "", pixelData = "", tingleQuestionModal = "", tingleAboutUsModal = "", tingleSignupModal = "", tingleLoginModal = "", appData = "", vodus = { log: function e(t, a) { app.debug && (a == app.logStatus.error ? console.error("%c Vodus =>" + t, "background: #ff0000; color: #fff") : a == app.logStatus.warning ? console.warn("Vodus => " + t) : console.log("Vodus => " + t)), $(".log").append(t) }, readCookie: function e(t) { for (var a = t + "=", o = document.cookie.split(";"), n = 0; n < o.length; n++) { for (var i = o[n]; " " == i.charAt(0);)i = i.substring(1, i.length); if (0 == i.indexOf(a)) return i.substring(a.length, i.length) } return null }, createCookie: function e(t, a, o) { var n = "" + document.domain; if (document.cookie = t + "=;expires=Thu, 01 Jan 1970 00:00:01 GMT; SameSite=None;secure", o) { var i = new Date; i.setTime(i.getTime() + 864e5 * o); var r = "; expires=" + i.toGMTString() } else var r = ""; console.log("cookie domain > " + n), document.cookie = t + "=" + a + r + "; SameSite=None;secure; domain=" + n + ";path=/", document.cookie = t + "=" + a + r + "; SameSite=None;secure; domain=." + n + ";path=/" }, deleteCookie: function e(t, a, o) { vodus.createCookie(app.cookieName, "", -3650) }, setSkipQuestionStatusCheck: function e(t) { app.skipQuestionStatusCheck = t }, setAvailablePoint: function e(t) { app.availablePoints = t }, getAvailablePoint: function e() { return app.availablePoints }, setRootUrl: function e(t) { rootUrl = t }, getRootUrl: function e() { return rootUrl }, setSkipShowModal: function e(t) { app.skipShowQuestionModal = t }, getSkipShowModal: function e() { return app.skipShowQuestionModal }, setInitCallback: function e(t) { initCallback = t }, getInitCallback: function e() { return initCallback }, setQuestionModal: function e(t) { tingleQuestionModal = t }, getQuestionModal: function e() { return tingleQuestionModal }, setAboutUsModal: function e(t) { tingleAboutUsModal = t }, getAboutUsModal: function e() { return tingleAboutUsModal }, setLoginModal: function e(t) { tingleLoginModal = t }, getLoginModal: function e() { return tingleLoginModal }, setSignupModal: function e(t) { tingleSignupModal = t }, getSignupModal: function e() { return tingleSignupModal }, setAppData: function e(t) { appData = t }, getAppData: function e() { return appData }, setEmail: function e(t) { email = t }, getEmail: function e() { return email }, setPassword: function e(t) { password = t }, getPassword: function e() { return password }, setRewardAdsData: function e(t) { rewardsAdsData = t }, setLoginProvider: function e(t) { loginProvider = t }, getLoginProvider: function e() { return loginProvider }, setExternalUserId: function e(t) { externalUserId = t }, getExternalUserId: function e() { return externalUserId }, setExternalUserName: function e(t) { externalUserName = t }, getExternalUserName: function e() { return externalUserName }, setFirstName: function e(t) { firstName = t }, getFirstName: function e() { return firstName }, setLastName: function e(t) { lastName = t }, getLastName: function e() { return lastName }, setGender: function e(t) { gender = t }, getGender: function e() { return gender }, setAgeRange: function e(t) { ageRange = t }, getAgeRange: function e() { return ageRange }, setPartnerCode: function e(t) { partnerCode = t }, getPartnerCode: function e() { return partnerCode }, setLanguageCode: function e(t) { app.language = t }, getLanguageCode: function e() { return app.language }, setPreferredLanguage: function e(t) { app.preferredLanguage = t }, getPreferredLanguage: function e() { return app.preferredLanguage }, setIsAnswerIDZeroLogged: function e(t) { app.isAnswerIDZeroLogged = t }, getIsAnswerIDZeroLogged: function e() { return app.isAnswerIDZeroLogged }, setSubmitResponseCallback: function e(t) { if (arguments.length > 0 && (submitResponseCallback = arguments[0], arguments.length > 1)) for (var a = 0; a < arguments.length; a++)a > 0 && submitResponseArgument.push(arguments[a]) }, getSubmitResponseCallback: function e() { return submitResponseCallback }, setNoQuestionCallback: function e(t) { if (arguments.length > 0 && (noQuestionCallback = arguments[0], arguments.length > 1)) for (var a = 0; a < arguments.length; a++)a > 0 && noQuestionArgument.push(arguments[a]) }, getNoQuestionCallArgument: function e() { return noQuestionArgument }, getNoQuestionCallback: function e() { return noQuestionCallback }, setRewardCreateAccountCallback: function e(t) { if (arguments.length > 0 && (rewardCreateAccountCallback = arguments[0], arguments.length > 1)) for (var a = 0; a < arguments.length; a++)a > 0 && rewardCreateAccountArgument.push(arguments[a]) }, getRewardCreateAccountCallback: function e() { return rewardCreateAccountCallback }, setRewardLoginCallback: function e(t) { if (arguments.length > 0 && (rewardLoginCallback = arguments[0], arguments.length > 1)) for (var a = 0; a < arguments.length; a++)a > 0 && rewardLoginArgument.push(arguments[a]) }, getRewardLoginCallback: function e() { return rewardLoginCallback }, setRewardGetQuestionCallback: function e(t) { if (arguments.length > 0 && (rewardGetQuestionCallback = arguments[0], arguments.length > 1)) for (var a = 0; a < arguments.length; a++)a > 0 && rewardGetQuestionArgument.push(arguments[a]) }, getRewardGetQuestionArgument: function e() { return rewardGetQuestionArgument }, getRewardGetQuestionCallback: function e() { return rewardGetQuestionCallback }, setRewardLogoutCallback: function e(t) { if (arguments.length > 0 && (rewardLogoutCallback = arguments[0], arguments.length > 1)) for (var a = 0; a < arguments.length; a++)a > 0 && rewardLogoutArgument.push(arguments[a]) }, getRewardLogoutCallback: function e() { return rewardLogoutCallback }, getRewardLogoutArgument: function e() { return rewardLogoutArgument }, setRedirectUrl: function e(t) { redirectUrl = t }, getRedirectUrl: function e() { return redirectUrl }, setSurveyResponse: function e(t) { surveyResponse = t }, getSurveyResponse: function e() { return surveyResponse }, setToken: function e(t) { token = t }, getToken: function e() { return token }, setPartnerData: function e(t) { partnerData = t }, getPartnerData: function e() { return partnerData }, setPixelData: function e(t) { pixelData = t }, getPixelData: function e() { return pixelData }, generateFingerPrint: function e() { initializeAllTheCssAndJavascriptFiles() }, getEmptyLocalVodusStore: function e() { return { cc: { totalCCSinceResponse: 0 }, lastUpdatedAt: Date.now(), rewards: { cache_buster_code: "", thankyou_template: "" }, template: { cache_buster_code: "", thank_you: { en: "" }, type1: { mobile: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" }, desktop: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" } }, type2: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" }, type3: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" } } } }, thirdPartyTest: function e(t) { app.displayHeight = $(window).scrollTop(); var a = vodus.getParameterByName("cctoken"); if (null != a && "" != a) { console.log("skiping 3P checking with ccToken"), vodus.initCallback(); return } if (t == app.thirdPartyTestType.firstLoad) { if (app.skip3PCheck) vodus.log("GetQuestion: Skipping 3P"), vodus.initCallback(); else { 0 == $("#vodus3PTester").length && $("<div>").attr({ class: "", id: "vodus3PTester" }).appendTo("body"), vodus.log("3P check: 3rd party cookie testing in progress..."), $("#vodus3PTester").html('<iframe id="tester" src="' + app.vodus3PRootUrl + '/thirdparty-cookie-check-start.html" style="display:none" />'); var o = function e(t) { if (t.origin == app.vodus3PRootUrl) { if (vodus.log("3P check: Removing 3rd party tester..."), t.origin.indexOf("goog") > 0); else if ("MM:3PCunsupported" === t.data) app.thirdPartyEnabled = !1, vodus.log("3P check: 3rd party cookie not supported", app.logStatus.error), vodus.initCallback(); else if ("MM:3PCsupported" === t.data) { function a(e) { if (e.origin == app.vodus3PRootUrl) { if (e.origin.indexOf("goog") > 1); else if (window.removeEventListener("message", a, !1), null != e.data && "" != e.data) { var t = $("<div>").html(e.data).text(); vodus.createCookie(app.cookieName, t, 3650), vodus.setToken(t), app.cookieSyncType = "api", app.thirdPartyEnabled = !0, vodus.initCallback() } else $("#vodus3PCookie").html('<iframe id="vodusIframe" width="0" height="0"  src="' + app.reward3PRootUrl + "/token/check?partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#vodusIframe").on("load", function () { document.getElementById("vodusIframe").contentWindow.postMessage("hello", "*") }), window.addEventListener("message", n, !1) } } function n(e) { if (e.origin == app.reward3PRootUrl) { if (e.origin.indexOf("goog") > 1); else { if (window.removeEventListener("message", a, !1), null != e.data && "" != e.data) { console.log("VODUS T2 : " + e.data); var t = $("<div>").html(e.data).text(); vodus.createCookie(app.cookieName, t, 3650), vodus.setToken(t), app.cookieSyncType = "voupon" } app.thirdPartyEnabled = !0, vodus.initCallback() } } } window.removeEventListener("message", o, !1), vodus.log("3P check: 3rd party cookie supported"), app.skip3PCheck = !0, app.thirdPartyEnabled = !0, 0 == $("#vodus3PCookie").length && $("<div>").attr({ class: "", id: "vodus3PCookie" }).appendTo("body"), $("#vodus3PCookie").html('<iframe id="vodusIframe" width="0" height="0"  src="' + app.vodus3PRootUrl + "/v1/token/serverless?partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#vodusIframe").on("load", function () { document.getElementById("vodusIframe").contentWindow.postMessage("hello", "*") }), window.addEventListener("message", a, !1), vodus.readCookie("Vodus.Token") } } }; window.addEventListener("message", o, !1) } } else vodus.initCallback() }, getCCParameter: function e(t, a) { var o = ""; "live" == a ? o = "https://vodus-api-serverless.azurewebsites.net/" : "uat" == a ? o = "https://vodus-api-uat-aws-trial.azurewebsites.net/" : "dev" == a ? o = "https://vodus-api-dev.azurewebsites.net/" : "local" == a && (o = "http://localhost:5888/"); var n = window.location.hostname.replace("www.", ""); vodus.log("Checking cc parameters..."), $.ajax({ type: "POST", dataType: "json", async: !1, cache: !1, data: JSON.stringify({ PartnerCode: t, RefreshCache: !1, Hostname: n }), url: o + "api/getCCParameter", success: function (e) { if (e.successful) { null != (GlobalParameter = e.data) && (app.debug = GlobalParameter.IsJSConsoleLogEnabled, app.isFingerprintingEnabled = GlobalParameter.IsFingerprintingEnabled, app.debug && console.log(GlobalParameter), GlobalParameter.IsAdminCCControl ? (app.interval = GlobalParameter.Interval, app.delay = GlobalParameter.Delay, app.ctcTimer = GlobalParameter.CTCTimer, app.ctcInterval = GlobalParameter.CTCInterval, app.language = GlobalParameter.Language, app.modalClosable = GlobalParameter.ModalClosable, app.minSessionCount = GlobalParameter.MinSessionCount, app.noDemo = GlobalParameter.NoDemo, app.ccType = GlobalParameter.CCType, app.dailyAllowance = GlobalParameter.DailyAllowance, app.demographicCCType = GlobalParameter.DemographicCCType, app.demographicCTCTimer = GlobalParameter.DemographicCTCTimer, app.demographicInterval = GlobalParameter.DemographicInterval, app.ccPageScrollTrigger = GlobalParameter.CCScrollTrigger, app.catfishPosition = GlobalParameter.CatFishPosition, app.chainQuota = GlobalParameter.ChainQuota, app.bannerMode = GlobalParameter.BannerMode, app.intervalBannerMode = GlobalParameter.IntervalBannerMode, app.stoAfterTotalNoResponse = GlobalParameter.STOAfterTotalNoResponse, app.stoCTCTimer = GlobalParameter.CTCTimer, app.stoCTCInterval = GlobalParameter.CTCInterval, app.stoInterval = GlobalParameter.Interval, app.stoCCType = GlobalParameter.CCType, app.stoDemographicCCType = GlobalParameter.DemographicCCType, app.dmpType = GlobalParameter.DMPType, app.dmpCode = GlobalParameter.DMPCode, app.dmpTargetAudience = GlobalParameter.DMPTargetAudience, app.dmpTargetCode = GlobalParameter.DMPTargetCode, app.chainQuota = GlobalParameter.ChainQuota) : ((null == app.interval || "" == app.interval) && (app.interval = GlobalParameter.Interval), (null == app.delay || "" == app.delay) && (app.delay = GlobalParameter.Delay), (null == app.ctcTimer || "" == app.ctcTimer) && (app.ctcTimer = GlobalParameter.CTCTimer), (null == app.ctcInterval || "" == app.ctcInterval) && (app.ctcInterval = GlobalParameter.CTCInterval), (null == app.language || "" == app.language) && (app.language = GlobalParameter.Language), null == app.modalClosable && (app.modalClosable = GlobalParameter.ModalClosable), (null == app.minSessionCount || "" == app.minSessionCount) && (app.minSessionCount = GlobalParameter.MinSessionCount), (null == app.noDemo || "" == app.noDemo) && (app.noDemo = GlobalParameter.NoDemo), (null == app.ccType || "" == app.ccType) && (app.ccType = GlobalParameter.CCType), (null == app.dailyAllowance || "" == app.dailyAllowance) && (app.dailyAllowance = GlobalParameter.DailyAllowance), (null == app.demographicCCType || "" == app.demographicCCType) && (app.demographicCCType = GlobalParameter.DemographicCCType), (null == app.demographicCTCTimer || "" == app.demographicCTCTimer) && (app.demographicCTCTimer = GlobalParameter.DemographicCTCTimer), (null == app.demographicInterval || "" == app.demographicInterval) && (app.demographicInterval = GlobalParameter.DemographicInterval), (null == app.ccPageScrollTrigger || "" == app.ccPageScrollTrigger) && (app.ccPageScrollTrigger = GlobalParameter.CCScrollTrigger), (null == app.catfishPosition || "" == app.catfishPosition) && (app.catfishPosition = GlobalParameter.CatFishPosition), (null == app.bannerMode || "" == app.bannerMode) && (app.bannerMode = GlobalParameter.BannerMode), (null == app.intervalBannerMode || "" == app.intervalBannerMode) && (app.intervalBannerMode = GlobalParameter.IntervalBannerMode), (null == app.stoAfterTotalNoResponse || "" == app.stoAfterTotalNoResponse) && (app.stoAfterTotalNoResponse = GlobalParameter.STOAfterTotalNoResponse), (null == app.stoCTCTimer || "" == app.stoCTCTimer) && (app.stoCTCTimer = GlobalParameter.CTCTimer), (null == app.stoCTCInterval || "" == app.stoCTCInterval) && (app.stoCTCInterval = GlobalParameter.CTCInterval), (null == app.stoInterval || "" == app.stoInterval) && (app.stoInterval = GlobalParameter.Interval), (null == app.stoCCType || "" == app.stoCCType) && (app.stoCCType = GlobalParameter.CCType), (null == app.stoCCType || "" == app.stoCCType) && (app.stoDemographicCCType = GlobalParameter.DemographicCCType), null == app.isUrlSyncEnabled && (app.isUrlSyncEnabled = GlobalParameter.IsUrlSyncEnabled), (null == app.dmpCode || "" == app.dmpCode) && (app.dmpCode = GlobalParameter.DMPCode), (null == app.dmpType || "" == app.dmpType) && (app.dmpType = GlobalParameter.DMPType), (null == app.dmpTargetAudience || "" == app.dmpTargetAudience) && (app.dmpTargetAudience = GlobalParameter.DMPTargetAudience), (null == app.dmpTargetCode || "" == app.dmpTargetCode) && (app.dmpTargetCode = GlobalParameter.DMPTargetCode), (null == app.chainQuota || "" == app.chainQuota) && (app.chainQuota = GlobalParameter.ChainQuota))), (void 0 === global.vodus.partner_code || null == global.vodus.partner_code) && (global.vodus.partner_code = ""), (void 0 === global.vodus.interval || null == global.vodus.interval || "" == global.vodus.interval) && (global.vodus.interval = 0), (void 0 === global.vodus.delay || null == global.vodus.delay || "" == global.vodus.delay) && (global.vodus.delay = 0), (void 0 === global.vodus.questionModalDelay || null == global.vodus.questionModalDelay || "" == global.vodus.questionModalDelay) && (global.vodus.questionModalDelay = 1), (void 0 === global.vodus.ctcTimer || null == global.vodus.ctcTimer || "" == global.vodus.ctcTimer) && (global.vodus.ctcTimer = 0), (void 0 === global.vodus.ctcInterval || null == global.vodus.ctcInterval || "" == global.vodus.ctcInterval) && (global.vodus.ctcInterval = 0), (void 0 === global.vodus.language || null == global.vodus.language || "" == global.vodus.language) && (global.vodus.language = ""), (void 0 === global.vodus.modalClosable || null == global.vodus.modalClosable) && (global.vodus.modalClosable = !0), (void 0 === global.vodus.minSessionCount || null == global.vodus.minSessionCount || "" == global.vodus.minSessionCount) && (global.vodus.minSessionCount = 0), (void 0 === global.vodus.noDemo || null == global.vodus.noDemo || "" == global.vodus.noDemo) && (global.vodus.noDemo = 0), (void 0 === global.vodus.ccType || null == global.vodus.ccType || "" == global.vodus.ccType) && (global.vodus.ccType = 1), (void 0 === global.vodus.dailyAllowance || null == global.vodus.dailyAllowance || "" == global.vodus.dailyAllowance) && (global.vodus.dailyAllowance = 0), (void 0 === global.vodus.notificationPosition || null == global.vodus.notificationPosition) && (global.vodus.notificationPosition = "top-right"), (void 0 === global.vodus.demographicCCType || null == global.vodus.demographicCCType || "" == global.vodus.demographicCCType) && (global.vodus.demographicCCType = "2"), (void 0 === global.vodus.demographicCTCTimer || null == global.vodus.demographicCTCTimer || "" == global.vodus.demographicCTCTimer) && (global.vodus.demographicCTCTimer = 0), (void 0 === global.vodus.demographicInterval || null == global.vodus.demographicInterval || "" == global.vodus.demographicInterval) && (global.vodus.demographicInterval = 0), (void 0 === global.vodus.env || null == global.vodus.env) && (global.vodus.env = "uat"), (void 0 === global.vodus.ccPageScrollTrigger || null == global.vodus.ccPageScrollTrigger || "" == global.vodus.ccPageScrollTrigger) && (global.vodus.ccPageScrollTrigger = 10), (void 0 === global.vodus.catfishPosition || null == global.vodus.catfishPosition || "" == global.vodus.catfishPosition) && (global.vodus.catfishPosition = "bottom-right"), (void 0 === global.vodus.chainQuota || null == global.vodus.chainQuota || "" == global.vodus.chainQuota) && (global.vodus.chainQuota = 0), (void 0 === global.vodus.bannerMode || null == global.vodus.bannerMode || "" == global.vodus.bannerMode) && (global.vodus.bannerMode = 0), (void 0 === global.vodus.intervalBannerMode || null == global.vodus.intervalBannerMode || "" == global.vodus.intervalBannerMode) && (global.vodus.intervalBannerMode = 0), (void 0 === global.vodus.isSurveyFallbackScript || null == global.vodus.isSurveyFallbackScript || "" == global.vodus.isSurveyFallbackScript) && (global.vodus.isSurveyFallbackScript = "0"), (void 0 === global.vodus.GAMAdUnitId || null == global.vodus.GAMAdUnitId || "" == global.vodus.GAMAdUnitId) && (global.vodus.GAMAdUnitId = ""), (void 0 === global.vodus.stoAfterTotalNoResponse || null == global.vodus.stoAfterTotalNoResponse || "" == global.vodus.stoAfterTotalNoResponse) && (global.vodus.stoAfterTotalNoResponse = 999), (void 0 === global.vodus.chainQuota || null == global.vodus.chainQuota || "" == global.vodus.chainQuota) && (global.vodus.chainQuota = 1), vodus.setAppData(app); var t = { Interval: app.interval, Delay: app.delay, CTCTimer: app.ctcTimer, CTCInterval: app.ctcInterval, Language: app.language, ModalClosable: app.modalClosable, MinSessionCount: app.minSessionCount, NoDemo: app.noDemo, CCType: app.ccType, DailyAllowance: app.dailyAllowance, DemographicCCType: app.demographicCCType, DemographicCTCTimer: app.demographicCTCTimer, DemographicInterval: app.demographicInterval, CCScrollTrigger: app.ccPageScrollTrigger, CatFishPosition: app.catfishPosition, ChainQuota: app.chainQuota, BannerMode: app.bannerMode, IntervalBannerMode: app.intervalBannerMode, STOAfterTotalNoResponse: app.stoAfterTotalNoResponse, DMPType: app.dmpType, DMPCode: app.dmpCode, DMPTargetAudience: app.dmpTargetAudience, DMPTargetCode: app.dmpTargetCode, IsAdminCCControl: GlobalParameter.IsAdminCCControl, IsJSConsoleLogEnabled: GlobalParameter.IsJSConsoleLogEnabled }; return console.log(t), vodus.createCookie("vodus_cc_parameter_last_sync", new Date, 365), vodus.createCookie("vodus_cc_parameter", JSON.stringify(t), 365), vodus.log("Done checking cc parameters..."), null != app.initCallbackFunctionName ? "function" == typeof window[app.initCallbackFunctionName] ? (vodus.log("Executing init callback -> " + app.initCallbackFunctionName), window[app.initCallbackFunctionName].apply(this)) : vodus.log("Invalid init callback -> " + app.initCallbackFunctionName) : vodus.log("No init callback", app.logStatus.warning), !0 } }, error: function (e) { vodus.log(e, app.logStatus.error) } }) }, isAlive: function e() { return $.ajax({ type: "GET", dataType: "json", url: app.serverlessUrl + "/api/monitoring/isAlive", success: function (e) { e.successful && (vodus.log("Vodus is alive!"), "function" == typeof callback && callback(!1, "success")) }, error: function (e, t, a) { "function" == typeof callback && callback(!0, a) } }), !0 }, update3PToken: function e() { let t = e => new Promise(t => setTimeout(t, e)); if (0 == vodus.getToken().length) { vodus.log("Token is empty...", app.logStatus.error); return } if (app.thirdPartyEnabled) { 0 == $("#vodus_3PTest").length && $("<div>").attr({ class: "", id: "vodus_3PTest" }).appendTo("body"); var a = vodus.readCookie(app.cookieName).trim(); $("#resyncApiVodus3PTestContainer").html('<iframe id="resyncApiVodus3PTest" width="0" height="0"  src="' + app.rootUrl + "/v1/token/sync?token=" + a + '" frameborder="0" allowfullscreen></iframe>'), $("#vodus_3PTest").html('<iframe id="vodus3PTest" width="0" height="0"  src="' + app.vodus3PRootUrl + "/v1/token/create?partnerCode=" + app.partner_code + "&token=" + a + '" frameborder="0" allowfullscreen></iframe>'), $("#vodus3PTest").on("load", function () { vodus.log("Update 3P: Updated token") }), t(5e3).then(() => { location.reload() }) } else vodus.log("Update 3P: Skip, third party no enabled", vodus.log.warning), location.reload(); return !0 }, logout: function e() { return vodus.getToken().length, app.thirdPartyEnabled ? (vodus.deleteCookie(app.cookieName), app.skip3PCheck = !0, 0 == $("#vodus_3PTest").length && $("<div>").attr({ class: "", id: "vodus_3PTest" }).appendTo("body"), 0 == $("#reward_3PTest").length && $("<div>").attr({ class: "", id: "reward_3PTest" }).appendTo("body"), vodus.log("logout: loggging out..."), app.thirdPartyEnabled && ($("#vodus_3PTest").html('<iframe id="vodus3PTest" width="0" height="0"  src="' + app.vodus3PRootUrl + "/v1/token/delete?partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#reward_3PTest").html('<iframe id="reward3PTest" width="0" height="0"  src="' + app.reward3PRootUrl + "/token/delete-temporary-points?partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'))) : vodus.log("Logout 3P: Skip, third party no enabled"), !0 }, initCallback: function e() { var t = vodus.readCookie("vodus_cc_parameter_last_sync"), a = !1; null == t || "" == t ? a = !0 : Math.floor((new Date - new Date(t)) / 1e3 / 60) > 5 && (a = !0); var o = vodus.readCookie("vodus_cc_parameter"); if ((null == o || void 0 == o || "undefined" == o) && (a = !0), !a) return null != o && "" != o && ((GlobalParameter = JSON.parse(o)).IsAdminCCControl ? (app.interval = GlobalParameter.Interval, app.delay = GlobalParameter.Delay, app.ctcTimer = GlobalParameter.CTCTimer, app.ctcInterval = GlobalParameter.CTCInterval, app.language = GlobalParameter.Language, app.modalClosable = GlobalParameter.ModalClosable, app.minSessionCount = GlobalParameter.MinSessionCount, app.noDemo = GlobalParameter.NoDemo, app.ccType = GlobalParameter.CCType, app.dailyAllowance = GlobalParameter.DailyAllowance, app.demographicCCType = GlobalParameter.DemographicCCType, app.demographicCTCTimer = GlobalParameter.DemographicCTCTimer, app.demographicInterval = GlobalParameter.DemographicInterval, app.ccPageScrollTrigger = GlobalParameter.CCScrollTrigger, app.catfishPosition = GlobalParameter.CatFishPosition, app.chainQuota = GlobalParameter.ChainQuota, app.bannerMode = GlobalParameter.BannerMode, app.intervalBannerMode = GlobalParameter.IntervalBannerMode, app.stoAfterTotalNoResponse = GlobalParameter.STOAfterTotalNoResponse, app.stoCTCTimer = GlobalParameter.CTCTimer, app.stoCTCInterval = GlobalParameter.CTCInterval, app.stoInterval = GlobalParameter.Interval, app.stoCCType = GlobalParameter.CCType, app.stoDemographicCCType = GlobalParameter.DemographicCCType, app.dmpType = GlobalParameter.DMPType, app.dmpCode = GlobalParameter.DMPCode, app.dmpTargetAudience = GlobalParameter.DMPTargetAudience, app.dmpTargetCode = GlobalParameter.DMPTargetCode, app.chainQuota = GlobalParameter.ChainQuota) : ((null == app.interval || "" == app.interval) && (app.interval = GlobalParameter.Interval), (null == app.delay || "" == app.delay) && (app.delay = GlobalParameter.Delay), (null == app.ctcTimer || "" == app.ctcTimer) && (app.ctcTimer = GlobalParameter.CTCTimer), (null == app.ctcInterval || "" == app.ctcInterval) && (app.ctcInterval = GlobalParameter.CTCInterval), (null == app.language || "" == app.language) && (app.language = GlobalParameter.Language), null == app.modalClosable && (app.modalClosable = GlobalParameter.ModalClosable), (null == app.minSessionCount || "" == app.minSessionCount) && (app.minSessionCount = GlobalParameter.MinSessionCount), (null == app.noDemo || "" == app.noDemo) && (app.noDemo = GlobalParameter.NoDemo), (null == app.ccType || "" == app.ccType) && (app.ccType = GlobalParameter.CCType), (null == app.dailyAllowance || "" == app.dailyAllowance) && (app.dailyAllowance = GlobalParameter.DailyAllowance), (null == app.demographicCCType || "" == app.demographicCCType) && (app.demographicCCType = GlobalParameter.DemographicCCType), (null == app.demographicCTCTimer || "" == app.demographicCTCTimer) && (app.demographicCTCTimer = GlobalParameter.DemographicCTCTimer), (null == app.demographicInterval || "" == app.demographicInterval) && (app.demographicInterval = GlobalParameter.DemographicInterval), (null == app.ccPageScrollTrigger || "" == app.ccPageScrollTrigger) && (app.ccPageScrollTrigger = GlobalParameter.CCScrollTrigger), (null == app.catfishPosition || "" == app.catfishPosition) && (app.catfishPosition = GlobalParameter.CatFishPosition), (null == app.bannerMode || "" == app.bannerMode) && (app.bannerMode = GlobalParameter.BannerMode), (null == app.intervalBannerMode || "" == app.intervalBannerMode) && (app.intervalBannerMode = GlobalParameter.IntervalBannerMode), (null == app.stoAfterTotalNoResponse || "" == app.stoAfterTotalNoResponse) && (app.stoAfterTotalNoResponse = GlobalParameter.STOAfterTotalNoResponse), (null == app.stoCTCTimer || "" == app.stoCTCTimer) && (app.stoCTCTimer = GlobalParameter.CTCTimer), (null == app.stoCTCInterval || "" == app.stoCTCInterval) && (app.stoCTCInterval = GlobalParameter.CTCInterval), (null == app.stoInterval || "" == app.stoInterval) && (app.stoInterval = GlobalParameter.Interval), (null == app.stoCCType || "" == app.stoCCType) && (app.stoCCType = GlobalParameter.CCType), (null == app.stoCCType || "" == app.stoCCType) && (app.stoDemographicCCType = GlobalParameter.DemographicCCType), null == app.isUrlSyncEnabled && (app.isUrlSyncEnabled = GlobalParameter.IsUrlSyncEnabled), (null == app.dmpCode || "" == app.dmpCode) && (app.dmpCode = GlobalParameter.DMPCode), (null == app.dmpType || "" == app.dmpType) && (app.dmpType = GlobalParameter.DMPType), (null == app.dmpTargetAudience || "" == app.dmpTargetAudience) && (app.dmpTargetAudience = GlobalParameter.DMPTargetAudience), (null == app.dmpTargetCode || "" == app.dmpTargetCode) && (app.dmpTargetCode = GlobalParameter.DMPTargetCode), (null == app.chainQuota || "" == app.chainQuota) && (app.chainQuota = GlobalParameter.ChainQuota))), (void 0 === global.vodus.partner_code || null == global.vodus.partner_code) && (global.vodus.partner_code = ""), (void 0 === global.vodus.interval || null == global.vodus.interval || "" == global.vodus.interval) && (global.vodus.interval = 0), (void 0 === global.vodus.delay || null == global.vodus.delay || "" == global.vodus.delay) && (global.vodus.delay = 0), (void 0 === global.vodus.questionModalDelay || null == global.vodus.questionModalDelay || "" == global.vodus.questionModalDelay) && (global.vodus.questionModalDelay = 1), (void 0 === global.vodus.ctcTimer || null == global.vodus.ctcTimer || "" == global.vodus.ctcTimer) && (global.vodus.ctcTimer = 0), (void 0 === global.vodus.ctcInterval || null == global.vodus.ctcInterval || "" == global.vodus.ctcInterval) && (global.vodus.ctcInterval = 0), (void 0 === global.vodus.language || null == global.vodus.language || "" == global.vodus.language) && (global.vodus.language = ""), (void 0 === global.vodus.modalClosable || null == global.vodus.modalClosable) && (global.vodus.modalClosable = !0), (void 0 === global.vodus.minSessionCount || null == global.vodus.minSessionCount || "" == global.vodus.minSessionCount) && (global.vodus.minSessionCount = 0), (void 0 === global.vodus.noDemo || null == global.vodus.noDemo || "" == global.vodus.noDemo) && (global.vodus.noDemo = 0), (void 0 === global.vodus.ccType || null == global.vodus.ccType || "" == global.vodus.ccType) && (global.vodus.ccType = 1), (void 0 === global.vodus.dailyAllowance || null == global.vodus.dailyAllowance || "" == global.vodus.dailyAllowance) && (global.vodus.dailyAllowance = 0), (void 0 === global.vodus.notificationPosition || null == global.vodus.notificationPosition) && (global.vodus.notificationPosition = "top-right"), (void 0 === global.vodus.demographicCCType || null == global.vodus.demographicCCType || "" == global.vodus.demographicCCType) && (global.vodus.demographicCCType = "2"), (void 0 === global.vodus.demographicCTCTimer || null == global.vodus.demographicCTCTimer || "" == global.vodus.demographicCTCTimer) && (global.vodus.demographicCTCTimer = 0), (void 0 === global.vodus.demographicInterval || null == global.vodus.demographicInterval || "" == global.vodus.demographicInterval) && (global.vodus.demographicInterval = 0), (void 0 === global.vodus.env || null == global.vodus.env) && (global.vodus.env = "uat"), (void 0 === global.vodus.ccPageScrollTrigger || null == global.vodus.ccPageScrollTrigger || "" == global.vodus.ccPageScrollTrigger) && (global.vodus.ccPageScrollTrigger = 10), (void 0 === global.vodus.catfishPosition || null == global.vodus.catfishPosition || "" == global.vodus.catfishPosition) && (global.vodus.catfishPosition = "bottom-right"), (void 0 === global.vodus.chainQuota || null == global.vodus.chainQuota || "" == global.vodus.chainQuota) && (global.vodus.chainQuota = 0), (void 0 === global.vodus.bannerMode || null == global.vodus.bannerMode || "" == global.vodus.bannerMode) && (global.vodus.bannerMode = 0), (void 0 === global.vodus.intervalBannerMode || null == global.vodus.intervalBannerMode || "" == global.vodus.intervalBannerMode) && (global.vodus.intervalBannerMode = 0), (void 0 === global.vodus.isSurveyFallbackScript || null == global.vodus.isSurveyFallbackScript || "" == global.vodus.isSurveyFallbackScript) && (global.vodus.isSurveyFallbackScript = "0"), (void 0 === global.vodus.GAMAdUnitId || null == global.vodus.GAMAdUnitId || "" == global.vodus.GAMAdUnitId) && (global.vodus.GAMAdUnitId = ""), (void 0 === global.vodus.stoAfterTotalNoResponse || null == global.vodus.stoAfterTotalNoResponse || "" == global.vodus.stoAfterTotalNoResponse) && (global.vodus.stoAfterTotalNoResponse = 999), (void 0 === global.vodus.chainQuota || null == global.vodus.chainQuota || "" == global.vodus.chainQuota) && (global.vodus.chainQuota = 1), vodus.setAppData(app), vodus.log("Done checking cc parameters..."), null != app.initCallbackFunctionName ? "function" == typeof window[app.initCallbackFunctionName] ? (vodus.log("Executing init callback -> " + app.initCallbackFunctionName), window[app.initCallbackFunctionName].apply(this)) : vodus.log("Invalid init callback -> " + app.initCallbackFunctionName) : vodus.log("No init callback", app.logStatus.warning), !0; var n = ""; null != app.partner_code && "" != app.partner_code && (n = app.partner_code.replace(/[^\x00-\x7F]/g, "")), vodus.getCCParameter(n, app.env) }, createAccount: function e() { toastr.clear(); var t = vodus.readCookie(app.cookieName), a = $("#vodusSignupEmail").val(), o = $("#vodusSignupPassword").val(); if (0 == a.length || 0 == o.length) { "ms" == app.language ? toastr.error("E-mel dan kata laluan diperlukan") : "zh" == app.language ? toastr.error("需要输入电子邮件和密码") : toastr.error("Email and password are required"); return } vodus.setEmail(a); var n = ""; app.isFingerprintingEnabled && (n = vodus.readCookie("vodus_device_id")); var i = { partnerCode: app.partner_code, email: a, password: o, loginProvider: "Email", token: t, deviceId: n }; $("#vodusSignupLoader").show(), $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(i), url: app.rootUrl + "v1/authentication/CreateAccount", success: function (e) { e.successful ? (closeAllVodusModal(), $("#vodusSignupLoader").hide(), "ms" == app.language ? toastr.success("", "<h4>Akaun Vodus anda telah berjaya didaftarkan.<h4>") : "zh" == app.language ? toastr.success("", "<h4>您的Vodus帐户已成功注册。</h4>") : toastr.success("", "<h4>Your Vodus account is successfully registered.</h4>"), $("#toast-container").addClass("vodus-responded-toast"), vodus.getQuestion()) : ($("#vodusSignupLoader").hide(), toastr.options = { allowHtml: !0 }, toastr.error(e.message)) }, error: function (e) { vodus.log(e, app.logStatus.error) } }) }, isLocalStorageAvailable: function e() { var t = "test"; try { return localStorage.setItem(t, t), localStorage.removeItem(t), vodus.log("Localstorage available"), app.usesLocalStorage = !0, !0 } catch (a) { return vodus.log("Localstorage not supported", app.logStatus.warning), !1 } }, getQuestionBeforeInternal: function e() { var t = vodus.readCookie("Vodus.Token"); if (null !== t && "" !== t && (console.log("Updating Vodus.Token expiry"), vodus.createCookie(app.cookieName, t, 3650)), app.isFingerprintingEnabled) return vodus.getQuestionInternal(), !0; if (1 == app.bannerMode) { if (!($(".vodus-banner").length > 0)) return vodus.log("Banner Mode: Vodus Banner div is not found."), app.IsFailBannerMode = !0, !1; 1 == app.ccType && (app.ccType = "3"), app.ctcTimer = 0, app.interval = 0, app.ctcInterval = 0, app.isBannerMode = !0, DetectingMobile(), app.ccPageScrollTrigger = 20, $(".vodus-banner").css("width", "").css("height", "") } else if (1 == app.intervalBannerMode) { if (!($(".vodus-banner").length > 0)) return vodus.log("Banner Mode: Vodus Banner div is not found."), app.IsFailBannerMode = !0, !1; 1 == app.ccType && (app.ccType = "3"), app.ctcTimer = 0, app.interval = 0, app.ctcInterval = 0, app.isBannerMode = !0, DetectingMobile(), app.ccPageScrollTrigger = 20, $(".vodus-banner").css("width", "").css("height", "") } var a = localStorage.getItem("memberProfile"), o = null, n = new Date; if (null == a) o = { version: 5, token: token, ctcLastUpdatedAt: null, submitResponseLastUpdatedAt: null, thirdPartyEnabled: app.thirdPartyEnabled, lastSyncAt: "", globalCC: { status: "", lastUpdatedAt: "" }, pageLoad: { date: n, localCount: 0, serverCount: 0 }, session: { localCount: 0, serverCount: 0, lastUpdatedAt: null } }, localStorage.setItem("memberProfile", JSON.stringify(o)), vodus.log("Creating new localstorage data"), vodus.localStorageCheck(o); else { if ((o = JSON.parse(a)).version != app.localStorageVersion) return localStorage.clear(), vodus.log("Resetting localstorage, newer version available"), !1; var i = new Date; Math.floor((i - new Date(o.lastSyncAt)) / 1e3 / 60) > app.localSyncInterval ? (vodus.log("Localstorage: Sync interval reached. Try to sync local data"), vodus.ccDataSync(o, app.syncType.intervalSync)) : (vodus.log("Localstorage: Sync interval not reached. Skip interval sync > " + (app.localSyncInterval - Math.floor((i - new Date(o.lastSyncAt)) / 1e3 / 60)).toFixed(2)), vodus.localStorageCheck(o)) } }, getParameterByName: function e(t, a = window.location.href) { var o = RegExp("[?&]" + (t = t.replace(/[\[\]]/g, "\\$&")) + "(=([^&#]*)|&|#|$)").exec(a); return o ? o[2] ? decodeURIComponent(o[2].replace(/\+/g, " ")) : "" : null }, getQuestion: function e() { var t = vodus.getParameterByName("cctoken"); null == t || "" == t ? resyncToken(app.env) : vodus.getCC() }, toUTC: function e(t) { return t = null == t ? new Date : new Date(t), new Date(t.setMinutes(t.getMinutes() + t.getTimezoneOffset())) }, localStorageCheck: function e(t) { if (null == t.lastSyncAt || "" == t.lastSyncAt) return vodus.log("Localstorage: First setup sync..."), vodus.ccDataSync(t, app.syncType.intervalSync), !1; (null == app.dailyAllowance || "" == app.dailyAllowance) && (app.dailyAllowance = 0); var a = new Date, o = new Date; if (null != t.session.lastUpdatedAt ? o = new Date(t.session.lastUpdatedAt) : (t.session.lastUpdatedAt = new Date, localStorage.setItem("memberProfile", JSON.stringify(t))), Math.floor((a - o) / 1e3 / 60) >= app.interval); else { vodus.log("Localstorage: Interval not met > " + (60 * app.interval - (a - o) / 1e3).toFixed(2)); return } t.session.lastSyncAt, t.pageLoad.localCount = t.pageLoad.localCount + 1, localStorage.setItem("memberProfile", JSON.stringify(t)), vodus.log("Localstorage: Local page load +1 , Total: " + (t.pageLoad.localCount + t.pageLoad.serverCount)); var n = t.pageLoad.localCount + t.pageLoad.serverCount; if (!(n > app.dailyAllowance)) return vodus.log("Localstorage: Yay. Page load count not reached. " + n + "/" + app.dailyAllowance), !1; var i = t.session.localCount + t.session.serverCount; if (null != t.ctcLastUpdatedAt || null != t.submitResponseLastUpdatedAt || i > app.minSessionCount) { let r = new Date(t.submitResponseLastUpdatedAt), s = new Date(t.ctcLastUpdatedAt); function l() { if (!($(".vodus-banner").length > 0)) return vodus.log("Banner Mode: Vodus Banner div is not found."), app.IsFailBannerMode = !0, !1; 1 == app.ccType && (app.ccType = "3"), app.ctcTimer = 0, app.interval = 0, app.ctcInterval = 0, app.isBannerMode = !0, DetectingMobile(), app.ccPageScrollTrigger = 20, $(".vodus-banner").css("width", "").css("height", "") } if (1 == app.bannerMode ? l() : 1 != app.intervalBannerMode || Math.floor((a - r) / 1e3 / 60) >= app.interval && Math.floor((a - s) / 1e3 / 60) >= app.ctcInterval || l(), null == t.ctcLastUpdatedAt && null == t.submitResponseLastUpdatedAt) return vodus.ccDataSync(t, app.syncType.ccSync), !1; if (null != t.submitResponseLastUpdatedAt && r > s) { if (Math.floor((a - r) / 1e3 / 60) >= app.interval) return vodus.log("Localstorage: Response interval passed. Sync with server"), vodus.ccDataSync(t, app.syncType.ccSync), !1; if (vodus.log("Localstorage: Response interval not met > " + (60 * app.interval - (a - r) / 1e3).toFixed(2)), Math.floor((a - o) / 1e3 / 60) >= app.interval) return vodus.log("Localstorage: Session Sync"), vodus.ccDataSync(t, app.syncType.sessionSync), !1; vodus.log("Localstorage: Session interval not met. No data sync > " + (60 * app.interval - (a - o) / 1e3).toFixed(2)) } else { if (Math.floor((a - s) / 1e3 / 60) >= app.ctcInterval) return vodus.log("Localstorage: CTC interval passed. Sync with server"), vodus.ccDataSync(t, app.syncType.ccSync), !1; if (vodus.log("Localstorage: CTC interval not met > " + (60 * app.ctcInterval - (a - s) / 1e3).toFixed(2)), Math.floor((a - o) / 1e3 / 60) >= app.interval) return vodus.log("Localstorage: Session Sync"), vodus.ccDataSync(t, app.syncType.sessionSync), !1; vodus.log("Localstorage: Session interval not met. No data sync > " + (60 * app.interval - (a - o) / 1e3).toFixed(2)) } } else { function l() { if (!($(".vodus-banner").length > 0)) return vodus.log("Banner Mode: Vodus Banner div is not found."), app.IsFailBannerMode = !0, !1; 1 == app.ccType && (app.ccType = "3"), app.ctcTimer = 0, app.interval = 0, app.ctcInterval = 0, app.isBannerMode = !0, DetectingMobile(), app.ccPageScrollTrigger = 20, $(".vodus-banner").css("width", "").css("height", "") } if (1 == app.bannerMode ? l() : 1 != app.intervalBannerMode || Math.floor((a - submitResponseLastUpdatedAt) / 1e3 / 60) >= app.interval && Math.floor((a - ctcLastUpdatedAt) / 1e3 / 60) >= app.ctcInterval || l(), Math.floor((a - o) / 1e3 / 60) >= app.interval) return vodus.ccDataSync(t, app.syncType.sessionSync), !1; vodus.log("Localstorage: Interval not met > " + (60 * app.interval - (a - o) / 1e3).toFixed(2)) } }, ccDataSync: function e(t, a) { var o = vodus.readCookie(app.cookieName), n = { partnerCode: app.partner_code, token: o, interval: app.interval, localStorageSync: { pageLoad: { date: null, localCount: null, serverCount: null }, session: { date: null, localCount: null, serverCount: null } } }; n.localStorageSync.session.localCount = t.session.localCount, n.localStorageSync.pageLoad.localCount = t.pageLoad.localCount, null != app.fingerprint && (n.fingerprint = app.fingerprint.visitorId, n.fingerPrintComponentsJson = JSON.stringify(app.fingerprint.components)), null != app.deviceId && (n.deviceId = app.deviceId); var i = t.session.localCount + t.session.serverCount; if (t.session.localCount = i, localStorage.setItem("memberProfile", JSON.stringify(t)), i >= app.minSessionCount) vodus.getQuestionInternal(); else { var r = new Date, s = new Date; if (null != t.session.lastUpdatedAt ? r = new Date(t.session.lastUpdatedAt) : (t.session.lastUpdatedAt = new Date, localStorage.setItem("memberProfile", JSON.stringify(t))), Math.floor((s - r) / 1e3 / 60) >= app.interval) t.session.localCount = t.session.localCount + 1, t.session.lastUpdatedAt = new Date, localStorage.setItem("memberProfile", JSON.stringify(t)), i + 1 >= app.minSessionCount && vodus.getQuestionInternal(); else { vodus.log(i + " / " + app.minSessionCount), vodus.log("Localstorage: Interval not met > " + (60 * app.interval - (s - r) / 1e3).toFixed(2)); return } } }, checkSurveyQuestionStatus: function e() { vodus.log("checkSurveyQuestionStatus -> Checking question status..."); var t = 2e3, a = Math.floor((Date.now() - app.LoadedAt) / 1e3); a < 60 ? t = 30 : a > 59 && a < 600 ? t = 300 : a > 599 && (t = 2e3); var o = t; app.checkCounterTimer = setInterval(function () { if (0 == --o) { clearInterval(app.checkCounterTimer); var e = vodus.readCookie(app.cookieName); e = decodeURIComponent(e), $.ajax({ type: "POST", dataType: "json", data: JSON.stringify({ token: e, surveyQuestionId: app.surveyQuestionId, demographicType: app.demographicSurveyType }), url: app.serverlessUrl + "/api/CheckSurveyStatus", success: function (e) { e.successful && (e.data ? (vodus.log("Status check ended"), closeAllVodusModal()) : vodus.checkSurveyQuestionStatus()) } }) } }, 1e3) }, getQuestionInternal: function getQuestionInternal() { vodus.setRedirectUrl(""), vodus.log("GetQuestionInternal -> Checking available questions..."); var app = vodus.getAppData(); if (null != app) { if ("1" == app.dmpType) { if ("undefined" != typeof lotauds) { var lotaudsListId = []; if (null != lotauds) { if ("test" == lotauds) lotaudsListId.push("617060"), lotaudsListId.push("333"); else { var obj = lotauds.Profile.Audiences.Audience; for (var p in obj) obj.hasOwnProperty(p) && lotaudsListId.push(obj[p].id) } } if (null != app.dmpTarget && "" != app.dmpTarget) { if (app.dmpTarget.indexOf("|") > 0) for (var targetCodeList = app.dmpTargetCode.split("|"), targetAudienceList = app.dmpTargetAudience.split(","), targetExist = !1, i = 0; i < targetCodeList.length && !targetExist; i++) { var targetAudience = targetAudienceList[i].split(","); if (null != lotaudsListId && lotaudsListId.length > 0 && null != targetAudience && targetAudience.length > 0) { for (var i = 0; i < targetAudience.length; i++)if (lotaudsListId.includes(targetAudience[i])) { "" == app.ccTargetCode && (app.ccTargetCode = targetCodeList[i], targetExist = !0); break } } } else { var targetAudience = targetAudienceList[i].split(","); if (null != lotaudsListId && null != targetAudience && targetAudience.length > 0) { for (var i = 0; i < targetAudience.length; i++)if (lotaudsListId.includes(targetAudience[i])) { app.ccTargetCode = app.dmpTargetCode; break } } } } } null == app.ccTargetCode || "" == app.ccTargetCode ? vodus.log("No DMP CC Target set, not qualified") : vodus.log("DMP CC Target => " + app.ccTargetCode), vodus.setupCC() } else if ("2" == app.dmpType) { if (null != app.dmpCode && "" != app.dmpCode) { var lotameProfileWithCode, lotameProfileId = eval("lotame_" + app.dmpCode).getProfileId(); console.log(lotameProfileId), null != lotameProfileId && "" != lotameProfileId && vodus.setPartnerData(lotameProfileId) } var lotaudsList = localStorage.getItem("lotame_" + app.dmpCode + "_auds"); if (null != lotaudsList && "" != lotaudsList) { var lotaudsListId = lotaudsList.split(","), targetAudienceList = app.dmpTargetAudience.split(","); vodus.log("DMP Target Audience : " + targetAudienceList); for (var i = 0; i < targetAudienceList.length; i++)if (lotaudsListId.includes(targetAudienceList[i])) { app.ccTargetCode = app.dmpTargetCode, vodus.log("DMP Qualified : " + targetAudienceList[i]); break } null == app.ccTargetCode || "" == app.ccTargetCode ? vodus.log("No DMP CC Target set, not qualified") : vodus.log("DMP CC Target => " + app.ccTargetCode) } vodus.setupCC() } else vodus.setupCC() } else vodus.setupCC() }, geoCheck: async function e() { }, setupCC: function e() { var t = !1; if (app.userCountryCode) console.log("Using userCountryCode: " + app.userCountryCode), "MY" == app.userCountryCode.toUpperCase() ? t = !0 : console.log("CC not allowed from : " + app.userCountryCode); else { let a = new XMLHttpRequest; a.onload = () => { if (200 == a.status) { var e = a.response.trim().split("\n").reduce(function (e, t) { return e[(t = t.split("="))[0]] = t[1], e }, {}); "MY" == e.loc ? (vodus.log("GEO passed: " + e.loc), t = !0) : vodus.log("GEO failed: " + e.loc) } else console.error("Error!"); return t }, a.open("GET", "https://www.cloudflare.com/cdn-cgi/trace", !1), a.send() } if (t) { if (app.isBannerMode) vodus.log("Setup banner mode cc scroll trigger.."), "mobile-app" == app.viewType ? scrollFunction(app) : $(window).bind("scroll", function () { scrollFunction(app) }); else if (0 == app.ccPageScrollTrigger) vodus.getCC(); else { if (null != submitResponseCallback && null != submitResponseCallback) { vodus.getCC(); return } vodus.log("Setup cc scroll trigger.."), $("body").height() > $(window).height() ? $(window).bind("scroll", function () { scrollFunction(app) }) : $("body").height() == $(window).height() && $("#app").length > 0 ? $(window).bind("scroll", function () { scrollFunction(app) }) : setTimeout(function () { $(window).bind("scroll", function () { scrollFunction(app) }) }, 3e3) } } }, checkIsMobile: function e() { /Mobi/i.test(navigator.userAgent) ? /iPad|iPod/i.test(navigator.userAgent) ? (app.isMobile = 0, 2 == app.ccType && (app.isMobile = 1)) : app.isMobile = 1 : (app.isMobile = 0, (2 == app.ccType || 3 == app.ccType) && (app.isMobile = 1)) }, getCC: function e() { if ($(".tingle-modal--noOverlayClose").length > 1 && $(".tingle-modal--noOverlayClose")[1].remove(), app.IsFailBannerMode && !$(".vodus-banner").length > 0) return closeAllVodusModal(), vodus.log("Banner Mode: Vodus Banner div is not found."), !1; var t, a = "", o = vodus.getParameterByName("cctoken"); null == o || "" == o ? (null == (a = vodus.readCookie(app.cookieName)) || "" === a) && (a = vodus.getToken()) : a = o; var n = vodus.readCookie("vodus_temp_token"); null == app.language || app.language, questionDelayCounter = parseInt(app.questionModalDelay), isNaN(questionDelayCounter) && (questionDelayCounter = 0); var i = null, r = null; if (app.usesLocalStorage = !0, app.usesLocalStorage) { let s = localStorage.getItem("memberProfile"); if (null != s) { i = { pageLoad: { count: (r = JSON.parse(s)).pageLoad.count, date: r.pageLoad.date }, session: { count: r.session.count, date: r.session.date } } } } DetectingMobile(); var l = "", d = ""; let u = localStorage.getItem("vodus_store"); if (null != u) { var c = JSON.parse(u); if (null == c.cc ? c.cc = { totalCCSinceResponse: 0 } : c.cc.totalCCSinceResponse = parseInt(c.cc.totalCCSinceResponse) + 1, c.cc.totalCCSinceResponse > app.stoAfterTotalNoResponse ? "mobile-app" != app.viewType && (app.isBannerMode = !1, app.modalClosable = !0, app.bannerMode = 0, app.intervalBannerMode = 1, app.interval = app.stoInterval, app.ctcInterval = app.stoCTCInterval, app.ctcTimer = app.stoCTCTimer, app.ccType = app.stoCCType, app.demographicCCType = app.stoDemographicCCType) : "1" == app.ccType && "1" == app.bannerMode && (app.ccType = "3"), null != r) { var p = new Date; let g = new Date(r.ctcLastUpdatedAt); if (Math.floor((p - g) / 1e3 / 60) >= app.ctcInterval) vodus.log("STO: CTC interval passed."); else { vodus.log("ST overriding... CTC not met"); return } } l = c.template.cache_buster_code, null != c.rewards && (d = c.rewards.cache_buster_code), "1" == app.ccType ? "en" == app.language ? app.isMobile ? "" == c.template.type1.mobile.about_us_en && (l = "reset") : "" == c.template.type1.desktop.about_us_en && (l = "reset") : "ms" == app.language ? app.isMobile ? "" == c.template.type1.mobile.about_us_my && (l = "reset") : "" == c.template.type1.desktop.about_us_my && (l = "reset") : app.isMobile ? "" == c.template.type1.mobile.about_us_zh && (l = "reset") : "" == c.template.type1.desktop.about_us_zh && (l = "reset") : "2" == app.ccType ? "en" == app.language ? "" == c.template.type2.about_us_en && (l = "reset") : "ms" == app.language ? "" == c.template.type2.about_us_my && (l = "reset") : "" == c.template.type2.about_us_zh && (l = "reset") : "en" == app.language ? "" == c.template.type3.about_us_en && (l = "reset") : "ms" == app.language ? "" == c.template.type3.about_us_my && (l = "reset") : "" == c.template.type3.about_us_zh && (l = "reset") } var m = ""; app.isFingerprintingEnabled && (m = vodus.readCookie("vodus_device_id")), (window.location.hostname.indexOf("vodus.my") > -1 || window.location.hostname.indexOf("voupon-uat.azurewebsites.net") > -1) && (app.demographicInterval = 0, app.interval = 0), app.chainQuotaCount = app.chainQuotaCount + 1, app.browser = getBrowser(), $.ajax({ type: "POST", dataType: "json", data: JSON.stringify({ ccTargetCode: app.ccTargetCode, localStorageSync: i, usesLocalStorage: app.usesLocalStorage, demographicInterval: app.demographicInterval, demographicCTCTimer: app.demographicCTCTimer, demographicCCType: app.demographicCCType, dailyAllowance: app.dailyAllowance, ccType: app.ccType, noDemo: app.noDemo, minSessionCount: app.minSessionCount, ctcInterval: app.ctcInterval, ctcTimer: app.ctcTimer, interval: app.interval, language: app.language, partnerCode: app.partner_code, token: a, localStorageSync: i, usesLocalStorage: app.usesLocalStorage, demographicInterval: app.demographicInterval, demographicCTCTimer: app.demographicCTCTimer, demographicCCType: app.demographicCCType, dailyAllowance: app.dailyAllowance, ccType: app.ccType, noDemo: app.noDemo, minSessionCount: app.minSessionCount, ctcInterval: app.ctcInterval, ctcTimer: app.ctcTimer, interval: app.interval, language: app.language, partnerCode: app.partner_code, tempToken: n, templateCacheBusterCode: l, rewardsAdsTemplateCacheBusterCode: d, deviceId: m, thirdPartyEnabled: app.thirdPartyEnabled, browser: app.browser }), url: app.serverlessUrl + "/api/getQuestion", success: function (e) { if (app.rewardsAdSubgroupId = e.data.SubgroupId, app.rewardsAdDemographicStateId = e.data.DemographicStateId, app.rewardsAdDemographicEthnicityId = e.data.DemographicEthnicityId, app.rewardsAdDemographicGenderId = e.data.DemographicGenderId, app.rewardsAdDemographicAgeId = e.data.DemographicAgeId, app.partnerId = e.data.PartnerId, app.partnerWebsiteId = e.data.PartnerWebsiteId, app.questionId = e.data.Id, app.surveyType = e.data.SurveyType, e.data.IsStressTestEnabled && "vodus-test" != e.data.Code) return null != vodus.getNoQuestionCallback() && vodus.getNoQuestionCallback().length > 0 && (vodus.log("Executing callback -> " + vodus.getNoQuestionCallback()), window[vodus.getNoQuestionCallback()].apply(this, vodus.getNoQuestionCallArgument())), vodus.log("Stress test in progress. No CC.."), NoCCCheckIsSurveyFallbackScript(app.isSurveyFallbackScript, app.GAMAdUnitId), !1; if (app.usesLocalStorage) { let t = localStorage.getItem("memberProfile"); null != t && ("global cc inactive" == e.message ? ((r = JSON.parse(t)).globalCC.status = "inactive", r.globalCC.lastUpdatedAt = new Date, localStorage.setItem("memberProfile", JSON.stringify(r))) : ((r = JSON.parse(t)).globalCC.status = "active", r.globalCC.lastUpdatedAt = new Date, localStorage.setItem("memberProfile", JSON.stringify(r)))) } if (e.successful) { null != e.data.resyncToken && "" != e.data.ResyncToken && (vodus.createCookie(app.cookieName, e.data.ResyncToken, 3650), console.log("updated token with resync token")), app.partner_code; let a = localStorage.getItem("vodus_store"); var o = { cc: { totalCCSinceResponse: 0 }, lastUpdatedAt: Date.now(), rewards: { cache_buster_code: "", thankyou_template: "" }, template: { cache_buster_code: "", thank_you: { en: "" }, type1: { mobile: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" }, desktop: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" } }, type2: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" }, type3: { about_us_en: "", about_us_my: "", about_us_zh: "", intro_en: "", intro_my: "", intro_zh: "", signup_en: "", signup_my: "", signup_zh: "", question_en: "", question_my: "", question_zh: "" } } }; null == a || "" == a ? (null != o && (null == o.cc ? o.cc = { totalCCSinceResponse: 0 } : o.cc.totalCCSinceResponse = parseInt(o.cc.totalCCSinceResponse) + 1, o.cc.totalCCSinceResponse > app.stoAfterTotalNoResponse ? "mobile-app" != app.viewType && (app.isBannerMode = !1, app.modalClosable = !0, app.bannerMode = 0, app.intervalBannerMode = 1, app.interval = app.stoInterval, app.ctcInterval = app.stoCTCInterval, app.ctcTimer = app.stoCTCTimer, app.ccType = app.stoCCType, app.demographicCCType = app.stoDemographicCCType) : vodus.log("No ST override 1: " + o.cc.totalCCSinceResponse + "/" + app.stoAfterTotalNoResponse)), "1" == app.ccType ? app.isMobile ? "en" == app.language ? o.template.type1.mobile.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type1.mobile.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type1.mobile.question_zh = e.data.CommercialCallingQuestionTemplate) : "en" == app.language ? o.template.type1.desktop.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type1.desktop.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type1.desktop.question_zh = e.data.CommercialCallingQuestionTemplate) : "2" == app.ccType ? "en" == app.language ? o.template.type2.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type2.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type2.question_zh = e.data.CommercialCallingQuestionTemplate) : "3" == app.ccType && ("en" == app.language ? o.template.type3.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type3.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type3.question_zh = e.data.CommercialCallingQuestionTemplate)), o.template.cache_buster_code = e.data.TemplateCacheBusterCode, o.rewards.cache_buster_code = e.data.RewardsAdsTemplateCacheBusterCode, null != e.data.RewardsAdsTemplate && (o.rewards.thankyou_template = e.data.RewardsAdsTemplate, app.rewardsAdsTemplate = e.data.RewardsAdsTemplate), localStorage.setItem("vodus_store", JSON.stringify(o))) : (null != (o = JSON.parse(a)) && (null == o.cc ? o.cc = { totalCCSinceResponse: 0 } : o.cc.totalCCSinceResponse = parseInt(o.cc.totalCCSinceResponse) + 1, o.cc.totalCCSinceResponse > app.stoAfterTotalNoResponse ? "mobile-app" != app.viewType && (app.isBannerMode = !1, app.modalClosable = !0, app.bannerMode = 0, app.intervalBannerMode = 1, app.interval = app.stoInterval, app.ctcInterval = app.stoCTCInterval, app.ctcTimer = app.stoCTCTimer, app.ccType = app.stoCCType, app.demographicCCType = app.stoDemographicCCType, vodus.log("ST overriding...")) : vodus.log("No ST override 2: " + o.cc.totalCCSinceResponse + "/" + app.stoAfterTotalNoResponse)), (null == o.rewards || null == o.rewards.cache_buster_code || "" == o.rewards.cache_buster_code) && (o.rewards = { cache_buster_code: e.data.RewardsAdsTemplateCacheBusterCode, thankyou_template: e.data.RewardsAdsTemplate }), o.template.cache_buster_code != e.data.TemplateCacheBusterCode && (o.template.cache_buster_code = e.data.TemplateCacheBusterCode), app.rewardsAdsTemplate = o.rewards.thankyou_template, null != e.data.RewardsAdsTemplate && "" != e.data.RewardsAdsTemplate && (o.rewards.thankyou_template = e.data.RewardsAdsTemplate, app.rewardsAdsThankYouTemplate = e.data.RewardsAdsTemplate), null != e.data.RewardsAdsTemplateCacheBusterCode && "" != e.data.RewardsAdsTemplateCacheBusterCode && (o.rewards.cache_buster_code = e.data.RewardsAdsTemplateCacheBusterCode), "1" == app.ccType ? app.isMobile ? null != e.data.CommercialCallingQuestionTemplate && "" != e.data.CommercialCallingQuestionTemplate ? "en" == app.language ? o.template.type1.mobile.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type1.mobile.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type1.mobile.question_zh = e.data.CommercialCallingQuestionTemplate) : "en" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type1.mobile.question_en : "ms" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type1.mobile.question_my : "zh" == app.language && (e.data.CommercialCallingQuestionTemplate = o.template.type1.mobile.question_zh) : null != e.data.CommercialCallingQuestionTemplate && "" != e.data.CommercialCallingQuestionTemplate ? "en" == app.language ? o.template.type1.desktop.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type1.desktop.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type1.desktop.question_zh = e.data.CommercialCallingQuestionTemplate) : "en" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type1.desktop.question_en : "ms" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type1.desktop.question_my : "zh" == app.language && (e.data.CommercialCallingQuestionTemplate = o.template.type1.desktop.question_zh) : "2" == app.ccType ? null != e.data.CommercialCallingQuestionTemplate && "" != e.data.CommercialCallingQuestionTemplate ? "en" == app.language ? o.template.type2.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type2.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type2.question_zh = e.data.CommercialCallingQuestionTemplate) : "en" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type2.question_en : "ms" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type2.question_my : "zh" == app.language && (e.data.CommercialCallingQuestionTemplate = o.template.type2.question_zh) : "3" == app.ccType && (null != e.data.CommercialCallingQuestionTemplate && "" != e.data.CommercialCallingQuestionTemplate ? "en" == app.language ? o.template.type3.question_en = e.data.CommercialCallingQuestionTemplate : "ms" == app.language ? o.template.type3.question_my = e.data.CommercialCallingQuestionTemplate : "zh" == app.language && (o.template.type3.question_zh = e.data.CommercialCallingQuestionTemplate) : "en" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type3.question_en : "ms" == app.language ? e.data.CommercialCallingQuestionTemplate = o.template.type3.question_my : "zh" == app.language && (e.data.CommercialCallingQuestionTemplate = o.template.type3.question_zh)), localStorage.setItem("vodus_store", JSON.stringify(o))), app.isChainQuestion && $("#divQuestionaireEditorContainer").css("opacity", "0").css("max-height", $(".questionaire-container-size-variable").outerHeight()), app.surveyQuestionId = e.data.Id, app.isReferral = 999 == e.data.QuestionTypeId, app.vPointsPerQuestion = e.data.VPointsPerQuestion, app.loadedAt = Date.now(), app.partnerWebsiteName = e.data.PartnerWebsiteName, e.data.QuestionParameterOverride && (questionDelayCounter = 0, app.ccType = 2), e.data.DemographicOnly && (app.ccType = app.demographicCCType, app.ctcTimer = app.demographicCTCTimer), ("http://localhost:63828" == origin || "https://voupon-uat.azurewebsites.net" == origin || "https://vodus.my" == origin) && $(".tingle-modal").fadeOut(300); var n = setInterval(function () { if (questionDelayCounter > 0 && (questionDelayCounter--, vodus.log("Delay countdown:" + questionDelayCounter)), 0 === questionDelayCounter) { clearInterval(n), app.questionData = e; var t = ""; null != e.data.UserToken && null != e.data.UserToken.Email && (t = e.data.UserToken.Email.length > 100 ? e.data.UserToken.Email.substring(0, 15) + "..." : e.data.UserToken.Email), 0 == $("#vodus_tag").length && $("<div>").attr({ class: "bootstrap-vodus " + app.catfishPosition, id: "vodus_tag" }).appendTo("body"), 0 == $("#vodus_grid_tag").length && $("<div>").attr({ class: "hidden", id: "vodus_grid_tag" }).appendTo("body"), 0 == $("#vodus_grid_mobile_tag").length && $("<div>").attr({ class: "hidden", id: "vodus_grid_mobile_tag" }).appendTo("body"), 0 == $("#test_tag").length && $("<div>").attr({ class: "", id: "test_tag" }).appendTo("body"), "" != e.data.BackgroundColor && $("<style>" + (".bootstrap-vodus .modal-dialog .modal-content,.ccType2.bootstrap-vodus .modal-dialog .modal-content,.ccType2.bootstrap-vodus .vodus-slider-question-vertical-slider input[type=range]::-webkit-slider-thumb,.ccType2 .modal-dialog.mobile-vodusLoginDialog#vodusLoginDialog .modal-content,.ccType2 .modal-dialog.mobile-vodusLoginDialog#vodusSignupDialog .modal-content,.bootstrap-vodus .desktop-header-bar-vodus ,tablet-header-bar-vodus {background-color: #" + e.data.BackgroundColor + "!important;color: #" + e.data.FontColor + " !important;}.ccType2.bootstrap-vodus .template-preview-title-to-display .s-editable-text.question-header-1 {background-color: #" + e.data.BackgroundColor + "!important;color: #" + e.data.FontColor + " !important;}.ccType2 .mobile-question-container .answer-box,.ccType2 .mobile-vodusLoginDialog .intro-btn {background-color: #" + e.data.SecondaryColor + "!important;color: #" + e.data.PrimaryColor + " !important;}.ccType2 .mobile-question-container .survey-submit-btn {background-color: #" + e.data.ButtonColor + "!important;box-shadow: 0 0 0 1px #" + e.data.SelectedAnswerColor + "!important;color: #" + e.data.SelectedAnswerColor + " !important;}.ccType2 .template-preview-answer-to-display-table-content div {color: #" + e.data.PrimaryColor + " !important;}.text-primary-vodus, .bootstrap-vodus #vodusAboutUsDialog footer .about-us-links a,.bootstrap-vodus .text-span-vodus,.bootstrap-vodus .click-to-close,.ccType2.bootstrap-vodus .click-to-close-div,.bootstrap-vodus .vodusAvailablePoints {color: #" + e.data.FontColor + " !important;border-color: #" + e.data.FontColor + " !important;}.ccType2 .mobile-footer-inner-container,#vodusAboutUsDialog footer .info-redeem-container,#vodusAboutUsDialog footer .info-aboutus-container,#vodusAboutUsDialog footer .info-surveyus-container {border-color: #" + e.data.FontColor + "}.ccType2.bootstrap-vodus .selectedAnswer div {color: #" + e.data.SelectedAnswerColor + " !important;}.ccType2.bootstrap-vodus .selectedAnswer {box-shadow: 0 0 0 2px #" + e.data.SelectedAnswerColor + "!important;background-color: #" + e.data.ButtonColor) + "!important;font-weight: 900;</style>").appendTo(document.head); var a = e.data.QuestionTemplateContentDefaultLanguage, o = e.data.QuestionTemplateContentMobileDefaultLanguage; window.vodus_grid_mobile_tag = o, window.vodus_grid_tag = a, $("#vodus_tag").html(e.data.CommercialCallingQuestionTemplate), $("#vodus_tag").find(".partnerLogo").attr("src", e.data.PartnerLogoUrl), "1" == e.data.VodusLogoType ? $("#vodus_tag").find(".vodusLogoSwap").attr("src", "https://api.vodus.com/cc/images/Vodus-V3-Logo-White-Small.svg") : $("#vodus_tag").find(".vodusLogoSwap").attr("src", "https://api.vodus.com/cc/images/Vodus-V3-Logo-Small.svg"), "rgb(255, 255, 255)" == $(".modal-content").css("background-color") && ($(".ccType-1-login .partnerLogo").css("filter", "drop-shadow(0 0 2px rgba(255,255,255,0.8))"), $("#sso-desktop-content .sso-left-container .partnerLogo").css("filter", "drop-shadow(0 0 2px rgba(255,255,255,0.8))"), $("#vodusAboutUsDialog .partnerLogo").css("filter", "drop-shadow(0 0 2px rgba(255,255,255,0.8))")), $("#test_tag").html(e.data.QuestionTemplateContent), $("#test_tag").find(".vodus-slider-question-vertical-text").removeAttr("style"), $("#test_tag").find(".vodus-slider-question-vertical-title").removeAttr("style"), $("#test_tag").find(".vodus-slider-question-vertical-slider").removeAttr("style"), $("#divQuestionaireEditorContainer").html($("#test_tag").html()), app.questionData.data.QuestionTemplateContent = $("#divQuestionaireEditorContainer").html(), $("#test_tag").remove(), app.pipeReplace = e.data.PipeFromQuestionTemplate, app.pipeList = e.data.PipeList, app.idsForPipeList = e.data.IdsForPipeList, app.pipeAnswerIdList = e.data.PipeAnswerIdList, null != e.data.UserToken ? ($(".vodusTokenEmail").html(t), $(".vodusAvailablePoints").html(e.data.UserToken.AvailablePoints), app.availablePoints = e.data.UserToken.AvailablePoints, app.email = t, vodus.setEmail(t)) : $(".vodusAvailablePoints").html("0"); var i = Math.random(); if ("ms" == app.language) { var r = "satu "; app.chainQuota > 8 ? r = "" : app.chainQuota > 1 && (r = app.chainQuota.toString() + " "), app.availablePoints < 15 ? i < .5 ? ($(".close-modal-instruction").html("Dapatkan Baucar Tunai").css("font-weight", "600"), $(".question-purpose").html("dengan menjawab " + r + "soalan kajian selidik").css("font-weight", "400")) : ($(".close-modal-instruction").html("Harap bantu kajian selidik kami dan").css("font-weight", "400"), $(".question-purpose").html("Dapatkan Baucar Tunai").css("font-weight", "600")) : i < .334 ? ($(".close-modal-instruction").html("Dapatkan baucar tunai").css("font-weight", "600"), $(".question-purpose").html("dengan menjawab " + r + "soalan kajian selidik").css("font-weight", "400")) : i < .667 ? ($(".close-modal-instruction").html("Dapatkan VPoint untuk").css("font-weight", "400"), $(".question-purpose").html("menebus baucar tunai & diskaun hebat").css("font-weight", "600")) : ($(".close-modal-instruction").html("Dapatkan 10% diskaun beli-bela").css("font-weight", "600"), $(".question-purpose").html("dari setiap 10 soalan yang dijawab").css("font-weight", "400")) } else if ("zh" == app.language) { var r = "一道"; app.chainQuota > 8 ? r = "" : app.chainQuota > 1 && (r = " " + app.chainQuota.toString() + " 道"), app.availablePoints < 15 ? i < .5 ? ($(".close-modal-instruction").html("回答" + r + "简单的研究问题以").css("font-weight", "400"), $(".question-purpose").html("获得现金与购物折扣").css("font-weight", "600")) : ($(".close-modal-instruction").html("协助我们的研究以").css("font-weight", "400"), $(".question-purpose").html("获得现金与购物折扣").css("font-weight", "600")) : i < .337 ? ($(".close-modal-instruction").html("回答" + r + "简单的研究问题以").css("font-weight", "400"), $(".question-purpose").html("获得现金与购物折扣").css("font-weight", "600")) : i < .667 ? ($(".close-modal-instruction").html("获得更多VPoints以换取").css("font-weight", "400"), $(".question-purpose").html("巨额折扣和现金券").css("font-weight", "600")) : ($(".close-modal-instruction").html("回答每十道简单问题以").css("font-weight", "400"), $(".question-purpose").html("获取 20% 购物折扣").css("font-weight", "600")) } else { var r = "one ", s = ""; app.chainQuota > 8 ? (r = "", s = "s") : app.chainQuota > 1 && (r = app.chainQuota.toString() + " ", s = "s"), app.availablePoints < 15 ? i < .5 ? ($(".close-modal-instruction").html("Earn cash vouchers").css("font-weight", "600"), $(".question-purpose").html("by answering " + r + "survey question" + s).css("font-weight", "400")) : ($(".close-modal-instruction").html("Get exclusive vouchers for free").css("font-weight", "600"), $(".question-purpose").html("when you join our research").css("font-weight", "400")) : i < .337 ? ($(".close-modal-instruction").html("Earn cash vouchers").css("font-weight", "600"), $(".question-purpose").html("by answering " + r + "survey question" + s).css("font-weight", "400")) : i < .667 ? ($(".close-modal-instruction").html("Gain VPoints to exchange for ").css("font-weight", "400"), $(".question-purpose").html("huge discounts and cash vouchers").css("font-weight", "600")) : ($(".close-modal-instruction").html("Get 20% off your shopping").css("font-weight", "600"), $(".question-purpose").html("for every 10 questions answered").css("font-weight", "400")) } document.documentMode || /Edge/.test(navigator.userAgent) ? ($(".survey-mcqma-div").css("display", ""), $(".survey-mcqsa-div").css("display", " ")) : $(".answer-box").addClass("inline-you"), "" != t ? ($(".vodusMobileHeaderLoginContainer").hide(), $(".vodusMobileEmailIdContainer").show(), $(".vodusProfileContainer").show(), $(".vodusLoginContainer").hide()) : ($(".vodusMobileHeaderLoginContainer").show(), $(".vodusMobileEmailIdContainer").hide(), $(".vodusProfileContainer").hide(), $(".vodusLoginContainer").show()), app.modalClosable ? ($(".ctc-container").show(), $(".vodus-rewards-close-div").show(), $(".vodus-reward-response-to-close").show()) : ($(".vodus-reward-response-to-close").show(), $(".vodus-rewards-close-div").hide(), $(".click-to-close-div").hide(), $(".wait-to-close-div").hide()); var l = document.getElementsByClassName("survey-submit-btn"); void 0 != l[0] && (l[0].outerHTML = l[0].outerHTML.replace(/^\<input/, "<button") + "Submit</button>"); var d = e.data.QuestionDelayLengthInSeconds; if ((null == d || 0 == d) && (d = 5), "vodus-reward" == app.partner_code && $(".tingle-modal-box").each(function () { $(this).hide() }), vodus.setAppData(app), "" !== e.data.QuestionTemplateContent) { var u = 0, c = $("#divQuestionaireEditorContainer").find("img").length; c > 0 ? $($("#divQuestionaireEditorContainer").find("img")).each(function () { $(this).on("load", function () { ++u == c && (vodus.log("All assets loaded. Displaying survey now"), app.isRewardGainPoint || "vodus-reward" == app.partner_code && $(".tingle-modal").remove(), addShowGetQuestionModal()) }) }) : (vodus.log("No assets to load. Displaying survey now"), addShowGetQuestionModal()) } if ("Interval not reached yet" == e.message) { vodus.log("No questions available: \n" + e.message), closeAllVodusModal(), null != vodus.getNoQuestionCallback() && vodus.getNoQuestionCallback().length > 0 && (vodus.log("Executing callback -> " + vodus.getNoQuestionCallback()), window[vodus.getNoQuestionCallback()].apply(this, vodus.getNoQuestionCallArgument())), NoCCCheckIsSurveyFallbackScript(app.isSurveyFallbackScript, app.GAMAdUnitId); return } if (null == e.data || "" === e.data.QuestionTemplateContent) { closeAllVodusModal(), vodus.log("No questions available: \n" + e.message), null != vodus.getNoQuestionCallback() && vodus.getNoQuestionCallback().length > 0 && (vodus.log("Executing callback -> " + vodus.getNoQuestionCallback()), window[vodus.getNoQuestionCallback()].apply(this, vodus.getNoQuestionCallArgument()), addShowGetQuestionModal()), NoCCCheckIsSurveyFallbackScript(app.isSurveyFallbackScript, app.GAMAdUnitId); return } } }, 1e3) } else { vodus.log("No more question: \n" + e.message); var i = 0; if (app.isChainQuestion ? showThankYouMessage(app, i) : closeAllVodusModal(), 999 == e.code) { vodus.deleteCookie("Vodus.Token"), vodus.deleteCookie("vodus_temp_token"), vodus.log("resetting token.."); return } "mobile-app" == app.viewType ? $.ajax({ type: "GET", dataType: "html", async: !1, global: !1, url: "https://api.vodus.com/cc/templates/survey/mobile_thankyou_template.html", success: function (e) { var t = $(e); $(".bootstrap-vodus").append("<style>.tingle-enabled {position:unset;overflow:auto;}</style>"), $(".bootstrap-vodus").find(".mobile-bar-vodus").hide(), $(".bootstrap-vodus").find(".mobile-footer-vodus").hide(), $(".bootstrap-vodus").addClass("thankyou-banner"), respondedHeader = "", responsededMessage = "", respondedHeader = t.html(), $(".close-modal-instruction-container").html(""), $(".wait-to-close-div").hide(), $(".click-to-close-div").show().unbind().html("X"), $("#divQuestionaireEditorContainer").html('<div class="s-editable-text question-header-1 banner-thankyou vodus-responded-toast">' + respondedHeader + responsededMessage + "</div>"), $(".mobile-footer-vodus").html(""); var a = new tingle.modal({ footer: !1, stickyFooter: !1, closeMethods: ["button"], closeLabel: "Close", cssClass: ["bootstrap-vodus", "2" == app.ccType ? "ccType2" : "3" == app.ccType ? "ccType3" : "ccType1"], onOpen: function () { ("2" == app.ccType || "3" == app.ccType) && ($("body").removeClass("tingle-enabled"), repositionMobileImage($(".tingle-modal-box")), app.isBannerMode && $("body").css("top", "unset")) }, onClose: function () { }, beforeOpen: function () { ("2" == app.ccType || "3" == app.ccType) && $(".tingle-modal__close").remove() } }); if (a.setContent('<div id="divQuestionaireEditorContainer"><div class="s-editable-text question-header-1 banner-thankyou vodus-responded-toast">' + respondedHeader + responsededMessage + "</div></div>"), a.open(), $("#vodusQuestionModal").modal("hide"), $("#vodusLoginModal").modal("hide"), $(".modal-backdrop").remove(), "mobile-app" == app.viewType && null != app.containerHeight && 0 != app.containerHeight) { var o = Math.floor((app.containerHeight - 48 * window.devicePixelRatio) / window.devicePixelRatio); $(".thankyou-message").hide(), $(".tingle-modal").css("height", o + "px"), $(".autoclose-message").hide(), $(".vodus-banner").html(""), $(".questionaire-container-size-variable").css("height", o + "px"), $(".questionaire-container-size-variable").css("max-height", o + "px"), $(".mobile-question-container").css("max-width", "100%"), $(".mobile-question-container").css("height", o + "px"), $(".modal-dialog").css("max-width", "100%"), $(".left-header-container").css("width", "70px"), $(".center-header-container").css("width", "80%"), $(".tingle-enabled").css("position", "unset").css("overflow", "auto").css("margin", "8px 0") } var n = 3; app.isBannerMode || type2Close(n), clearInterval(app.checkCounterTimer), $(".click-to-close-div").click(function () { closeAllVodusModal() }), $(".vodus-responded-toast").click(function () { app.isBannerMode || ($(".autoclose-message").hide(), clearInterval(type2CloseTimer)) }), "mobile-app" == app.viewType && $(".click-to-close-div").hide(), $(".adsContainer").fadeIn() }, error: function (e) { vodus.log(e, app.logStatus.err), toastr.clear(), toastr.error("Hmm.. Something went wrong. We are checking the issue. Please try again later") } }) : null != vodus.getNoQuestionCallback() && vodus.getNoQuestionCallback().length > 0 && (vodus.log("Executing callback -> " + vodus.getNoQuestionCallback()), window[vodus.getNoQuestionCallback()].apply(this, vodus.getNoQuestionCallArgument()), toastr.remove(), "ms" == app.language ? toastr.success("Tiada soal selidik buat masa ini. Terima kasih atas kerjasama anda menjawab soal selidik kami.") : "zh" == app.language ? toastr.success("您已回答所有问题， 感谢您完成我们的调查") : toastr.success("There are no more questions for you now. Please try again later")), NoCCCheckIsSurveyFallbackScript(app.isSurveyFallbackScript, app.GAMAdUnitId); return } }, error: function (e) { vodus.log(e, app.logStatus.error) } }) }, submitResponse: function e() { var t = vodus.getAppData(); $("#vodus_tag").remove(); var a = 1, o = 0; null != t.questionData.data.UserToken && (o = t.questionData.data.UserToken.MemberProfileId), t.chainQuota < 1 && (t.bannerMode, t.chainQuota = 5), t.isChainQuestion = !1, 1 == t.chainQuota ? t.isChainQuestion = !1 : t.chainQuotaCount < t.chainQuota ? t.isChainQuestion = !0 : t.isChainQuestion = !1, (window.location.hostname.indexOf("vodus.my") > -1 || window.location.hostname.indexOf("voupon-uat.azurewebsites.net") > -1) && (t.isChainQuestion = !0), window.location.hostname.indexOf("vodus.my") > -1 || window.location.hostname.indexOf("voupon-uat.azurewebsites.net") > -1 || !0 == t.isChainQuestion || (t.rewardsAdsTriggeredAt = new Date().getTime(), t.availablePoints > 3 ? $.ajax({ type: "POST", dataType: "json", async: !0, global: !1, contentType: "application/json; charset=utf-8", data: JSON.stringify({ MemberProfileId: o, DemographicstateId: t.rewardsAdDemographicStateId, DemographicAgeId: t.rewardsAdDemographicAgeId, DemographicEthnicityId: t.rewardsAdDemographicEthnicityId, DemographicGenderId: t.rewardsAdDemographicGenderId, SubgroupId: t.rewardsAdSubgroupId, PartnerId: t.partnerId, PartnerWebsiteId: t.partnerWebsiteId }), url: t.serverlessUrl + "/api/getRewardsAds", success: function (e) { if (e.successful && null != e.data) { if (new Date().getTime() - t.rewardsAdsTriggeredAt > 2e3) { vodus.log("recommended rewards took more than 2s"); return } vodus.log("recommended rewards took less than 2s. Using AI recommended rewards"), t.rewardsAdsData = e.data } }, error: function (e) { vodus.log(e, t.logStatus.err) } }) : t.rewardsAdsData = ""), t.isChainQuestion || showThankYouMessage(t, a); var n = vodus.readCookie(t.cookieName), i = vodus.getRedirectUrl(); null == i || "" == i || "undefined" == i || window.open(i + "?ref=" + window.location.href + "&host=" + window.location.hostname); var r = vodus.readCookie("vodus_device_id"); t.isFingerprintingEnabled && null != r && "" != r && (surveyResponse.deviceId = r); var s = vodus.readCookie("vodus_temp_token"); null != s && "" != s && (surveyResponse.tempToken = s), surveyResponse.thirdPartyEnabled = t.thirdPartyEnabled, surveyResponse.browser = t.browser; var l = vodus.getParameterByName("cctoken"); if (null == l || "" == l ? null == (n = vodus.readCookie(t.cookieName)) || "" === n ? surveyResponse.token = vodus.getToken() : surveyResponse.token = n : surveyResponse.token = l, $("#vodusLoader").show(), $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(surveyResponse), dataType: "json", url: t.serverlessUrl + "/api/submitResponse", success: function (e) { if (e.successful) { if (null != l && "" != l) { console.log("Gettinng next question..."), vodus.getCC(); return } if (null != e.data && null != e.data.Token && "" != e.data.Token && vodus.createCookie(t.cookieName, e.data.Token, 3650), t.thirdPartyEnabled) { 0 == $("#reward_3PTest").length && $("<div>").attr({ class: "", id: "reward_3PTest" }).appendTo("body"), t.availablePoints = t.availablePoints + a; var n = vodus.readCookie(t.cookieName).trim(); $("#reward_3PTest").html('<iframe id="vodus3PTest" width="0" height="0"  src="' + t.vodus3PRootUrl + "/v1/token/sync?token=" + n + '" frameborder="0" allowfullscreen></iframe>'), console.log("sync to api") } var i = ""; let r = localStorage.getItem("memberProfile"); if (null != r && ((i = JSON.parse(r)).submitResponseLastUpdatedAt = new Date, i.token = e.data.token, localStorage.setItem("memberProfile", JSON.stringify(i))), t.isChainQuestion) { t.interval = 0, t.isChainQuestion = !0, vodus.getCC(), vodus.log("Chain question in progress. Starting another cc..."); return } let s = localStorage.getItem("vodus_store"); if (null != s) { var d = JSON.parse(s); d.cc.totalCCSinceResponse = 0, localStorage.setItem("vodus_store", JSON.stringify(d)) } $("#vodusLoader").hide(), submitResponseCallback.length > 0 && (vodus.log("Executing callback -> " + submitResponseCallback), window[submitResponseCallback].apply(this, submitResponseArgument)) } else vodus.log("error => requiredCCDataSync"), e.data.requiredCCDataSync && $.ajax({ type: "POST", dataType: "json", async: !0, global: !1, contentType: "application/json; charset=utf-8", data: JSON.stringify({ Browser: browser, MemberProfileId: o, Data: t }), url: t.serverlessUrl + "/api/logDataSyncFunction", success: function (e) { }, error: function (e) { vodus.log(e, t.logStatus.err) } }) }, error: function (e) { closeAllVodusModal(), vodus.log(e, t.logStatus.err), ResponseCloseCheckIsSurveyFallbackScript(t.isSurveyFallbackScript, t.GAMAdUnitId, !0) } }), (1 == t.chainQuota || t.chainQuota == t.chainQuotaCount && !0 == t.isBannerMode) && ($("#vodusQuestionModal").modal("hide"), $(".modal-backdrop").remove(), "mobile-app" == t.viewType && null != t.containerHeight && 0 != t.containerHeight)) { var d = Math.floor((t.containerHeight - 48 * window.devicePixelRatio) / window.devicePixelRatio); $("#divQuestionaireEditorContainer").css("height", d + "px"), $(".questionaire-container-size-variable").css("height", d + "px"), $(".questionaire-container-size-variable").css("max-height", d + "px"), $(".mobile-question-container").css("max-width", "100%"), $(".mobile-question-container").css("height", d + "px"), $(".modal-dialog").css("max-width", "100%"), $(".left-header-container").css("width", "70px"), $(".center-header-container").css("width", "80%"), $(".thankyou-product-discount").css("position", "relative").css("bottom", "5px"), $(".rewards-logo").css("flex-wrap", "nowrap"), $(".thankyou-message").css("margin-top", "0").css("display", "flex").css("justify-content", "center").css("width", "50%").css("font-size", "20px"), console.log("updated tingle 2"), $(".tingle-enabled").css("position", "unset").css("overflow", "auto").css("margin", "8px 0") } }, updateAdsData: function e() { var t = [], a = vodus.getAppData(), o = a.rewardsAdsData, n = 3; a.isBannerMode || type2Close(n), "live" == a.env ? "" == o && (t.push({ pointRequired: 250, discountValue: 30, dealExpirationTypeId: 2, imageUrl: "https://vouponlive.blob.core.windows.net/products/143/images/small_01_134c4fd2-41c2-4660-bd05-d4d8c772c07f.jpeg", productUrl: "https://vodus.my/Product/143", productTitle: "TNG E-Wallet RM30 Credit Voucher", merchantName: "Vodus", discountedPrice: "RM0", price: "RM30", totalDiscount: "RM30 OFF", productRecoId: 144 }), t.push({ pointRequired: 167, discountValue: 20, dealExpirationTypeId: 2, imageUrl: "https://vouponlive.blob.core.windows.net/products/19953/images/small_01_c1e0ab94-116f-47b7-ba8a-1b78489a18b5.jpeg", productUrl: "https://vodus.my/product/19953", productTitle: "Starbucks RM 20 Cash Voucher", merchantName: "Vodus", discountedPrice: "RM0", price: "RM20", totalDiscount: "RM20 OFF", productRecoId: 126 }), t.push({ pointRequired: 83, discountValue: 10, dealExpirationTypeId: 2, imageUrl: "https://vouponlive.blob.core.windows.net/products/19951/images/small_01_ab92503e-c538-4f8d-9c1d-2b35322e85f0.jpeg", productUrl: "https://vodus.my/product/19951", productTitle: "RM10 H\xe4agen-Dazs Cash Voucher", merchantName: "Vodus", discountedPrice: "RM0", price: "RM10", totalDiscount: "RM10 OFF", productRecoId: 138 }), t.push({ pointRequired: 83, discountValue: 10, dealExpirationTypeId: 2, imageUrl: "https://vouponlive.blob.core.windows.net/products/127/images/small_01_e88be58c-8177-436e-9c57-38e43c559d38.jpeg", productUrl: "https://vodus.my/product/127", productTitle: "Tealive RM10 Cash Vouchers", merchantName: "Vodus", discountedPrice: "RM0", price: "RM10", totalDiscount: "RM10 OFF", productRecoId: 135 }), o = t[Math.floor(Math.random() * t.length)]) : "" == o && (t.push({ pointRequired: 91, discountValue: 10, dealExpirationTypeId: 2, imageUrl: "https://vodusuat.blob.core.windows.net/products/85/images/normal_1_5c708215-b730-4ed0-95e1-8ba917a4cf66.jpeg", productUrl: "https://voupon-uat.azurewebsites.net/product/85", productTitle: "TALMO 5pcs Glass Tea Pot Set", merchantName: "Vodus", discountedPrice: "RM 0.00", price: "RM 10.00", totalDiscount: "RM10.00 OFF", productRecoId: 212 }), t.push({ pointRequired: 91, discountValue: 10, dealExpirationTypeId: 2, imageUrl: "https://vodusuat.blob.core.windows.net/products/79/images/normal_1_a46f2bca-c8b6-4688-9799-bc75927c54f0.jpeg", productUrl: "https://voupon-uat.azurewebsites.net/product/79", productTitle: "Threetrees 8.5 inch LCD drawing pad", merchantName: "Vodus", discountedPrice: "RM 0.00", price: "RM 10.00", totalDiscount: "RM10.00 OFF", productRecoId: 206 }), o = t[Math.floor(Math.random() * t.length)]), o.productUrl = o.productUrl += "?ccnav=1", "1" == o.vodusLogoType ? $(".banner-thankyou").find(".vodusLogoSwap").attr("src", "https://api.vodus.com/cc/images/logo/Vodus%20V3%20Logo%20Favicon-White.svg") : $(".banner-thankyou").find(".vodusLogoSwap").attr("src", "https://api.vodus.com/cc/images/logo/Vodus%20V3%20Logo%20Favicon.svg"), "ms" == a.language ? $(".thankyou-required-point").html("Anda boleh menggunakan <b>" + o.pointRequired + " VPoints</b> untuk dapatkan ganjaran ini:") : "zh" == a.language ? $(".thankyou-required-point").html("您可以使用 <b>" + o.pointRequired + " Vpoints</b> 兑换此奖励:") : $(".thankyou-required-point").html("You may exchange <b>" + o.pointRequired + " VPoints</b> for this reward:"), $(".thankyou-product-image-url").attr("src", o.imageUrl), $(".thankyou-product-image-url").css("display", "block"), null != o.totalDiscount && "" != o.totalDiscount ? $(".thankyou-discount-message").html(o.totalDiscount) : $(".thankyou-discount-message").hide(), $(".thankyou-product-title").html(o.productTitle), $(".thankyou-product-price").html(o.price), $(".thankyou-product-discounted-price").html(o.discountedPrice), $(".thankyou-product-shop").html(o.merchantName); var i = vodus.readCookie(a.cookieName), r = vodus.readCookie("vodus_temp_token"); if (a.thirdPartyEnabled) s = o.productUrl; else if (null == i || "" == i) var r = vodus.readCookie("vodus_temp_token"), s = a.reward3PRootUrl + "/sync?syncType=3&partnerWebsiteId=" + a.partnerWebsiteId + "&questionId=" + a.questionId + "&questionType=" + a.surveyType + "&tempToken=" + r + "&redirectUrl=" + encodeURI(o.productUrl) + "&host=" + encodeURI(o.productUrl); else var s = a.reward3PRootUrl + "/sync?syncType=3&partnerWebsiteId=" + a.partnerWebsiteId + "&questionId=" + a.questionId + "&questionType=" + a.surveyType + "&tempToken=" + r + "&token=" + i + "&redirectUrl=" + encodeURI(o.productUrl) + "&host=" + encodeURI(o.productUrl); if (a.surveyType = 1, $(".thankyou-product-url").attr("href", s), $(".thankyou-product-url").click(function () { if (vodus.createCookie("vodus_sync_clicked", "Y", 3650), "mobile-app" == a.viewType) return vodusAndroidSdk.openUrl($(this).attr("href")), !1 }), $(".adsContainer").fadeIn(), o.productRecoId > 0 && null != o.productRecoId) { if (null != a.questionData.data.UserToken) var l = a.questionData.data.UserToken.MemberProfileId; else var l = 0; $(".thankyou-product-url").click(function () { $.ajax({ type: "POST", dataType: "json", async: !1, global: !1, contentType: "application/json; charset=utf-8", data: JSON.stringify({ SubgroupId: a.rewardsAdSubgroupId, DemographicstateId: a.rewardsAdDemographicStateId, MemberProfileId: l, ProductAdId: o.productRecoId }), url: a.serverlessUrl + "/api/updateRewardsAdsClicks", success: function (e) { }, error: function (e) { vodus.log(e, a.logStatus.err), toastr.clear(), toastr.error("Hmm.. Something went wrong. We are checking the issue. Please try again later") } }) }) } "http://localhost:63828" == origin || "https://voupon-uat.azurewebsites.net" == origin || "https://vodus.my" == origin || updateRecoRewardImpression(l, a.rewardsAdDemographicStateId, a.rewardsAdDemographicAgeId, a.rewardsAdDemographicEthnicityId, a.rewardsAdDemographicGenderId, a.rewardsAdSubgroupId, a.partnerId, a.partnerWebsiteId, o.productRecoId, a.serverlessUrl) }, submitCloseResponse: function e() { if (closeAllVodusModal(), $("#vodus_tag").remove(), $("#vodusQuestionModal").modal("hide"), $("#vodusLoginModal").modal("hide"), $(".modal-backdrop").remove(), "http://localhost:63828" == origin || "https://voupon-uat.azurewebsites.net" == origin || "https://vodus.my" == origin) { vodus.log("Skipping close count"); return } var t = vodus.readCookie(app.cookieName), a = vodus.readCookie("vodus_temp_token"); if (null == t && null == a) { vodus.log("Invalid token/temp token no close response updated", app.logStatus.warning); return } var o = { partnerCode: app.partner_code, token: t, tempToken: a, interval: app.interval, ccType: app.ccType }; $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(o), url: app.serverlessUrl + "/api/submitCloseResponse", success: function (e) { vodus.log("Close response submitted"); let t = localStorage.getItem("memberProfile"); if (null != t) { let a = JSON.parse(t); a.ctcLastUpdatedAt = new Date, localStorage.setItem("memberProfile", JSON.stringify(a)) } }, error: function (e) { vodus.log(e, app.logStatus.error), ResponseCloseCheckIsSurveyFallbackScript(app.isSurveyFallbackScript, app.GAMAdUnitId, !1) } }), ResponseCloseCheckIsSurveyFallbackScript(app.isSurveyFallbackScript, app.GAMAdUnitId, !1) }, emailLogin: function e(t, a, o, n) { toastr.clear(); var i = vodus.readCookie(app.cookieName), r = ""; app.isFingerprintingEnabled && (r = vodus.readCookie("vodus_device_id")); var s = { partnerCode: app.partner_code, token: i, email: t, password: a, loginProvider: o, externalUserId: vodus.getExternalUserId(), thirdPartyToken: n, deviceId: r }; if ("email" == s.loginProvider && (0 === s.email.length || 0 === s.password.length)) return "ms" == app.language ? toastr.error("E-mel dan kata laluan diperlukan") : "zh" == app.language ? toastr.error("需要输入电子邮件和密码") : toastr.error("Email and password are required"), !1; $("#btnVodusLogin").prop("disabled", !0), $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(s), url: app.rootUrl + "v1/authentication/EmailLogin", success: function (e) { if ($("#btnVodusLogin").prop("disabled", !1), !e.successful) return $("#vodusLoginLoader").hide(), "ms" == app.language ? toastr.error("Butiran log masuk anda tidak sah") : "zh" == app.language ? toastr.error("无效的登录信息") : toastr.error("Invalid login details"), !1; if ("ms" == app.language ? toastr.success("", '<h4 style="padding:0 15px">Anda telah berjaya log masuk ke akaun Vodus anda</h4>') : "zh" == app.language ? toastr.success("", '<h4 style="padding:0 15px">您已成功登录Vodus帐户</h4>') : toastr.success("", '<h4 style="padding:0 15px">You have successfully logged in to your Vodus account</h4>'), $("#toast-container").addClass("vodus-responded-toast"), app.isLoggedin = !0, i = e.data.Token, vodus.createCookie(app.cookieName, i, 3650), app.preferredLanguage = e.data.PreferredLanguage, app.skip3PCheck = !0, app.usesLocalStorage) { let t = localStorage.getItem("memberProfile"); null != t && ((localMemberProfileObject = JSON.parse(t)).token = e.data.token, localStorage.setItem("memberProfile", JSON.stringify(localMemberProfileObject))) } if (app.thirdPartyEnabled) { 0 === $("#vodus_3PTest").length && $("<div>").attr({ class: "", id: "vodus_3PTest" }).appendTo("body"), 0 === $("#reward_3PTest").length && $("<div>").attr({ class: "", id: "vodus_3PTest" }).appendTo("body"); var a = ""; a = vodus.getLanguageCode(), vodus.log("Logging in.."), $("#vodus_3PTest").html('<iframe id="vodus3PTest" width="0" height="0"  src="' + app.vodus3PRootUrl + "/v1/token/create?partnerCode=" + app.partner_code + "&token=" + i + '" frameborder="0" allowfullscreen></iframe>'), $("#reward_3PTest").html('<iframe id="rewardVodus3PTest" width="0" height="0"  src="' + app.reward3PRootUrl + "/token/create-temporary-points?points=" + e.data.Points + "&language=" + app.preferredLanguage + "&login=1&loginProvider=" + o + "&thirdPartyToken=" + n + "&loginToken=" + e.data.LoginDataSync + "&token=" + i + "&partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#api_3PTest").html('<iframe id="apiVodus3PTest" width="0" height="0"  src="' + app.rootUrl + "/token/sync?points=" + e.data.Points + "&token=" + i + "&partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'), rewardLoginCallback.length > 0 ? (closeAllVodusModal(), vodus.log("Executing callback -> " + rewardLoginCallback), $("#rewardVodus3PTest").on("load", function () { window[rewardLoginCallback].apply(this, rewardLoginArgument), window.vodus = vodus })) : $("#rewardVodus3PTest").on("load", function () { closeAllVodusModal(), vodus.getQuestion() }) } else rewardLoginCallback.length > 0 && $("#rewardVodus3PTest").on("load", function () { vodus.log("Executing callback -> " + rewardLoginCallback), window[rewardLoginCallback].apply(this, rewardLoginArgument), window.vodus = vodus, vodus.getQuestion() }), closeAllVodusModal(), vodus.getQuestion() }, error: function (e) { $("#vodusLoginLoader").hide(), vodus.log(e, app.logStatus.error) } }) }, partnerDataSync: function e() { var t = vodus.readCookie(app.cookieName), a = { partnerData: vodus.getPartnerData(), token: t }; if (0 === a.token.length || 0 === a.partnerData.length) return vodus.log("Invalid sync request", app.logStatus.error), !1; $("#vodusLoginLoader").show(), $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(a), url: app.rootUrl + "v1/survey/PartnerDataSync", success: function (e) { e.successful || vodus.log(e.message), $("#vodusLoginLoader").hide() }, error: function (e) { $("#vodusLoginLoader").hide(), vodus.log(e, app.logStatus.error) } }) } }, cssChecking = function e() { $("head").append($('<link rel="stylesheet" type="text/css" href="' + app.cdnUrl + "/cc/scripts/plugins/bootstrap-vodus/css/bootstrap-vodus.css" + app.cacheCode + '" />')), $("head").append($('<link rel="stylesheet" type="text/css" href="' + app.cdnUrl + "/cc/scripts/plugins/tingle/tingle.css" + app.cacheCode + '" />')), $("head").append($('<link rel="stylesheet" type="text/css" href="' + app.cdnUrl + "/cc/css/creator/survey.css" + app.cacheCode + '" />')), $("head").append($('<link rel="stylesheet" type="text/css" href="' + app.cdnUrl + "/cc/scripts/plugins/toastr/toastr.min.css" + app.cacheCode + '" />')), $("head").append($('<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>')), $("head").append($('<script src="//cdnjs.cloudflare.com/ajax/libs/tingle/0.13.2/tingle.min.js"></script>')), window.i18Next || ($("head").append($('<script src="//cdnjs.cloudflare.com/ajax/libs/i18next/8.4.3/i18next.min.js"></script>')), $("head").append($('<script src="//cdnjs.cloudflare.com/ajax/libs/jquery-i18next/1.2.0/jquery-i18next.min.js"></script>'))); var t = navigator.userAgent; /IEMobile|Windows Phone|Lumia/i.test(t) || /iPhone|iP[oa]d/.test(t) || /Android/.test(t) || /BlackBerry|PlayBook|BB10/.test(t) || /Mobile Safari/.test(t) || /webOS|Mobile|Tablet|Opera Mini|\bCrMo\/|Opera Mobi/i.test(t) }, initializeAllTheCssAndJavascriptFiles = function e() { var t = document.getElementsByTagName("script"); t[t.length - 1], document.createElement("script"); var a = document.createElement("script"), o = document.createElement("script"); o.type = "text/javascript", o.src = app.cdnUrl + "/cc/scripts/vodus-common.js" + app.cacheCode, document.getElementsByTagName("head")[0].appendChild(o), app.debug ? (console.log("Vodus => Debugging enabled"), console.log(app)) : console.log("Vodus => Debugging not enabled"); var n = !1; if (window.jQuery ? n = !0 : (n = !1, console.log("jquery not available")), "function" == typeof $ || (n = !1), n) { if (cssChecking(), "function" == typeof $().emulateTransitionEnd) vodus.thirdPartyTest(app.thirdPartyTestType.firstLoad); else { var i = document.createElement("script"); i.type = "text/javascript", i.src = "https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" + app.cacheCode, document.getElementsByTagName("head")[0].appendChild(i), i.onload = function () { vodus.thirdPartyTest(app.thirdPartyTestType.firstLoad) } } var r = document.createElement("script"); r.type = "text/javascript", r.src = "//code.jquery.com/ui/1.12.1/jquery-ui.min.js", r.className = "vodus-include", document.getElementsByTagName("head")[0].appendChild(r), r.onload = function () { var e = document.createElement("script"); e.type = "text/javascript", e.src = "//cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js", e.className = "vodus-include", document.getElementsByTagName("head")[0].appendChild(e) }, $("head").append($('<meta name="google-signin-scope" content="profile email">')), $("head").append($('<meta name="google-signin-client_id" content="700069321358-1t3lj52il4lrfcbffo31qbj78b46dind.apps.googleusercontent.com">')), $("head").append($('<script src="https://apis.google.com/js/platform.js" async defer></script>')) } else a.type = "text/javascript", a.src = "//code.jquery.com/jquery-2.1.1.min.js", a.className = "vodus-include", document.getElementsByTagName("head")[0].appendChild(a), app.debug && console.log("Missing jquery (Adding jquery.js...)", app.logStatus.warning), a.onload = function () { if (cssChecking(), "function" == typeof $().emulateTransitionEnd) app.debug && (vodus.log("Bootstrap js available (Skip bootstrap js adding)"), vodus.thirdPartyTest(app.thirdPartyTestType.firstLoad)); else { app.debug && vodus.log("Missing bootstrap.js (Adding bootstrap.js...)", app.logStatus.warning); var e = document.createElement("script"); e.type = "text/javascript", e.src = "https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" + app.cacheCode, document.getElementsByTagName("head")[0].appendChild(e), e.onload = function () { vodus.thirdPartyTest(app.thirdPartyTestType.firstLoad) } } var t = document.createElement("script"); t.type = "text/javascript", t.src = "//code.jquery.com/ui/1.13.2/jquery-ui.min.js", t.className = "vodus-include", document.getElementsByTagName("head")[0].appendChild(t), t.onload = function () { var e = document.createElement("script"); e.type = "text/javascript", e.src = "//cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js", e.className = "vodus-include", document.getElementsByTagName("head")[0].appendChild(e) }, $("head").append($('<meta name="google-signin-scope" content="profile email">')), $("head").append($('<meta name="google-signin-client_id" content="700069321358-1t3lj52il4lrfcbffo31qbj78b46dind.apps.googleusercontent.com">')), $("head").append($('<script src="https://apis.google.com/js/platform.js" async defer></script>')) } }, init = function e() { console.log("Starting Vodus in 3"), setTimeout(function () { vodus.generateFingerPrint() }, 3e3) }, thirdPartyTest = function e() { if (app.skip3PCheck) vodus.log("GetQuestion: Skipping 3P"), vodus.initCallback(); else { 0 == $("#vodus3PTester").length && $("<div>").attr({ class: "", id: "vodus3PTester" }).appendTo("body"), $("#vodus3PTester").html('<iframe id="tester" src="' + app.vodus3PRootUrl + '/thirdparty-cookie-check-start.html" style="display:none" />'); var t = function e(a) { if (a.origin == app.vodus3PRootUrl) { if (a.origin.indexOf("goog") > 0); else if ("MM:3PCunsupported" === a.data) window.removeEventListener("message", t, !1), app.thirdPartyEnabled = !1, app.skip3PCheck = !0, vodus.initCallback(); else if ("MM:3PCsupported" === a.data) { function o(e) { if (e.origin == app.vodus3PRootUrl) { if (e.origin.indexOf("goog") > 1) vodus.log("invalid post message", app.logStatus.warning); else { window.removeEventListener("message", o, !1); var t = $("<div>").html(e.data.trim()).text(); vodus.createCookie(app.cookieName, t, 3650), app.thirdPartyEnabled = !0, vodus.getQuestionBeforeInternal() } } } window.removeEventListener("message", t, !1), app.skip3PCheck = !0, 0 == $("#vodus3PCookie").length && $("<div>").attr({ class: "", id: "vodus3PCookie" }).appendTo("body"), $("#vodus3PCookie").html('<iframe id="vodusIframe" width="0" height="0"  src="' + app.vodus3PRootUrl + "/v1/token/serverless?partnerCode=" + app.partner_code + '" frameborder="0" allowfullscreen></iframe>'), $("#vodusIframe").on("load", function () { document.getElementById("vodusIframe").contentWindow.postMessage("hello", "*") }), window.addEventListener("message", o, !1) } } }; window.addEventListener("message", t, !1) } }; window.vodus = vodus, window.vodusInit = init, window.vodusInit() }(this), window.onresize = function () { repositionMobileImage($(".tingle-modal-box")) }; var GlobalParameter, globalGoogleUser, auth2, signinChanged = function (e) { }, userChanged = function (e) { e.getId() && (globalGoogleUser = e) }; function scrollFunction(e) { if (e.isBannerMode) { if ("mobile-app" == e.viewType) { vodus.getCC(), e.isCCPageScrollTriggered = !0; var t = $(window).scrollTop(); scrollToBannerDiv(t) } else { var a = $(window).scrollTop(), o = $(window).height(), n = a + o; if ($(".vodus-banner").offset().top - n <= o && !e.isCCPageScrollTriggered) { vodus.getCC(), e.isCCPageScrollTriggered = !0; var t = $(window).scrollTop(); scrollToBannerDiv(t) } } } else { var i = $(window).scrollTop(), o = $(document).height() - $(window).height(); i / o * 100 > e.ccPageScrollTrigger && !e.isCCPageScrollTriggered && (vodus.getCC(), e.isCCPageScrollTriggered = !0) } } function NoCCCheckIsSurveyFallbackScript(e, t) { if ($(".vodus-banner").length > 0) { if ("" != t && void 0 != t && "" == $(".vodus-banner").html() && "1" == e) { vodus.log("Displaying Fallback Ad"); var a = document.getElementById(t); $(".vodus-gam-div-style").remove(), $(".vodus-banner").hide() } else if ($(".vodus-banner-tag").length > 0 && "" == $(".vodus-banner").html() && "1" == e) { vodus.log("Displaying Fallback Ad"); var a = $(".vodus-banner-tag"); $(a).show(), $(".vodus-banner").hide() } } } function ResponseCloseCheckIsSurveyFallbackScript(e, t, a) { if ($(".vodus-banner").length > 0) { if ("" != t && void 0 != t && "1" == e) { if (a) setTimeout(function () { vodus.log("Displaying Fallback Ad"), document.getElementById(t), $(".vodus-gam-div-style").remove(), $(".vodus-banner").hide() }, 1e4); else { vodus.log("Displaying Fallback Ad"); var o = document.getElementById(t); $(".vodus-gam-div-style").remove(), $(".vodus-banner").hide() } } else if ($(".vodus-banner-tag").length > 0 && "1" == e) { if (a) setTimeout(function () { vodus.log("Displaying Fallback Ad"); var e = $(".vodus-banner-tag"); $(e).show(), $(".vodus-banner").hide() }, 1e4); else { vodus.log("Displaying Fallback Ad"); var o = $(".vodus-banner-tag"); $(o).show(), $(".vodus-banner").hide() } } } } function updateRecoRewardImpression(e, t, a, o, n, i, r, s, l, d) { $.ajax({ type: "POST", dataType: "json", async: !0, global: !1, contentType: "application/json; charset=utf-8", data: JSON.stringify({ MemberProfileId: e, DemographicstateId: t, DemographicAgeId: a, DemographicEthnicityId: o, DemographicGenderId: n, SubgroupId: i, PartnerId: r, PartnerWebsiteId: s, ProductRecoId: l }), url: d + "api/updateRecoRewardImpression", success: function (e) { e.successful && vodus.log(e.message) }, error: function (e) { } }) } function logDelay(e, t, a, o, n, i, r, s, l) { $.ajax({ type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ MemberProfileId: r, Browser: l, ResponseQuestion: e, ResponseSubmit: t, TimeSpent: a, FunctionType: o, Is3POn: i, PartnerCode: s }), url: n + "api/sendErrorLogFunction", success: function (e) { e.successful && vodus.log(e.message) }, error: function (e) { vodus.log(e) } }) } function getBrowser() { if (-1 != (navigator.userAgent.indexOf("Opera") || navigator.userAgent.indexOf("OPR"))) return "Opera"; if (-1 != navigator.userAgent.indexOf("Chrome")) return "Chrome"; if (-1 != navigator.userAgent.indexOf("Safari")) return "Safari"; if (-1 != navigator.userAgent.indexOf("Firefox")) return "Firefox"; if (-1 != navigator.userAgent.indexOf("MSIE") || !0 == !!document.documentMode) return "IE"; else return "Unknown" }
